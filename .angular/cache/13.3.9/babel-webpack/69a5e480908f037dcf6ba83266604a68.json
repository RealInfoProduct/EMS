{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\nconst _c0 = [\"container\"];\nconst _c1 = [\"resizeHelper\"];\nconst _c2 = [\"reorderIndicatorUp\"];\nconst _c3 = [\"reorderIndicatorDown\"];\nconst _c4 = [\"wrapper\"];\nconst _c5 = [\"table\"];\nconst _c6 = [\"tableHeader\"];\n\nfunction Table_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"i\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"p-datatable-loading-icon pi-spin \" + ctx_r1.loadingIcon);\n  }\n}\n\nfunction Table_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, Table_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.captionTemplate);\n  }\n}\n\nfunction Table_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 17);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onPageChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r3.rows)(\"first\", ctx_r3.first)(\"totalRecords\", ctx_r3.totalRecords)(\"pageLinkSize\", ctx_r3.pageLinks)(\"alwaysShow\", ctx_r3.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r3.rowsPerPageOptions)(\"templateLeft\", ctx_r3.paginatorLeftTemplate)(\"templateRight\", ctx_r3.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r3.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r3.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r3.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r3.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r3.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r3.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r3.showJumpToPageDropdown)(\"showJumpToPageInput\", ctx_r3.showJumpToPageInput)(\"showPageLinks\", ctx_r3.showPageLinks);\n  }\n}\n\nfunction Table_table_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_table_7_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_table_7_tbody_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tbody\", 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r18.frozenValue)(\"frozenRows\", true)(\"pTableBody\", ctx_r18.columns)(\"pTableBodyTemplate\", ctx_r18.frozenBodyTemplate)(\"frozen\", true);\n  }\n}\n\nfunction Table_table_7_tfoot_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c7 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Table_table_7_tfoot_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 26);\n    i0.ɵɵtemplate(1, Table_table_7_tfoot_7_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r19.footerGroupedTemplate || ctx_r19.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r19.columns));\n  }\n}\n\nfunction Table_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 18, 19);\n    i0.ɵɵtemplate(2, Table_table_7_ng_container_2_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementStart(3, \"thead\", 21);\n    i0.ɵɵtemplate(4, Table_table_7_ng_container_4_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, Table_table_7_tbody_5_Template, 1, 5, \"tbody\", 22);\n    i0.ɵɵelement(6, \"tbody\", 23);\n    i0.ɵɵtemplate(7, Table_table_7_tfoot_7_Template, 2, 4, \"tfoot\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.tableStyleClass)(\"ngStyle\", ctx_r5.tableStyle);\n    i0.ɵɵattribute(\"id\", ctx_r5.id + \"-table\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.headerGroupedTemplate || ctx_r5.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(14, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.frozenValue || ctx_r5.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.dataToRender)(\"pTableBody\", ctx_r5.columns)(\"pTableBodyTemplate\", ctx_r5.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.footerGroupedTemplate || ctx_r5.footerTemplate);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tbody_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tbody\", 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r25.frozenValue)(\"frozenRows\", true)(\"pTableBody\", ctx_r25.columns)(\"pTableBodyTemplate\", ctx_r25.bodyTemplate)(\"frozen\", true);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tfoot_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tfoot_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 26);\n    i0.ɵɵtemplate(1, Table_cdk_virtual_scroll_viewport_8_tfoot_9_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r26.footerGroupedTemplate || ctx_r26.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r26.columns));\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 27);\n    i0.ɵɵlistener(\"scrolledIndexChange\", function Table_cdk_virtual_scroll_viewport_8_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.onScrollIndexChange($event);\n    });\n    i0.ɵɵelementStart(1, \"table\", 18, 19);\n    i0.ɵɵtemplate(3, Table_cdk_virtual_scroll_viewport_8_ng_container_3_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementStart(4, \"thead\", 21, 28);\n    i0.ɵɵtemplate(6, Table_cdk_virtual_scroll_viewport_8_ng_container_6_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, Table_cdk_virtual_scroll_viewport_8_tbody_7_Template, 1, 5, \"tbody\", 22);\n    i0.ɵɵelement(8, \"tbody\", 23);\n    i0.ɵɵtemplate(9, Table_cdk_virtual_scroll_viewport_8_tfoot_9_Template, 2, 4, \"tfoot\", 24);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r6.scrollHeight !== \"flex\" ? ctx_r6.scrollHeight : undefined);\n    i0.ɵɵproperty(\"itemSize\", ctx_r6.virtualRowHeight)(\"minBufferPx\", ctx_r6.minBufferPx)(\"maxBufferPx\", ctx_r6.maxBufferPx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.tableStyleClass)(\"ngStyle\", ctx_r6.tableStyle);\n    i0.ɵɵattribute(\"id\", ctx_r6.id + \"-table\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(17, _c7, ctx_r6.columns));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.headerGroupedTemplate || ctx_r6.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c7, ctx_r6.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.frozenValue || ctx_r6.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.dataToRender)(\"pTableBody\", ctx_r6.columns)(\"pTableBodyTemplate\", ctx_r6.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.footerGroupedTemplate || ctx_r6.footerTemplate);\n  }\n}\n\nfunction Table_p_paginator_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 29);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_9_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.onPageChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r7.rows)(\"first\", ctx_r7.first)(\"totalRecords\", ctx_r7.totalRecords)(\"pageLinkSize\", ctx_r7.pageLinks)(\"alwaysShow\", ctx_r7.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r7.rowsPerPageOptions)(\"templateLeft\", ctx_r7.paginatorLeftTemplate)(\"templateRight\", ctx_r7.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r7.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r7.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r7.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r7.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r7.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r7.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r7.showJumpToPageDropdown)(\"showJumpToPageInput\", ctx_r7.showJumpToPageInput)(\"showPageLinks\", ctx_r7.showPageLinks);\n  }\n}\n\nfunction Table_div_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, Table_div_10_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.summaryTemplate);\n  }\n}\n\nfunction Table_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 31, 32);\n  }\n}\n\nfunction Table_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 33, 34);\n  }\n}\n\nfunction Table_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35, 36);\n  }\n}\n\nconst _c8 = function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n  return {\n    \"p-datatable p-component\": true,\n    \"p-datatable-hoverable-rows\": a1,\n    \"p-datatable-auto-layout\": a2,\n    \"p-datatable-resizable\": a3,\n    \"p-datatable-resizable-fit\": a4,\n    \"p-datatable-scrollable\": a5,\n    \"p-datatable-scrollable-vertical\": a6,\n    \"p-datatable-scrollable-horizontal\": a7,\n    \"p-datatable-scrollable-both\": a8,\n    \"p-datatable-flex-scrollable\": a9,\n    \"p-datatable-responsive-stack\": a10,\n    \"p-datatable-responsive-scroll\": a11,\n    \"p-datatable-responsive\": a12,\n    \"p-datatable-grouped-header\": a13,\n    \"p-datatable-grouped-footer\": a14\n  };\n};\n\nconst _c9 = function (a0) {\n  return {\n    height: a0\n  };\n};\n\nconst _c10 = [\"pTableBody\", \"\"];\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c11 = function (a0, a1, a2, a3, a4) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3,\n    frozen: a4\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r14.$implicit;\n    const rowIndex_r8 = ctx_r14.index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.dt.groupHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r9.dt.paginator ? ctx_r9.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r9.columns, ctx_r9.dt.editMode === \"row\" && ctx_r9.dt.isRowEditing(rowData_r7), ctx_r9.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r16.$implicit;\n    const rowIndex_r8 = ctx_r16.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r10.dt.paginator ? ctx_r10.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r10.columns, ctx_r10.dt.editMode === \"row\" && ctx_r10.dt.isRowEditing(rowData_r7), ctx_r10.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c12 = function (a0, a1, a2, a3, a4, a5, a6) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3,\n    frozen: a4,\n    rowgroup: a5,\n    rowspan: a6\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r18.$implicit;\n    const rowIndex_r8 = ctx_r18.index;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction7(2, _c12, rowData_r7, ctx_r11.dt.paginator ? ctx_r11.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r11.columns, ctx_r11.dt.editMode === \"row\" && ctx_r11.dt.isRowEditing(rowData_r7), ctx_r11.frozen, ctx_r11.shouldRenderRowspan(ctx_r11.value, rowData_r7, rowIndex_r8), ctx_r11.calculateRowGroupSize(ctx_r11.value, rowData_r7, rowIndex_r8)));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r20.$implicit;\n    const rowIndex_r8 = ctx_r20.index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.dt.groupFooterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r12.dt.paginator ? ctx_r12.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r12.columns, ctx_r12.dt.editMode === \"row\" && ctx_r12.dt.isRowEditing(rowData_r7), ctx_r12.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_0_ng_template_1_ng_container_0_Template, 2, 8, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_1_Template, 2, 8, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, TableBody_ng_container_0_ng_template_1_ng_container_2_Template, 2, 10, \"ng-container\", 0);\n    i0.ɵɵtemplate(3, TableBody_ng_container_0_ng_template_1_ng_container_3_Template, 2, 8, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    const rowData_r7 = ctx.$implicit;\n    const rowIndex_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.groupHeaderTemplate && ctx_r6.dt.rowGroupMode === \"subheader\" && ctx_r6.shouldRenderRowGroupHeader(ctx_r6.value, rowData_r7, rowIndex_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.rowGroupMode !== \"rowspan\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.rowGroupMode === \"rowspan\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.groupFooterTemplate && ctx_r6.dt.rowGroupMode === \"subheader\" && ctx_r6.shouldRenderRowGroupFooter(ctx_r6.value, rowData_r7, rowIndex_r8));\n  }\n}\n\nfunction TableBody_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_Template, 4, 4, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.value)(\"ngForTrackBy\", ctx_r0.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n  }\n\n  if (rf & 2) {\n    const rowData_r22 = ctx.$implicit;\n    const rowIndex_r23 = ctx.index;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", rowData_r22 ? ctx_r21.template : ctx_r21.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r22, ctx_r21.dt.paginator ? ctx_r21.dt.first + rowIndex_r23 : rowIndex_r23, ctx_r21.columns, ctx_r21.dt.editMode === \"row\" && ctx_r21.dt.isRowEditing(rowData_r22), ctx_r21.frozen));\n  }\n}\n\nfunction TableBody_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_1_ng_template_1_Template, 1, 8, \"ng-template\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r1.dt.filteredValue || ctx_r1.dt.value)(\"cdkVirtualForTrackBy\", ctx_r1.dt.rowTrackBy)(\"cdkVirtualForTemplateCacheSize\", 0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c13 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    expanded: a3,\n    editing: a4,\n    frozen: a5\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext();\n    const rowData_r26 = ctx_r32.$implicit;\n    const rowIndex_r27 = ctx_r32.index;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r28.dt.paginator ? ctx_r28.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r28.columns, ctx_r28.dt.isRowExpanded(rowData_r26), ctx_r28.dt.editMode === \"row\" && ctx_r28.dt.isRowEditing(rowData_r26), ctx_r28.frozen));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext();\n    const rowData_r26 = ctx_r34.$implicit;\n    const rowIndex_r27 = ctx_r34.index;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r29.dt.groupHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r29.dt.paginator ? ctx_r29.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r29.columns, ctx_r29.dt.isRowExpanded(rowData_r26), ctx_r29.dt.editMode === \"row\" && ctx_r29.dt.isRowEditing(rowData_r26), ctx_r29.frozen));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    const rowData_r26 = ctx_r38.$implicit;\n    const rowIndex_r27 = ctx_r38.index;\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r36.dt.groupFooterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r36.dt.paginator ? ctx_r36.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r36.columns, ctx_r36.dt.isRowExpanded(rowData_r26), ctx_r36.dt.editMode === \"row\" && ctx_r36.dt.isRowEditing(rowData_r26), ctx_r36.frozen));\n  }\n}\n\nconst _c14 = function (a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    frozen: a3\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_Template, 2, 9, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext();\n    const rowData_r26 = ctx_r39.$implicit;\n    const rowIndex_r27 = ctx_r39.index;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r30.dt.expandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(3, _c14, rowData_r26, ctx_r30.dt.paginator ? ctx_r30.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r30.columns, ctx_r30.frozen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.dt.groupFooterTemplate && ctx_r30.dt.rowGroupMode === \"subheader\" && ctx_r30.shouldRenderRowGroupFooter(ctx_r30.value, rowData_r26, rowIndex_r27));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_2_ng_template_1_ng_container_0_Template, 2, 9, \"ng-container\", 0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_Template, 2, 9, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, TableBody_ng_container_2_ng_template_1_ng_container_2_Template, 3, 8, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    const rowData_r26 = ctx.$implicit;\n    const rowIndex_r27 = ctx.index;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r25.dt.groupHeaderTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.dt.groupHeaderTemplate && ctx_r25.dt.rowGroupMode === \"subheader\" && ctx_r25.shouldRenderRowGroupHeader(ctx_r25.value, rowData_r26, rowIndex_r27));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.dt.isRowExpanded(rowData_r26));\n  }\n}\n\nfunction TableBody_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_Template, 3, 3, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.value)(\"ngForTrackBy\", ctx_r2.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext();\n    const rowData_r41 = ctx_r46.$implicit;\n    const rowIndex_r42 = ctx_r46.index;\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r44.dt.frozenExpandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c14, rowData_r41, ctx_r44.dt.paginator ? ctx_r44.dt.first + rowIndex_r42 : rowIndex_r42, ctx_r44.columns, ctx_r44.frozen));\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_Template, 2, 7, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    const rowData_r41 = ctx.$implicit;\n    const rowIndex_r42 = ctx.index;\n    const ctx_r40 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r40.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(3, _c13, rowData_r41, ctx_r40.dt.paginator ? ctx_r40.dt.first + rowIndex_r42 : rowIndex_r42, ctx_r40.columns, ctx_r40.dt.isRowExpanded(rowData_r41), ctx_r40.dt.editMode === \"row\" && ctx_r40.dt.isRowEditing(rowData_r41), ctx_r40.frozen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r40.dt.isRowExpanded(rowData_r41));\n  }\n}\n\nfunction TableBody_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_Template, 2, 10, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.value)(\"ngForTrackBy\", ctx_r3.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    frozen: a1\n  };\n};\n\nfunction TableBody_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r4.columns, ctx_r4.frozen));\n  }\n}\n\nfunction TableBody_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.dt.emptyMessageTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r5.columns, ctx_r5.frozen));\n  }\n}\n\nfunction SortIcon_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getBadgeValue());\n  }\n}\n\nconst _c16 = function (a0, a1, a2) {\n  return {\n    \"pi-sort-amount-up-alt\": a0,\n    \"pi-sort-amount-down\": a1,\n    \"pi-sort-alt\": a2\n  };\n};\n\nfunction CellEditor_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\n\nfunction CellEditor_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.outputTemplate);\n  }\n}\n\nconst _c17 = function (a0, a1) {\n  return {\n    \"p-radiobutton-focused\": a0,\n    \"p-radiobutton-disabled\": a1\n  };\n};\n\nconst _c18 = function (a1, a2, a3) {\n  return {\n    \"p-radiobutton-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nconst _c19 = function (a0, a1) {\n  return {\n    \"p-checkbox-focused\": a0,\n    \"p-checkbox-disabled\": a1\n  };\n};\n\nconst _c20 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nconst _c21 = function (a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nconst _c22 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c23 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    filterCallback: a1\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c23, ctx_r0.filterConstraint.value, ctx_r0.filterCallback));\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 8);\n    i0.ɵɵlistener(\"input\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onModelChange($event.target.value);\n    })(\"keydown.enter\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onTextInputEnterKeyDown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r4.filterConstraint == null ? null : ctx_r4.filterConstraint.value);\n    i0.ɵɵattribute(\"placeholder\", ctx_r4.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onModelChange($event);\n    })(\"onKeyDown\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_onKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onNumericInputKeyDown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.filterConstraint == null ? null : ctx_r5.filterConstraint.value)(\"showButtons\", true)(\"minFractionDigits\", ctx_r5.minFractionDigits)(\"maxFractionDigits\", ctx_r5.maxFractionDigits)(\"prefix\", ctx_r5.prefix)(\"suffix\", ctx_r5.suffix)(\"placeholder\", ctx_r5.placeholder)(\"mode\", ctx_r5.currency ? \"currency\" : \"decimal\")(\"locale\", ctx_r5.locale)(\"localeMatcher\", ctx_r5.localeMatcher)(\"currency\", ctx_r5.currency)(\"currencyDisplay\", ctx_r5.currencyDisplay)(\"useGrouping\", ctx_r5.useGrouping);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-triStateCheckbox\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template_p_triStateCheckbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.filterConstraint == null ? null : ctx_r6.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_calendar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-calendar\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_calendar_4_Template_p_calendar_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.placeholder)(\"ngModel\", ctx_r7.filterConstraint == null ? null : ctx_r7.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_input_1_Template, 1, 2, \"input\", 4);\n    i0.ɵɵtemplate(2, ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template, 1, 13, \"p-inputNumber\", 5);\n    i0.ɵɵtemplate(3, ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template, 1, 1, \"p-triStateCheckbox\", 6);\n    i0.ɵɵtemplate(4, ColumnFilterFormElement_ng_template_1_p_calendar_4_Template, 1, 2, \"p-calendar\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n\nconst _c24 = [\"icon\"];\n\nfunction ColumnFilter_p_columnFilterFormElement_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-columnFilterFormElement\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"type\", ctx_r0.type)(\"field\", ctx_r0.field)(\"filterConstraint\", ctx_r0.dt.filters[ctx_r0.field])(\"filterTemplate\", ctx_r0.filterTemplate)(\"placeholder\", ctx_r0.placeholder)(\"minFractionDigits\", ctx_r0.minFractionDigits)(\"maxFractionDigits\", ctx_r0.maxFractionDigits)(\"prefix\", ctx_r0.prefix)(\"suffix\", ctx_r0.suffix)(\"locale\", ctx_r0.locale)(\"localeMatcher\", ctx_r0.localeMatcher)(\"currency\", ctx_r0.currency)(\"currencyDisplay\", ctx_r0.currencyDisplay)(\"useGrouping\", ctx_r0.useGrouping);\n  }\n}\n\nconst _c25 = function (a0, a1) {\n  return {\n    \"p-column-filter-menu-button-open\": a0,\n    \"p-column-filter-menu-button-active\": a1\n  };\n};\n\nfunction ColumnFilter_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.toggleMenu();\n    })(\"keydown\", function ColumnFilter_button_2_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onToggleButtonKeyDown($event);\n    });\n    i0.ɵɵelement(2, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c25, ctx_r1.overlayVisible, ctx_r1.hasFilter()));\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r1.overlayVisible);\n  }\n}\n\nconst _c26 = function (a0) {\n  return {\n    \"p-hidden-space\": a0\n  };\n};\n\nfunction ColumnFilter_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clearFilter();\n    });\n    i0.ɵɵelement(2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c26, !ctx_r2.hasRowFilter()));\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c27 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction ColumnFilter_div_4_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const matchMode_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.onRowMatchModeChange(matchMode_r17.value);\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return ctx_r21.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_enter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const matchMode_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return ctx_r22.onRowMatchModeChange(matchMode_r17.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const matchMode_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c27, ctx_r16.isRowMatchModeSelected(matchMode_r17.value)));\n    i0.ɵɵattribute(\"tabindex\", i_r18 === 0 ? \"0\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(matchMode_r17.label);\n  }\n}\n\nfunction ColumnFilter_div_4_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 15);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ul_2_li_1_Template, 2, 5, \"li\", 16);\n    i0.ɵɵelement(2, \"li\", 17);\n    i0.ɵɵelementStart(3, \"li\", 18);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_Template_li_click_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onRowClearItemClick();\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_Template_li_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_Template_li_keydown_enter_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.onRowClearItemClick();\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.matchModes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.noFilterLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"p-dropdown\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_0_Template_p_dropdown_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return ctx_r32.onOperatorChange($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r27.operatorOptions)(\"ngModel\", ctx_r27.operator);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(3);\n      return ctx_r38.onMenuMatchModeChange($event, fieldConstraint_r34);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n    const ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"options\", ctx_r36.matchModes)(\"ngModel\", fieldConstraint_r34.matchMode);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_2_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(3);\n      return ctx_r42.removeConstraint(fieldConstraint_r34);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"label\", ctx_r37.removeRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template, 1, 2, \"p-dropdown\", 30);\n    i0.ɵɵelement(2, \"p-columnFilterFormElement\", 31);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtemplate(4, ColumnFilter_div_4_ng_template_3_div_2_button_4_Template, 1, 1, \"button\", 32);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const fieldConstraint_r34 = ctx.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showMatchModes && ctx_r28.matchModes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r28.type)(\"field\", ctx_r28.field)(\"filterConstraint\", fieldConstraint_r34)(\"filterTemplate\", ctx_r28.filterTemplate)(\"placeholder\", ctx_r28.placeholder)(\"minFractionDigits\", ctx_r28.minFractionDigits)(\"maxFractionDigits\", ctx_r28.maxFractionDigits)(\"prefix\", ctx_r28.prefix)(\"suffix\", ctx_r28.suffix)(\"locale\", ctx_r28.locale)(\"localeMatcher\", ctx_r28.localeMatcher)(\"currency\", ctx_r28.currency)(\"currencyDisplay\", ctx_r28.currencyDisplay)(\"useGrouping\", ctx_r28.useGrouping);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showRemoveIcon);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      return ctx_r45.addConstraint();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", ctx_r29.addRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext(3);\n      return ctx_r47.clearFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r30.clearButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext(3);\n      return ctx_r49.applyFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r31.applyButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ColumnFilter_div_4_ng_template_3_div_0_Template, 2, 2, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ng_template_3_div_2_Template, 5, 16, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_div_3_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_template_3_button_5_Template, 1, 1, \"button\", 25);\n    i0.ɵɵtemplate(6, ColumnFilter_div_4_ng_template_3_button_6_Template, 1, 1, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowOperator);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.fieldConstraints);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowAddConstraint);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showClearButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showApplyButton);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c28 = function (a1) {\n  return {\n    \"p-column-filter-overlay p-component p-fluid\": true,\n    \"p-column-filter-overlay-menu\": a1\n  };\n};\n\nfunction ColumnFilter_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.onContentClick();\n    })(\"@overlayAnimation.start\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return ctx_r53.onOverlayAnimationStart($event);\n    })(\"@overlayAnimation.done\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.onOverlayAnimationEnd($event);\n    })(\"keydown.escape\", function ColumnFilter_div_4_Template_div_keydown_escape_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return ctx_r55.onEscape();\n    });\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ul_2_Template, 5, 2, \"ul\", 13);\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_Template, 7, 5, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_container_5_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(4);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c28, ctx_r3.display === \"menu\"))(\"@overlayAnimation\", \"visible\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c7, ctx_r3.field));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.display === \"row\")(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r3.field));\n  }\n}\n\nconst _c29 = function (a0, a1) {\n  return {\n    \"p-column-filter-row\": a0,\n    \"p-column-filter-menu\": a1\n  };\n};\n\nclass TableService {\n  constructor() {\n    this.sortSource = new Subject();\n    this.selectionSource = new Subject();\n    this.contextMenuSource = new Subject();\n    this.valueSource = new Subject();\n    this.totalRecordsSource = new Subject();\n    this.columnsSource = new Subject();\n    this.resetSource = new Subject();\n    this.sortSource$ = this.sortSource.asObservable();\n    this.selectionSource$ = this.selectionSource.asObservable();\n    this.contextMenuSource$ = this.contextMenuSource.asObservable();\n    this.valueSource$ = this.valueSource.asObservable();\n    this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    this.columnsSource$ = this.columnsSource.asObservable();\n    this.resetSource$ = this.resetSource.asObservable();\n  }\n\n  onSort(sortMeta) {\n    this.sortSource.next(sortMeta);\n  }\n\n  onSelectionChange() {\n    this.selectionSource.next(null);\n  }\n\n  onResetChange() {\n    this.resetSource.next(null);\n  }\n\n  onContextMenu(data) {\n    this.contextMenuSource.next(data);\n  }\n\n  onValueChange(value) {\n    this.valueSource.next(value);\n  }\n\n  onTotalRecordsChange(value) {\n    this.totalRecordsSource.next(value);\n  }\n\n  onColumnsChange(columns) {\n    this.columnsSource.next(columns);\n  }\n\n}\n\nTableService.ɵfac = function TableService_Factory(t) {\n  return new (t || TableService)();\n};\n\nTableService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TableService,\n  factory: TableService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass Table {\n  constructor(el, zone, tableService, cd, filterService, overlayService) {\n    this.el = el;\n    this.zone = zone;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.filterService = filterService;\n    this.overlayService = overlayService;\n    this.pageLinks = 5;\n    this.alwaysShowPaginator = true;\n    this.paginatorPosition = 'bottom';\n    this.paginatorDropdownScrollHeight = '200px';\n    this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n    this.showFirstLastIcon = true;\n    this.showPageLinks = true;\n    this.defaultSortOrder = 1;\n    this.sortMode = 'single';\n    this.resetPageOnSort = true;\n    this.selectAllChange = new EventEmitter();\n    this.selectionChange = new EventEmitter();\n    this.contextMenuSelectionChange = new EventEmitter();\n    this.contextMenuSelectionMode = \"separate\";\n\n    this.rowTrackBy = (index, item) => item;\n\n    this.lazy = false;\n    this.lazyLoadOnInit = true;\n    this.compareSelectionBy = 'deepEquals';\n    this.csvSeparator = ',';\n    this.exportFilename = 'download';\n    this.filters = {};\n    this.filterDelay = 300;\n    this.expandedRowKeys = {};\n    this.editingRowKeys = {};\n    this.rowExpandMode = 'multiple';\n    this.scrollDirection = \"vertical\";\n    this.virtualScrollDelay = 250;\n    this.virtualRowHeight = 28;\n    this.columnResizeMode = 'fit';\n    this.loadingIcon = 'pi pi-spinner';\n    this.showLoader = true;\n    this.showInitialSortBadge = true;\n    this.stateStorage = 'session';\n    this.editMode = 'cell';\n    this.groupRowsByOrder = 1;\n    this.responsiveLayout = 'stack';\n    this.breakpoint = '960px';\n    this.onRowSelect = new EventEmitter();\n    this.onRowUnselect = new EventEmitter();\n    this.onPage = new EventEmitter();\n    this.onSort = new EventEmitter();\n    this.onFilter = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n    this.onRowExpand = new EventEmitter();\n    this.onRowCollapse = new EventEmitter();\n    this.onContextMenuSelect = new EventEmitter();\n    this.onColResize = new EventEmitter();\n    this.onColReorder = new EventEmitter();\n    this.onRowReorder = new EventEmitter();\n    this.onEditInit = new EventEmitter();\n    this.onEditComplete = new EventEmitter();\n    this.onEditCancel = new EventEmitter();\n    this.onHeaderCheckboxToggle = new EventEmitter();\n    this.sortFunction = new EventEmitter();\n    this.firstChange = new EventEmitter();\n    this.rowsChange = new EventEmitter();\n    this.onStateSave = new EventEmitter();\n    this.onStateRestore = new EventEmitter();\n    this._value = [];\n    this._totalRecords = 0;\n    this._first = 0;\n    this.selectionKeys = {};\n    this._sortOrder = 1;\n    this._selectAll = null;\n    this.columnResizing = false;\n    this.rowGroupHeaderStyleObject = {};\n    this.id = UniqueComponentId();\n    this.virtualScrollInitialized = false;\n  }\n\n  ngOnInit() {\n    if (this.lazy && this.lazyLoadOnInit) {\n      if (!this.virtualScroll) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      }\n\n      if (this.restoringFilter) {\n        this.restoringFilter = false;\n      }\n    }\n\n    if (this.responsiveLayout === 'stack' && !this.scrollable) {\n      this.createResponsiveStyle();\n    }\n\n    this.initialized = true;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'headergrouped':\n          this.headerGroupedTemplate = item.template;\n          break;\n\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n\n        case 'loadingbody':\n          this.loadingBodyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'footergrouped':\n          this.footerGroupedTemplate = item.template;\n          break;\n\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n\n        case 'rowexpansion':\n          this.expandedRowTemplate = item.template;\n          break;\n\n        case 'groupheader':\n          this.groupHeaderTemplate = item.template;\n          break;\n\n        case 'rowspan':\n          this.rowspanTemplate = item.template;\n          break;\n\n        case 'groupfooter':\n          this.groupFooterTemplate = item.template;\n          break;\n\n        case 'frozenrows':\n          this.frozenRowsTemplate = item.template;\n          break;\n\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n\n        case 'frozenrowexpansion':\n          this.frozenExpandedRowTemplate = item.template;\n          break;\n\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.isStateful() && this.resizableColumns) {\n      this.restoreColumnWidths();\n    }\n\n    if (this.scrollable && this.virtualScroll) {\n      this.virtualScrollSubscription = this.virtualScrollBody.renderedRangeStream.subscribe(range => {\n        let top = range.start * this.virtualRowHeight * -1;\n        this.tableHeaderViewChild.nativeElement.style.top = top + 'px';\n      });\n    }\n  }\n\n  ngOnChanges(simpleChange) {\n    if (simpleChange.value) {\n      if (this.isStateful() && !this.stateRestored) {\n        this.restoreState();\n      }\n\n      this._value = simpleChange.value.currentValue;\n\n      if (!this.lazy) {\n        this.totalRecords = this._value ? this._value.length : 0;\n        if (this.sortMode == 'single' && (this.sortField || this.groupRowsBy)) this.sortSingle();else if (this.sortMode == 'multiple' && (this.multiSortMeta || this.groupRowsBy)) this.sortMultiple();else if (this.hasFilter()) //sort already filters\n          this._filter();\n      }\n\n      this.tableService.onValueChange(simpleChange.value.currentValue);\n    }\n\n    if (simpleChange.columns) {\n      this._columns = simpleChange.columns.currentValue;\n      this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n      if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n        this.restoreColumnOrder();\n      }\n    }\n\n    if (simpleChange.sortField) {\n      this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.groupRowsBy) {\n      //avoid triggering lazy load prior to lazy initialization at onInit\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.sortOrder) {\n      this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.groupRowsByOrder) {\n      //avoid triggering lazy load prior to lazy initialization at onInit\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.multiSortMeta) {\n      this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n\n      if (this.sortMode === 'multiple' && (this.initialized || !this.lazy && !this.virtualScroll)) {\n        this.sortMultiple();\n      }\n    }\n\n    if (simpleChange.selection) {\n      this._selection = simpleChange.selection.currentValue;\n\n      if (!this.preventSelectionSetterPropagation) {\n        this.updateSelectionKeys();\n        this.tableService.onSelectionChange();\n      }\n\n      this.preventSelectionSetterPropagation = false;\n    }\n\n    if (simpleChange.selectAll) {\n      this._selectAll = simpleChange.selectAll.currentValue;\n\n      if (!this.preventSelectionSetterPropagation) {\n        this.updateSelectionKeys();\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n\n      this.preventSelectionSetterPropagation = false;\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  set columns(cols) {\n    this._columns = cols;\n  }\n\n  get first() {\n    return this._first;\n  }\n\n  set first(val) {\n    this._first = val;\n  }\n\n  get rows() {\n    return this._rows;\n  }\n\n  set rows(val) {\n    this._rows = val;\n  }\n\n  get totalRecords() {\n    return this._totalRecords;\n  }\n\n  set totalRecords(val) {\n    this._totalRecords = val;\n    this.tableService.onTotalRecordsChange(this._totalRecords);\n  }\n\n  get sortField() {\n    return this._sortField;\n  }\n\n  set sortField(val) {\n    this._sortField = val;\n  }\n\n  get sortOrder() {\n    return this._sortOrder;\n  }\n\n  set sortOrder(val) {\n    this._sortOrder = val;\n  }\n\n  get multiSortMeta() {\n    return this._multiSortMeta;\n  }\n\n  set multiSortMeta(val) {\n    this._multiSortMeta = val;\n  }\n\n  get selection() {\n    return this._selection;\n  }\n\n  set selection(val) {\n    this._selection = val;\n  }\n\n  get selectAll() {\n    return this._selection;\n  }\n\n  set selectAll(val) {\n    this._selection = val;\n  }\n\n  get dataToRender() {\n    let data = this.filteredValue || this.value;\n    return data ? this.paginator && !this.lazy ? data.slice(this.first, this.first + this.rows) : data : [];\n  }\n\n  updateSelectionKeys() {\n    if (this.dataKey && this._selection) {\n      this.selectionKeys = {};\n\n      if (Array.isArray(this._selection)) {\n        for (let data of this._selection) {\n          this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n        }\n      } else {\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n      }\n    }\n  }\n\n  onPageChange(event) {\n    this.first = event.first;\n    this.rows = event.rows;\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    }\n\n    this.onPage.emit({\n      first: this.first,\n      rows: this.rows\n    });\n    this.firstChange.emit(this.first);\n    this.rowsChange.emit(this.rows);\n    this.tableService.onValueChange(this.value);\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.anchorRowIndex = null;\n\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n\n  sort(event) {\n    let originalEvent = event.originalEvent;\n\n    if (this.sortMode === 'single') {\n      this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n      this._sortField = event.field;\n\n      if (this.resetPageOnSort) {\n        this._first = 0;\n        this.firstChange.emit(this._first);\n\n        if (this.scrollable) {\n          this.resetScrollTop();\n        }\n      }\n\n      this.sortSingle();\n    }\n\n    if (this.sortMode === 'multiple') {\n      let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n      let sortMeta = this.getSortMeta(event.field);\n\n      if (sortMeta) {\n        if (!metaKey) {\n          this._multiSortMeta = [{\n            field: event.field,\n            order: sortMeta.order * -1\n          }];\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n\n            if (this.scrollable) {\n              this.resetScrollTop();\n            }\n          }\n        } else {\n          sortMeta.order = sortMeta.order * -1;\n        }\n      } else {\n        if (!metaKey || !this.multiSortMeta) {\n          this._multiSortMeta = [];\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n          }\n        }\n\n        this._multiSortMeta.push({\n          field: event.field,\n          order: this.defaultSortOrder\n        });\n      }\n\n      this.sortMultiple();\n    }\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.anchorRowIndex = null;\n  }\n\n  sortSingle() {\n    let field = this.sortField || this.groupRowsBy;\n    let order = this.sortField ? this.sortOrder : this.groupRowsByOrder;\n\n    if (this.groupRowsBy && this.sortField && this.groupRowsBy !== this.sortField) {\n      this._multiSortMeta = [this.getGroupRowsMeta(), {\n        field: this.sortField,\n        order: this.sortOrder\n      }];\n      this.sortMultiple();\n      return;\n    }\n\n    if (field && order) {\n      if (this.restoringSort) {\n        this.restoringSort = false;\n      }\n\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        if (this.customSort) {\n          this.sortFunction.emit({\n            data: this.value,\n            mode: this.sortMode,\n            field: field,\n            order: order\n          });\n        } else {\n          this.value.sort((data1, data2) => {\n            let value1 = ObjectUtils.resolveFieldData(data1, field);\n            let value2 = ObjectUtils.resolveFieldData(data2, field);\n            let result = null;\n            if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n            return order * result;\n          });\n          this._value = [...this.value];\n        }\n\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n\n      let sortMeta = {\n        field: field,\n        order: order\n      };\n      this.onSort.emit(sortMeta);\n      this.tableService.onSort(sortMeta);\n    }\n  }\n\n  sortMultiple() {\n    if (this.groupRowsBy) {\n      if (!this._multiSortMeta) this._multiSortMeta = [this.getGroupRowsMeta()];else if (this.multiSortMeta[0].field !== this.groupRowsBy) this._multiSortMeta = [this.getGroupRowsMeta(), ...this._multiSortMeta];\n    }\n\n    if (this.multiSortMeta) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        if (this.customSort) {\n          this.sortFunction.emit({\n            data: this.value,\n            mode: this.sortMode,\n            multiSortMeta: this.multiSortMeta\n          });\n        } else {\n          this.value.sort((data1, data2) => {\n            return this.multisortField(data1, data2, this.multiSortMeta, 0);\n          });\n          this._value = [...this.value];\n        }\n\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n\n      this.onSort.emit({\n        multisortmeta: this.multiSortMeta\n      });\n      this.tableService.onSort(this.multiSortMeta);\n    }\n  }\n\n  multisortField(data1, data2, multiSortMeta, index) {\n    let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n    let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n    let result = null;\n    if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 == 'string' || value1 instanceof String) {\n      if (value1.localeCompare && value1 != value2) {\n        return multiSortMeta[index].order * value1.localeCompare(value2);\n      }\n    } else {\n      result = value1 < value2 ? -1 : 1;\n    }\n\n    if (value1 == value2) {\n      return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;\n    }\n\n    return multiSortMeta[index].order * result;\n  }\n\n  getSortMeta(field) {\n    if (this.multiSortMeta && this.multiSortMeta.length) {\n      for (let i = 0; i < this.multiSortMeta.length; i++) {\n        if (this.multiSortMeta[i].field === field) {\n          return this.multiSortMeta[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  isSorted(field) {\n    if (this.sortMode === 'single') {\n      return this.sortField && this.sortField === field;\n    } else if (this.sortMode === 'multiple') {\n      let sorted = false;\n\n      if (this.multiSortMeta) {\n        for (let i = 0; i < this.multiSortMeta.length; i++) {\n          if (this.multiSortMeta[i].field == field) {\n            sorted = true;\n            break;\n          }\n        }\n      }\n\n      return sorted;\n    }\n  }\n\n  handleRowClick(event) {\n    let target = event.originalEvent.target;\n    let targetNode = target.nodeName;\n    let parentNode = target.parentElement && target.parentElement.nodeName;\n\n    if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n      return;\n    }\n\n    if (this.selectionMode) {\n      let rowData = event.rowData;\n      let rowIndex = event.rowIndex;\n      this.preventSelectionSetterPropagation = true;\n\n      if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n        DomHandler.clearSelection();\n\n        if (this.rangeRowIndex != null) {\n          this.clearSelectionRange(event.originalEvent);\n        }\n\n        this.rangeRowIndex = rowIndex;\n        this.selectRange(event.originalEvent, rowIndex);\n      } else {\n        let selected = this.isSelected(rowData);\n\n        if (!selected && !this.isRowSelectable(rowData, rowIndex)) {\n          return;\n        }\n\n        let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.anchorRowIndex = rowIndex;\n        this.rangeRowIndex = rowIndex;\n\n        if (metaSelection) {\n          let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n\n          if (selected && metaKey) {\n            if (this.isSingleSelectionMode()) {\n              this._selection = null;\n              this.selectionKeys = {};\n              this.selectionChange.emit(null);\n            } else {\n              let selectionIndex = this.findIndexInSelection(rowData);\n              this._selection = this.selection.filter((val, i) => i != selectionIndex);\n              this.selectionChange.emit(this.selection);\n\n              if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n              }\n            }\n\n            this.onRowUnselect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              type: 'row'\n            });\n          } else {\n            if (this.isSingleSelectionMode()) {\n              this._selection = rowData;\n              this.selectionChange.emit(rowData);\n\n              if (dataKeyValue) {\n                this.selectionKeys = {};\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            } else if (this.isMultipleSelectionMode()) {\n              if (metaKey) {\n                this._selection = this.selection || [];\n              } else {\n                this._selection = [];\n                this.selectionKeys = {};\n              }\n\n              this._selection = [...this.selection, rowData];\n              this.selectionChange.emit(this.selection);\n\n              if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n\n            this.onRowSelect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              type: 'row',\n              index: rowIndex\n            });\n          }\n        } else {\n          if (this.selectionMode === 'single') {\n            if (selected) {\n              this._selection = null;\n              this.selectionKeys = {};\n              this.selectionChange.emit(this.selection);\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: rowIndex\n              });\n            } else {\n              this._selection = rowData;\n              this.selectionChange.emit(this.selection);\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: rowIndex\n              });\n\n              if (dataKeyValue) {\n                this.selectionKeys = {};\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n          } else if (this.selectionMode === 'multiple') {\n            if (selected) {\n              let selectionIndex = this.findIndexInSelection(rowData);\n              this._selection = this.selection.filter((val, i) => i != selectionIndex);\n              this.selectionChange.emit(this.selection);\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: rowIndex\n              });\n\n              if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n              }\n            } else {\n              this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n              this.selectionChange.emit(this.selection);\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: rowIndex\n              });\n\n              if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n          }\n        }\n      }\n\n      this.tableService.onSelectionChange();\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n\n    this.rowTouched = false;\n  }\n\n  handleRowTouchEnd(event) {\n    this.rowTouched = true;\n  }\n\n  handleRowRightClick(event) {\n    if (this.contextMenu) {\n      const rowData = event.rowData;\n      const rowIndex = event.rowIndex;\n\n      if (this.contextMenuSelectionMode === 'separate') {\n        this.contextMenuSelection = rowData;\n        this.contextMenuSelectionChange.emit(rowData);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          data: rowData,\n          index: event.rowIndex\n        });\n        this.contextMenu.show(event.originalEvent);\n        this.tableService.onContextMenu(rowData);\n      } else if (this.contextMenuSelectionMode === 'joint') {\n        this.preventSelectionSetterPropagation = true;\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n        if (!selected) {\n          if (!this.isRowSelectable(rowData, rowIndex)) {\n            return;\n          }\n\n          if (this.isSingleSelectionMode()) {\n            this.selection = rowData;\n            this.selectionChange.emit(rowData);\n\n            if (dataKeyValue) {\n              this.selectionKeys = {};\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          } else if (this.isMultipleSelectionMode()) {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n        }\n\n        this.tableService.onSelectionChange();\n        this.contextMenu.show(event.originalEvent);\n        this.onContextMenuSelect.emit({\n          originalEvent: event,\n          data: rowData,\n          index: event.rowIndex\n        });\n      }\n    }\n  }\n\n  selectRange(event, rowIndex) {\n    let rangeStart, rangeEnd;\n\n    if (this.anchorRowIndex > rowIndex) {\n      rangeStart = rowIndex;\n      rangeEnd = this.anchorRowIndex;\n    } else if (this.anchorRowIndex < rowIndex) {\n      rangeStart = this.anchorRowIndex;\n      rangeEnd = rowIndex;\n    } else {\n      rangeStart = rowIndex;\n      rangeEnd = rowIndex;\n    }\n\n    if (this.lazy && this.paginator) {\n      rangeStart -= this.first;\n      rangeEnd -= this.first;\n    }\n\n    let rangeRowsData = [];\n\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n\n      if (!this.isSelected(rangeRowData)) {\n        if (!this.isRowSelectable(rangeRowData, rowIndex)) {\n          continue;\n        }\n\n        rangeRowsData.push(rangeRowData);\n        this._selection = [...this.selection, rangeRowData];\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n        if (dataKeyValue) {\n          this.selectionKeys[dataKeyValue] = 1;\n        }\n      }\n    }\n\n    this.selectionChange.emit(this.selection);\n    this.onRowSelect.emit({\n      originalEvent: event,\n      data: rangeRowsData,\n      type: 'row'\n    });\n  }\n\n  clearSelectionRange(event) {\n    let rangeStart, rangeEnd;\n\n    if (this.rangeRowIndex > this.anchorRowIndex) {\n      rangeStart = this.anchorRowIndex;\n      rangeEnd = this.rangeRowIndex;\n    } else if (this.rangeRowIndex < this.anchorRowIndex) {\n      rangeStart = this.rangeRowIndex;\n      rangeEnd = this.anchorRowIndex;\n    } else {\n      rangeStart = this.rangeRowIndex;\n      rangeEnd = this.rangeRowIndex;\n    }\n\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      let rangeRowData = this.value[i];\n      let selectionIndex = this.findIndexInSelection(rangeRowData);\n      this._selection = this.selection.filter((val, i) => i != selectionIndex);\n      let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n\n      this.onRowUnselect.emit({\n        originalEvent: event,\n        data: rangeRowData,\n        type: 'row'\n      });\n    }\n  }\n\n  isSelected(rowData) {\n    if (rowData && this.selection) {\n      if (this.dataKey) {\n        return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n      } else {\n        if (this.selection instanceof Array) return this.findIndexInSelection(rowData) > -1;else return this.equals(rowData, this.selection);\n      }\n    }\n\n    return false;\n  }\n\n  findIndexInSelection(rowData) {\n    let index = -1;\n\n    if (this.selection && this.selection.length) {\n      for (let i = 0; i < this.selection.length; i++) {\n        if (this.equals(rowData, this.selection[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  isRowSelectable(data, index) {\n    if (this.rowSelectable && !this.rowSelectable({\n      data,\n      index\n    })) {\n      return false;\n    }\n\n    return true;\n  }\n\n  toggleRowWithRadio(event, rowData) {\n    this.preventSelectionSetterPropagation = true;\n\n    if (this.selection != rowData) {\n      if (!this.isRowSelectable(rowData, event.rowIndex)) {\n        return;\n      }\n\n      this._selection = rowData;\n      this.selectionChange.emit(this.selection);\n      this.onRowSelect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'radiobutton'\n      });\n\n      if (this.dataKey) {\n        this.selectionKeys = {};\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n      }\n    } else {\n      this._selection = null;\n      this.selectionChange.emit(this.selection);\n      this.onRowUnselect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'radiobutton'\n      });\n    }\n\n    this.tableService.onSelectionChange();\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  toggleRowWithCheckbox(event, rowData) {\n    this.selection = this.selection || [];\n    let selected = this.isSelected(rowData);\n    let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n    this.preventSelectionSetterPropagation = true;\n\n    if (selected) {\n      let selectionIndex = this.findIndexInSelection(rowData);\n      this._selection = this.selection.filter((val, i) => i != selectionIndex);\n      this.selectionChange.emit(this.selection);\n      this.onRowUnselect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'checkbox'\n      });\n\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n    } else {\n      if (!this.isRowSelectable(rowData, event.rowIndex)) {\n        return;\n      }\n\n      this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n      this.selectionChange.emit(this.selection);\n      this.onRowSelect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'checkbox'\n      });\n\n      if (dataKeyValue) {\n        this.selectionKeys[dataKeyValue] = 1;\n      }\n    }\n\n    this.tableService.onSelectionChange();\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  toggleRowsWithCheckbox(event, check) {\n    if (this._selectAll !== null) {\n      this.selectAllChange.emit({\n        originalEvent: event,\n        checked: check\n      });\n    } else {\n      const data = this.selectionPageOnly ? this.dataToRender : this.filteredValue || this.value || [];\n      let selection = this.selectionPageOnly && this._selection ? this._selection.filter(s => !data.some(d => this.equals(s, d))) : [];\n\n      if (check) {\n        selection = this.frozenValue ? [...selection, ...this.frozenValue, ...data] : [...selection, ...data];\n        selection = this.rowSelectable ? selection.filter((data, index) => this.rowSelectable({\n          data,\n          index\n        })) : selection;\n      }\n\n      this._selection = selection;\n      this.preventSelectionSetterPropagation = true;\n      this.updateSelectionKeys();\n      this.selectionChange.emit(this._selection);\n      this.tableService.onSelectionChange();\n      this.onHeaderCheckboxToggle.emit({\n        originalEvent: event,\n        checked: check\n      });\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n  }\n\n  equals(data1, data2) {\n    return this.compareSelectionBy === 'equals' ? data1 === data2 : ObjectUtils.equals(data1, data2, this.dataKey);\n  }\n  /* Legacy Filtering for custom elements */\n\n\n  filter(value, field, matchMode) {\n    if (this.filterTimeout) {\n      clearTimeout(this.filterTimeout);\n    }\n\n    if (!this.isFilterBlank(value)) {\n      this.filters[field] = {\n        value: value,\n        matchMode: matchMode\n      };\n    } else if (this.filters[field]) {\n      delete this.filters[field];\n    }\n\n    this.filterTimeout = setTimeout(() => {\n      this._filter();\n\n      this.filterTimeout = null;\n    }, this.filterDelay);\n    this.anchorRowIndex = null;\n  }\n\n  filterGlobal(value, matchMode) {\n    this.filter(value, 'global', matchMode);\n  }\n\n  isFilterBlank(filter) {\n    if (filter !== null && filter !== undefined) {\n      if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;\n    }\n\n    return true;\n  }\n\n  _filter() {\n    if (!this.restoringFilter) {\n      this.first = 0;\n      this.firstChange.emit(this.first);\n    }\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      if (!this.value) {\n        return;\n      }\n\n      if (!this.hasFilter()) {\n        this.filteredValue = null;\n\n        if (this.paginator) {\n          this.totalRecords = this.value ? this.value.length : 0;\n        }\n      } else {\n        let globalFilterFieldsArray;\n\n        if (this.filters['global']) {\n          if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n        }\n\n        this.filteredValue = [];\n\n        for (let i = 0; i < this.value.length; i++) {\n          let localMatch = true;\n          let globalMatch = false;\n          let localFiltered = false;\n\n          for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n              localFiltered = true;\n              let filterField = prop;\n              let filterMeta = this.filters[filterField];\n\n              if (Array.isArray(filterMeta)) {\n                for (let meta of filterMeta) {\n                  localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                  if (meta.operator === FilterOperator.OR && localMatch || meta.operator === FilterOperator.AND && !localMatch) {\n                    break;\n                  }\n                }\n              } else {\n                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n              }\n\n              if (!localMatch) {\n                break;\n              }\n            }\n          }\n\n          if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n            for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n              let globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n              globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n\n              if (globalMatch) {\n                break;\n              }\n            }\n          }\n\n          let matches;\n\n          if (this.filters['global']) {\n            matches = localFiltered ? localFiltered && localMatch && globalMatch : globalMatch;\n          } else {\n            matches = localFiltered && localMatch;\n          }\n\n          if (matches) {\n            this.filteredValue.push(this.value[i]);\n          }\n        }\n\n        if (this.filteredValue.length === this.value.length) {\n          this.filteredValue = null;\n        }\n\n        if (this.paginator) {\n          this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n        }\n      }\n    }\n\n    this.onFilter.emit({\n      filters: this.filters,\n      filteredValue: this.filteredValue || this.value\n    });\n    this.tableService.onValueChange(this.value);\n\n    if (this.isStateful() && !this.restoringFilter) {\n      this.saveState();\n    }\n\n    if (this.restoringFilter) {\n      this.restoringFilter = false;\n    }\n\n    this.cd.markForCheck();\n\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n\n  executeLocalFilter(field, rowData, filterMeta) {\n    let filterValue = filterMeta.value;\n    let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n    let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n    let filterConstraint = this.filterService.filters[filterMatchMode];\n    return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n  }\n\n  hasFilter() {\n    let empty = true;\n\n    for (let prop in this.filters) {\n      if (this.filters.hasOwnProperty(prop)) {\n        empty = false;\n        break;\n      }\n    }\n\n    return !empty;\n  }\n\n  createLazyLoadMetadata() {\n    return {\n      first: this.first,\n      rows: this.rows,\n      sortField: this.sortField,\n      sortOrder: this.sortOrder,\n      filters: this.filters,\n      globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n      multiSortMeta: this.multiSortMeta\n    };\n  }\n\n  clear() {\n    this._sortField = null;\n    this._sortOrder = this.defaultSortOrder;\n    this._multiSortMeta = null;\n    this.tableService.onSort(null);\n\n    if (this.filters['global']) {\n      this.filters['global'].value = null;\n    }\n\n    this.filteredValue = null;\n    this.tableService.onResetChange();\n    this.first = 0;\n    this.firstChange.emit(this.first);\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = this._value ? this._value.length : 0;\n    }\n  }\n\n  reset() {\n    this.clear();\n  }\n\n  getExportHeader(column) {\n    return column[this.exportHeader] || column.header || column.field;\n  }\n\n  exportCSV(options) {\n    let data;\n    let csv = '';\n    let columns = this.columns;\n\n    if (options && options.selectionOnly) {\n      data = this.selection || [];\n    } else {\n      data = this.filteredValue || this.value;\n\n      if (this.frozenValue) {\n        data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n      }\n    } //headers\n\n\n    for (let i = 0; i < columns.length; i++) {\n      let column = columns[i];\n\n      if (column.exportable !== false && column.field) {\n        csv += '\"' + this.getExportHeader(column) + '\"';\n\n        if (i < columns.length - 1) {\n          csv += this.csvSeparator;\n        }\n      }\n    } //body\n\n\n    data.forEach((record, i) => {\n      csv += '\\n';\n\n      for (let i = 0; i < columns.length; i++) {\n        let column = columns[i];\n\n        if (column.exportable !== false && column.field) {\n          let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n          if (cellData != null) {\n            if (this.exportFunction) {\n              cellData = this.exportFunction({\n                data: cellData,\n                field: column.field\n              });\n            } else cellData = String(cellData).replace(/\"/g, '\"\"');\n          } else cellData = '';\n\n          csv += '\"' + cellData + '\"';\n\n          if (i < columns.length - 1) {\n            csv += this.csvSeparator;\n          }\n        }\n      }\n    });\n    let blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    let link = document.createElement(\"a\");\n    link.style.display = 'none';\n    document.body.appendChild(link);\n\n    if (link.download !== undefined) {\n      link.setAttribute('href', URL.createObjectURL(blob));\n      link.setAttribute('download', this.exportFilename + '.csv');\n      link.click();\n    } else {\n      csv = 'data:text/csv;charset=utf-8,' + csv;\n      window.open(encodeURI(csv));\n    }\n\n    document.body.removeChild(link);\n  }\n\n  resetScrollTop() {\n    if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n      top: 0\n    });\n  }\n\n  scrollToVirtualIndex(index) {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollToIndex(index);\n    }\n  }\n\n  onScrollIndexChange(index) {\n    if (this.lazy) {\n      if (this.virtualScrollTimeout) {\n        clearTimeout(this.virtualScrollTimeout);\n      }\n\n      this.virtualScrollTimeout = setTimeout(() => {\n        let page = Math.floor(index / this.rows);\n        let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.rows;\n        let virtualScrollChunkSize = page === 0 ? this.rows * 2 : this.rows * 3;\n\n        if (page !== this.virtualPage) {\n          this.virtualPage = page;\n\n          if (this.lazyLoadOnInit || this.virtualScrollInitialized) {\n            this.onLazyLoad.emit({\n              first: virtualScrollOffset,\n              rows: virtualScrollChunkSize,\n              sortField: this.sortField,\n              sortOrder: this.sortOrder,\n              filters: this.filters,\n              globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n              multiSortMeta: this.multiSortMeta\n            });\n          } else {\n            this.virtualScrollInitialized = true;\n          }\n        }\n      }, this.virtualScrollDelay);\n    }\n  }\n\n  scrollTo(options) {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollTo(options);\n    } else if (this.wrapperViewChild && this.wrapperViewChild.nativeElement) {\n      if (this.wrapperViewChild.nativeElement.scrollTo) {\n        this.wrapperViewChild.nativeElement.scrollTo(options);\n      } else {\n        this.wrapperViewChild.nativeElement.scrollLeft = options.left;\n        this.wrapperViewChild.nativeElement.scrollTop = options.top;\n      }\n    }\n  }\n\n  updateEditingCell(cell, data, field, index) {\n    this.editingCell = cell;\n    this.editingCellData = data;\n    this.editingCellField = field;\n    this.editingCellRowIndex = index;\n    this.bindDocumentEditListener();\n  }\n\n  isEditingCellValid() {\n    return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n  }\n\n  bindDocumentEditListener() {\n    if (!this.documentEditListener) {\n      this.documentEditListener = event => {\n        if (this.editingCell && !this.selfClick && this.isEditingCellValid()) {\n          DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n          this.editingCell = null;\n          this.onEditComplete.emit({\n            field: this.editingCellField,\n            data: this.editingCellData,\n            originalEvent: event,\n            index: this.editingCellRowIndex\n          });\n          this.editingCellField = null;\n          this.editingCellData = null;\n          this.editingCellRowIndex = null;\n          this.unbindDocumentEditListener();\n          this.cd.markForCheck();\n\n          if (this.overlaySubscription) {\n            this.overlaySubscription.unsubscribe();\n          }\n        }\n\n        this.selfClick = false;\n      };\n\n      document.addEventListener('click', this.documentEditListener);\n    }\n  }\n\n  unbindDocumentEditListener() {\n    if (this.documentEditListener) {\n      document.removeEventListener('click', this.documentEditListener);\n      this.documentEditListener = null;\n    }\n  }\n\n  initRowEdit(rowData) {\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n    this.editingRowKeys[dataKeyValue] = true;\n  }\n\n  saveRowEdit(rowData, rowElement) {\n    if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n      let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n      delete this.editingRowKeys[dataKeyValue];\n    }\n  }\n\n  cancelRowEdit(rowData) {\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n    delete this.editingRowKeys[dataKeyValue];\n  }\n\n  toggleRow(rowData, event) {\n    if (!this.dataKey) {\n      throw new Error('dataKey must be defined to use row expansion');\n    }\n\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n    if (this.expandedRowKeys[dataKeyValue] != null) {\n      delete this.expandedRowKeys[dataKeyValue];\n      this.onRowCollapse.emit({\n        originalEvent: event,\n        data: rowData\n      });\n    } else {\n      if (this.rowExpandMode === 'single') {\n        this.expandedRowKeys = {};\n      }\n\n      this.expandedRowKeys[dataKeyValue] = true;\n      this.onRowExpand.emit({\n        originalEvent: event,\n        data: rowData\n      });\n    }\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  isRowExpanded(rowData) {\n    return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n  }\n\n  isRowEditing(rowData) {\n    return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n  }\n\n  isSingleSelectionMode() {\n    return this.selectionMode === 'single';\n  }\n\n  isMultipleSelectionMode() {\n    return this.selectionMode === 'multiple';\n  }\n\n  onColumnResizeBegin(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n    this.resizeColumnElement = event.target.parentElement;\n    this.columnResizing = true;\n    this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;\n    this.onColumnResize(event);\n    event.preventDefault();\n  }\n\n  onColumnResize(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n    this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n    this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';\n    this.resizeHelperViewChild.nativeElement.style.display = 'block';\n  }\n\n  onColumnResizeEnd() {\n    let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n    let columnWidth = this.resizeColumnElement.offsetWidth;\n    let newColumnWidth = columnWidth + delta;\n    let minWidth = this.resizeColumnElement.style.minWidth || 15;\n\n    if (newColumnWidth >= minWidth) {\n      if (this.columnResizeMode === 'fit') {\n        let nextColumn = this.resizeColumnElement.nextElementSibling;\n        let nextColumnWidth = nextColumn.offsetWidth - delta;\n\n        if (newColumnWidth > 15 && nextColumnWidth > 15) {\n          this.resizeTableCells(newColumnWidth, nextColumnWidth);\n        }\n      } else if (this.columnResizeMode === 'expand') {\n        let tableWidth = this.tableViewChild.nativeElement.offsetWidth + delta;\n        this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n        this.tableViewChild.nativeElement.style.minWidth = tableWidth + 'px';\n        this.resizeTableCells(newColumnWidth, null);\n      }\n\n      this.onColResize.emit({\n        element: this.resizeColumnElement,\n        delta: delta\n      });\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n\n    this.resizeHelperViewChild.nativeElement.style.display = 'none';\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n  }\n\n  resizeTableCells(newColumnWidth, nextColumnWidth) {\n    let colIndex = DomHandler.index(this.resizeColumnElement);\n    let widths = [];\n    const tableHead = DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-thead');\n    let headers = DomHandler.find(tableHead, 'tr > th');\n    headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n    this.destroyStyleElement();\n    this.createStyleElement();\n    let innerHTML = '';\n    widths.forEach((width, index) => {\n      let colWidth = index === colIndex ? newColumnWidth : nextColumnWidth && index === colIndex + 1 ? nextColumnWidth : width;\n      let style = this.scrollable ? `flex: 1 1 ${colWidth}px !important` : `width: ${colWidth}px !important`;\n      innerHTML += `\n                #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}),\n                #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}),\n                #${this.id} .p-datatable-tfoot > tr > td:nth-child(${index + 1}) {\n                    ${style}\n                }\n            `;\n    });\n    this.styleElement.innerHTML = innerHTML;\n  }\n\n  onColumnDragStart(event, columnElement) {\n    this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n    this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n    this.draggedColumn = columnElement;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onColumnDragEnter(event, dropHeader) {\n    if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n      event.preventDefault();\n      let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n      let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n      if (this.draggedColumn != dropHeader) {\n        let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n        let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n        let targetLeft = dropHeaderOffset.left - containerOffset.left;\n        let targetTop = containerOffset.top - dropHeaderOffset.top;\n        let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n        this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n        this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n        if (event.pageX > columnCenter) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = 1;\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = -1;\n        }\n\n        if (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dropIndex - dragIndex === -1 && this.dropPosition === 1) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n        }\n      } else {\n        event.dataTransfer.dropEffect = 'none';\n      }\n    }\n  }\n\n  onColumnDragLeave(event) {\n    if (this.reorderableColumns && this.draggedColumn) {\n      event.preventDefault();\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n    }\n  }\n\n  onColumnDrop(event, dropColumn) {\n    event.preventDefault();\n\n    if (this.draggedColumn) {\n      let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n      let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n      let allowDrop = dragIndex != dropIndex;\n\n      if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n        allowDrop = false;\n      }\n\n      if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n        dropIndex = dropIndex + 1;\n      }\n\n      if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n        dropIndex = dropIndex - 1;\n      }\n\n      if (allowDrop) {\n        ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n        this.onColReorder.emit({\n          dragIndex: dragIndex,\n          dropIndex: dropIndex,\n          columns: this.columns\n        });\n\n        if (this.isStateful()) {\n          this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n              this.saveState();\n            });\n          });\n        }\n      }\n\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n      this.draggedColumn.draggable = false;\n      this.draggedColumn = null;\n      this.dropPosition = null;\n    }\n  }\n\n  onRowDragStart(event, index) {\n    this.rowDragging = true;\n    this.draggedRowIndex = index;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onRowDragOver(event, index, rowElement) {\n    if (this.rowDragging && this.draggedRowIndex !== index) {\n      let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n      let pageY = event.pageY;\n      let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n      let prevRowElement = rowElement.previousElementSibling;\n\n      if (pageY < rowMidY) {\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        this.droppedRowIndex = index;\n        if (prevRowElement) DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n      } else {\n        if (prevRowElement) DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n        this.droppedRowIndex = index + 1;\n        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n      }\n    }\n  }\n\n  onRowDragLeave(event, rowElement) {\n    let prevRowElement = rowElement.previousElementSibling;\n\n    if (prevRowElement) {\n      DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n    }\n\n    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n  }\n\n  onRowDragEnd(event) {\n    this.rowDragging = false;\n    this.draggedRowIndex = null;\n    this.droppedRowIndex = null;\n  }\n\n  onRowDrop(event, rowElement) {\n    if (this.droppedRowIndex != null) {\n      let dropIndex = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1;\n      ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n      this.onRowReorder.emit({\n        dragIndex: this.draggedRowIndex,\n        dropIndex: dropIndex\n      });\n    } //cleanup\n\n\n    this.onRowDragLeave(event, rowElement);\n    this.onRowDragEnd(event);\n  }\n\n  isEmpty() {\n    let data = this.filteredValue || this.value;\n    return data == null || data.length == 0;\n  }\n\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n\n  getStorage() {\n    switch (this.stateStorage) {\n      case 'local':\n        return window.localStorage;\n\n      case 'session':\n        return window.sessionStorage;\n\n      default:\n        throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n    }\n  }\n\n  isStateful() {\n    return this.stateKey != null;\n  }\n\n  saveState() {\n    const storage = this.getStorage();\n    let state = {};\n\n    if (this.paginator) {\n      state.first = this.first;\n      state.rows = this.rows;\n    }\n\n    if (this.sortField) {\n      state.sortField = this.sortField;\n      state.sortOrder = this.sortOrder;\n    }\n\n    if (this.multiSortMeta) {\n      state.multiSortMeta = this.multiSortMeta;\n    }\n\n    if (this.hasFilter()) {\n      state.filters = this.filters;\n    }\n\n    if (this.resizableColumns) {\n      this.saveColumnWidths(state);\n    }\n\n    if (this.reorderableColumns) {\n      this.saveColumnOrder(state);\n    }\n\n    if (this.selection) {\n      state.selection = this.selection;\n    }\n\n    if (Object.keys(this.expandedRowKeys).length) {\n      state.expandedRowKeys = this.expandedRowKeys;\n    }\n\n    storage.setItem(this.stateKey, JSON.stringify(state));\n    this.onStateSave.emit(state);\n  }\n\n  clearState() {\n    const storage = this.getStorage();\n\n    if (this.stateKey) {\n      storage.removeItem(this.stateKey);\n    }\n  }\n\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n    const reviver = function (key, value) {\n      if (typeof value === \"string\" && dateFormat.test(value)) {\n        return new Date(value);\n      }\n\n      return value;\n    };\n\n    if (stateString) {\n      let state = JSON.parse(stateString, reviver);\n\n      if (this.paginator) {\n        if (this.first !== undefined) {\n          this.first = state.first;\n          this.firstChange.emit(this.first);\n        }\n\n        if (this.rows !== undefined) {\n          this.rows = state.rows;\n          this.rowsChange.emit(this.rows);\n        }\n      }\n\n      if (state.sortField) {\n        this.restoringSort = true;\n        this._sortField = state.sortField;\n        this._sortOrder = state.sortOrder;\n      }\n\n      if (state.multiSortMeta) {\n        this.restoringSort = true;\n        this._multiSortMeta = state.multiSortMeta;\n      }\n\n      if (state.filters) {\n        this.restoringFilter = true;\n        this.filters = state.filters;\n      }\n\n      if (this.resizableColumns) {\n        this.columnWidthsState = state.columnWidths;\n        this.tableWidthState = state.tableWidth;\n      }\n\n      if (state.expandedRowKeys) {\n        this.expandedRowKeys = state.expandedRowKeys;\n      }\n\n      if (state.selection) {\n        Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n      }\n\n      this.stateRestored = true;\n      this.onStateRestore.emit(state);\n    }\n  }\n\n  saveColumnWidths(state) {\n    let widths = [];\n    let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n    headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n    state.columnWidths = widths.join(',');\n\n    if (this.columnResizeMode === 'expand') {\n      state.tableWidth = DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n    }\n  }\n\n  restoreColumnWidths() {\n    if (this.columnWidthsState) {\n      let widths = this.columnWidthsState.split(',');\n\n      if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n        this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n        this.tableViewChild.nativeElement.style.minWidth = this.tableWidthState;\n        this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n      }\n\n      if (ObjectUtils.isNotEmpty(widths)) {\n        this.createStyleElement();\n        let innerHTML = '';\n        widths.forEach((width, index) => {\n          let style = this.scrollable ? `flex: 1 1 ${width}px !important` : `width: ${width}px !important`;\n          innerHTML += `\n                        #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}),\n                        #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}),\n                        #${this.id} .p-datatable-tfoot > tr > td:nth-child(${index + 1}) {\n                            ${style}\n                        }\n                    `;\n        });\n        this.styleElement.innerHTML = innerHTML;\n      }\n    }\n  }\n\n  saveColumnOrder(state) {\n    if (this.columns) {\n      let columnOrder = [];\n      this.columns.map(column => {\n        columnOrder.push(column.field || column.key);\n      });\n      state.columnOrder = columnOrder;\n    }\n  }\n\n  restoreColumnOrder() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n\n    if (stateString) {\n      let state = JSON.parse(stateString);\n      let columnOrder = state.columnOrder;\n\n      if (columnOrder) {\n        let reorderedColumns = [];\n        columnOrder.map(key => {\n          let col = this.findColumnByKey(key);\n\n          if (col) {\n            reorderedColumns.push(col);\n          }\n        });\n        this.columnOrderStateRestored = true;\n        this.columns = reorderedColumns;\n      }\n    }\n  }\n\n  findColumnByKey(key) {\n    if (this.columns) {\n      for (let col of this.columns) {\n        if (col.key === key || col.field === key) return col;else continue;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  createStyleElement() {\n    this.styleElement = document.createElement('style');\n    this.styleElement.type = 'text/css';\n    document.head.appendChild(this.styleElement);\n  }\n\n  getGroupRowsMeta() {\n    return {\n      field: this.groupRowsBy,\n      order: this.groupRowsByOrder\n    };\n  }\n\n  createResponsiveStyle() {\n    if (!this.responsiveStyleElement) {\n      this.responsiveStyleElement = document.createElement('style');\n      this.responsiveStyleElement.type = 'text/css';\n      document.head.appendChild(this.responsiveStyleElement);\n      let innerHTML = `\n@media screen and (max-width: ${this.breakpoint}) {\n    #${this.id} .p-datatable-thead > tr > th,\n    #${this.id} .p-datatable-tfoot > tr > td {\n        display: none !important;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td {\n        display: flex;\n        width: 100% !important;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td:not(:last-child) {\n        border: 0 none;\n    }\n\n    #${this.id}.p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {\n        border-top: 0;\n        border-right: 0;\n        border-left: 0;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td > .p-column-title {\n        display: block;\n    }\n}\n`;\n      this.responsiveStyleElement.innerHTML = innerHTML;\n    }\n  }\n\n  destroyResponsiveStyle() {\n    if (this.responsiveStyleElement) {\n      document.head.removeChild(this.responsiveStyleElement);\n      this.responsiveStyleElement = null;\n    }\n  }\n\n  destroyStyleElement() {\n    if (this.styleElement) {\n      document.head.removeChild(this.styleElement);\n      this.styleElement = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.unbindDocumentEditListener();\n    this.editingCell = null;\n    this.initialized = null;\n    this.virtualScrollInitialized = null;\n\n    if (this.virtualScrollSubscription) {\n      this.virtualScrollSubscription.unsubscribe();\n    }\n\n    this.destroyStyleElement();\n    this.destroyResponsiveStyle();\n  }\n\n}\n\nTable.ɵfac = function Table_Factory(t) {\n  return new (t || Table)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FilterService), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nTable.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Table,\n  selectors: [[\"p-table\"]],\n  contentQueries: function Table_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Table_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapperViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableHeaderViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualScrollBody = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    frozenColumns: \"frozenColumns\",\n    frozenValue: \"frozenValue\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tableStyle: \"tableStyle\",\n    tableStyleClass: \"tableStyleClass\",\n    paginator: \"paginator\",\n    pageLinks: \"pageLinks\",\n    rowsPerPageOptions: \"rowsPerPageOptions\",\n    alwaysShowPaginator: \"alwaysShowPaginator\",\n    paginatorPosition: \"paginatorPosition\",\n    paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n    paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\",\n    currentPageReportTemplate: \"currentPageReportTemplate\",\n    showCurrentPageReport: \"showCurrentPageReport\",\n    showJumpToPageDropdown: \"showJumpToPageDropdown\",\n    showJumpToPageInput: \"showJumpToPageInput\",\n    showFirstLastIcon: \"showFirstLastIcon\",\n    showPageLinks: \"showPageLinks\",\n    defaultSortOrder: \"defaultSortOrder\",\n    sortMode: \"sortMode\",\n    resetPageOnSort: \"resetPageOnSort\",\n    selectionMode: \"selectionMode\",\n    selectionPageOnly: \"selectionPageOnly\",\n    contextMenuSelection: \"contextMenuSelection\",\n    contextMenuSelectionMode: \"contextMenuSelectionMode\",\n    dataKey: \"dataKey\",\n    metaKeySelection: \"metaKeySelection\",\n    rowSelectable: \"rowSelectable\",\n    rowTrackBy: \"rowTrackBy\",\n    lazy: \"lazy\",\n    lazyLoadOnInit: \"lazyLoadOnInit\",\n    compareSelectionBy: \"compareSelectionBy\",\n    csvSeparator: \"csvSeparator\",\n    exportFilename: \"exportFilename\",\n    filters: \"filters\",\n    globalFilterFields: \"globalFilterFields\",\n    filterDelay: \"filterDelay\",\n    filterLocale: \"filterLocale\",\n    expandedRowKeys: \"expandedRowKeys\",\n    editingRowKeys: \"editingRowKeys\",\n    rowExpandMode: \"rowExpandMode\",\n    scrollable: \"scrollable\",\n    scrollDirection: \"scrollDirection\",\n    rowGroupMode: \"rowGroupMode\",\n    scrollHeight: \"scrollHeight\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollDelay: \"virtualScrollDelay\",\n    virtualRowHeight: \"virtualRowHeight\",\n    frozenWidth: \"frozenWidth\",\n    responsive: \"responsive\",\n    contextMenu: \"contextMenu\",\n    resizableColumns: \"resizableColumns\",\n    columnResizeMode: \"columnResizeMode\",\n    reorderableColumns: \"reorderableColumns\",\n    loading: \"loading\",\n    loadingIcon: \"loadingIcon\",\n    showLoader: \"showLoader\",\n    rowHover: \"rowHover\",\n    customSort: \"customSort\",\n    showInitialSortBadge: \"showInitialSortBadge\",\n    autoLayout: \"autoLayout\",\n    exportFunction: \"exportFunction\",\n    exportHeader: \"exportHeader\",\n    stateKey: \"stateKey\",\n    stateStorage: \"stateStorage\",\n    editMode: \"editMode\",\n    groupRowsBy: \"groupRowsBy\",\n    groupRowsByOrder: \"groupRowsByOrder\",\n    minBufferPx: \"minBufferPx\",\n    maxBufferPx: \"maxBufferPx\",\n    responsiveLayout: \"responsiveLayout\",\n    breakpoint: \"breakpoint\",\n    value: \"value\",\n    columns: \"columns\",\n    first: \"first\",\n    rows: \"rows\",\n    totalRecords: \"totalRecords\",\n    sortField: \"sortField\",\n    sortOrder: \"sortOrder\",\n    multiSortMeta: \"multiSortMeta\",\n    selection: \"selection\",\n    selectAll: \"selectAll\"\n  },\n  outputs: {\n    selectAllChange: \"selectAllChange\",\n    selectionChange: \"selectionChange\",\n    contextMenuSelectionChange: \"contextMenuSelectionChange\",\n    onRowSelect: \"onRowSelect\",\n    onRowUnselect: \"onRowUnselect\",\n    onPage: \"onPage\",\n    onSort: \"onSort\",\n    onFilter: \"onFilter\",\n    onLazyLoad: \"onLazyLoad\",\n    onRowExpand: \"onRowExpand\",\n    onRowCollapse: \"onRowCollapse\",\n    onContextMenuSelect: \"onContextMenuSelect\",\n    onColResize: \"onColResize\",\n    onColReorder: \"onColReorder\",\n    onRowReorder: \"onRowReorder\",\n    onEditInit: \"onEditInit\",\n    onEditComplete: \"onEditComplete\",\n    onEditCancel: \"onEditCancel\",\n    onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n    sortFunction: \"sortFunction\",\n    firstChange: \"firstChange\",\n    rowsChange: \"rowsChange\",\n    onStateSave: \"onStateSave\",\n    onStateRestore: \"onStateRestore\"\n  },\n  features: [i0.ɵɵProvidersFeature([TableService]), i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 33,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"], [\"class\", \"p-datatable-loading-overlay p-component-overlay\", 4, \"ngIf\"], [\"class\", \"p-datatable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [1, \"p-datatable-wrapper\", 3, \"ngStyle\"], [\"wrapper\", \"\"], [\"role\", \"table\", \"class\", \"p-datatable-table\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"class\", \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"height\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-down p-datatable-reorder-indicator-up\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-up p-datatable-reorder-indicator-down\", \"style\", \"display:none\", 4, \"ngIf\"], [1, \"p-datatable-loading-overlay\", \"p-component-overlay\"], [1, \"p-datatable-header\"], [4, \"ngTemplateOutlet\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\"], [\"role\", \"table\", 1, \"p-datatable-table\", 3, \"ngClass\", \"ngStyle\"], [\"table\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [\"class\", \"p-datatable-tbody p-datatable-frozen-tbody\", 3, \"value\", \"frozenRows\", \"pTableBody\", \"pTableBodyTemplate\", \"frozen\", 4, \"ngIf\"], [1, \"p-datatable-tbody\", 3, \"value\", \"pTableBody\", \"pTableBodyTemplate\"], [\"class\", \"p-datatable-tfoot\", 4, \"ngIf\"], [1, \"p-datatable-tbody\", \"p-datatable-frozen-tbody\", 3, \"value\", \"frozenRows\", \"pTableBody\", \"pTableBodyTemplate\", \"frozen\"], [1, \"p-datatable-tfoot\"], [\"tabindex\", \"0\", 1, \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\"], [\"tableHeader\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [\"resizeHelper\", \"\"], [1, \"pi\", \"pi-arrow-down\", \"p-datatable-reorder-indicator-up\", 2, \"display\", \"none\"], [\"reorderIndicatorUp\", \"\"], [1, \"pi\", \"pi-arrow-up\", \"p-datatable-reorder-indicator-down\", 2, \"display\", \"none\"], [\"reorderIndicatorDown\", \"\"]],\n  template: function Table_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Table_div_2_Template, 2, 2, \"div\", 2);\n      i0.ɵɵtemplate(3, Table_div_3_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(4, Table_p_paginator_4_Template, 1, 17, \"p-paginator\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵtemplate(7, Table_table_7_Template, 8, 16, \"table\", 7);\n      i0.ɵɵtemplate(8, Table_cdk_virtual_scroll_viewport_8_Template, 10, 21, \"cdk-virtual-scroll-viewport\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, Table_p_paginator_9_Template, 1, 17, \"p-paginator\", 9);\n      i0.ɵɵtemplate(10, Table_div_10_Template, 2, 1, \"div\", 10);\n      i0.ɵɵtemplate(11, Table_div_11_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(12, Table_span_12_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(13, Table_span_13_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunctionV(16, _c8, [ctx.rowHover || ctx.selectionMode, ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable, ctx.scrollable && ctx.scrollDirection === \"vertical\", ctx.scrollable && ctx.scrollDirection === \"horizontal\", ctx.scrollable && ctx.scrollDirection === \"both\", ctx.scrollable && ctx.scrollHeight === \"flex\", ctx.responsiveLayout === \"stack\", ctx.responsiveLayout === \"scroll\", ctx.responsive, ctx.headerGroupedTemplate != null, ctx.footerGroupedTemplate != null]));\n      i0.ɵɵattribute(\"id\", ctx.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.captionTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(31, _c9, ctx.scrollHeight));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n    }\n  },\n  directives: function () {\n    return [i2.Paginator, TableBody, i3.CdkVirtualScrollViewport, i4.NgStyle, i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i3.CdkFixedSizeVirtualScroll];\n  },\n  styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;min-width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-icon,.p-datatable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper>table,.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-thead,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot{display:block}.p-datatable-scrollable .p-datatable-thead>tr,.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-thead>tr>th,.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-thead,.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-virtual-scrollable-body>.cdk-virtual-scroll-content-wrapper>.p-datatable-table>.p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th .p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable{display:flex;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-thead>tr>th,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-tbody>tr>td{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column:not(.p-frozen-column){background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-editor-cancel,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-up,.p-datatable-reorder-indicator-down{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-menu-button,.p-column-filter-clear-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Table, [{\n    type: Component,\n    args: [{\n      selector: 'p-table',\n      template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n      providers: [TableService],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      },\n      styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;min-width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-icon,.p-datatable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper>table,.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-thead,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot{display:block}.p-datatable-scrollable .p-datatable-thead>tr,.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-thead>tr>th,.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-thead,.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-virtual-scrollable-body>.cdk-virtual-scroll-content-wrapper>.p-datatable-table>.p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th .p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable{display:flex;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-thead>tr>th,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-tbody>tr>td{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column:not(.p-frozen-column){background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-editor-cancel,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-up,.p-datatable-reorder-indicator-down{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-menu-button,.p-column-filter-clear-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FilterService\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    frozenColumns: [{\n      type: Input\n    }],\n    frozenValue: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tableStyle: [{\n      type: Input\n    }],\n    tableStyleClass: [{\n      type: Input\n    }],\n    paginator: [{\n      type: Input\n    }],\n    pageLinks: [{\n      type: Input\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    alwaysShowPaginator: [{\n      type: Input\n    }],\n    paginatorPosition: [{\n      type: Input\n    }],\n    paginatorDropdownAppendTo: [{\n      type: Input\n    }],\n    paginatorDropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input\n    }],\n    showJumpToPageInput: [{\n      type: Input\n    }],\n    showFirstLastIcon: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input\n    }],\n    defaultSortOrder: [{\n      type: Input\n    }],\n    sortMode: [{\n      type: Input\n    }],\n    resetPageOnSort: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    selectionPageOnly: [{\n      type: Input\n    }],\n    selectAllChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    contextMenuSelection: [{\n      type: Input\n    }],\n    contextMenuSelectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionMode: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input\n    }],\n    rowSelectable: [{\n      type: Input\n    }],\n    rowTrackBy: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    lazyLoadOnInit: [{\n      type: Input\n    }],\n    compareSelectionBy: [{\n      type: Input\n    }],\n    csvSeparator: [{\n      type: Input\n    }],\n    exportFilename: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }],\n    globalFilterFields: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    expandedRowKeys: [{\n      type: Input\n    }],\n    editingRowKeys: [{\n      type: Input\n    }],\n    rowExpandMode: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    scrollDirection: [{\n      type: Input\n    }],\n    rowGroupMode: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollDelay: [{\n      type: Input\n    }],\n    virtualRowHeight: [{\n      type: Input\n    }],\n    frozenWidth: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    contextMenu: [{\n      type: Input\n    }],\n    resizableColumns: [{\n      type: Input\n    }],\n    columnResizeMode: [{\n      type: Input\n    }],\n    reorderableColumns: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    rowHover: [{\n      type: Input\n    }],\n    customSort: [{\n      type: Input\n    }],\n    showInitialSortBadge: [{\n      type: Input\n    }],\n    autoLayout: [{\n      type: Input\n    }],\n    exportFunction: [{\n      type: Input\n    }],\n    exportHeader: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    editMode: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    groupRowsByOrder: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }],\n    responsiveLayout: [{\n      type: Input\n    }],\n    breakpoint: [{\n      type: Input\n    }],\n    onRowSelect: [{\n      type: Output\n    }],\n    onRowUnselect: [{\n      type: Output\n    }],\n    onPage: [{\n      type: Output\n    }],\n    onSort: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    onRowExpand: [{\n      type: Output\n    }],\n    onRowCollapse: [{\n      type: Output\n    }],\n    onContextMenuSelect: [{\n      type: Output\n    }],\n    onColResize: [{\n      type: Output\n    }],\n    onColReorder: [{\n      type: Output\n    }],\n    onRowReorder: [{\n      type: Output\n    }],\n    onEditInit: [{\n      type: Output\n    }],\n    onEditComplete: [{\n      type: Output\n    }],\n    onEditCancel: [{\n      type: Output\n    }],\n    onHeaderCheckboxToggle: [{\n      type: Output\n    }],\n    sortFunction: [{\n      type: Output\n    }],\n    firstChange: [{\n      type: Output\n    }],\n    rowsChange: [{\n      type: Output\n    }],\n    onStateSave: [{\n      type: Output\n    }],\n    onStateRestore: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    resizeHelperViewChild: [{\n      type: ViewChild,\n      args: ['resizeHelper']\n    }],\n    reorderIndicatorUpViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorUp']\n    }],\n    reorderIndicatorDownViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorDown']\n    }],\n    wrapperViewChild: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    tableViewChild: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    tableHeaderViewChild: [{\n      type: ViewChild,\n      args: ['tableHeader']\n    }],\n    virtualScrollBody: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    value: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    sortField: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    multiSortMeta: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    selectAll: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TableBody {\n  constructor(dt, tableService, cd, el) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.el = el;\n    this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n      if (this.dt.virtualScroll) {\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n\n    if (this.frozenRows) {\n      this.updateFrozenRowStickyPosition();\n    }\n\n    if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n      this.updateFrozenRowGroupHeaderStickyPosition();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.frozenRows) {\n      this.updateFrozenRowStickyPosition();\n    }\n\n    if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n      this.updateFrozenRowGroupHeaderStickyPosition();\n    }\n  }\n\n  shouldRenderRowGroupHeader(value, rowData, i) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let prevRowData = value[i - 1];\n\n    if (prevRowData) {\n      let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n      return currentRowFieldData !== previousRowFieldData;\n    } else {\n      return true;\n    }\n  }\n\n  shouldRenderRowGroupFooter(value, rowData, i) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let nextRowData = value[i + 1];\n\n    if (nextRowData) {\n      let nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n      return currentRowFieldData !== nextRowFieldData;\n    } else {\n      return true;\n    }\n  }\n\n  shouldRenderRowspan(value, rowData, i) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let prevRowData = value[i - 1];\n\n    if (prevRowData) {\n      let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n      return currentRowFieldData !== previousRowFieldData;\n    } else {\n      return true;\n    }\n  }\n\n  calculateRowGroupSize(value, rowData, index) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let nextRowFieldData = currentRowFieldData;\n    let groupRowSpan = 0;\n\n    while (currentRowFieldData === nextRowFieldData) {\n      groupRowSpan++;\n      let nextRowData = value[++index];\n\n      if (nextRowData) {\n        nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n      } else {\n        break;\n      }\n    }\n\n    return groupRowSpan === 1 ? null : groupRowSpan;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  updateFrozenRowStickyPosition() {\n    this.el.nativeElement.style.top = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling) + 'px';\n  }\n\n  updateFrozenRowGroupHeaderStickyPosition() {\n    if (this.el.nativeElement.previousElementSibling) {\n      let tableHeaderHeight = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling);\n      this.dt.rowGroupHeaderStyleObject.top = tableHeaderHeight + 'px';\n    }\n  }\n\n}\n\nTableBody.ɵfac = function TableBody_Factory(t) {\n  return new (t || TableBody)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTableBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableBody,\n  selectors: [[\"\", \"pTableBody\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    columns: [\"pTableBody\", \"columns\"],\n    template: [\"pTableBodyTemplate\", \"template\"],\n    value: \"value\",\n    frozen: \"frozen\",\n    frozenRows: \"frozenRows\"\n  },\n  attrs: _c10,\n  decls: 6,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"cdkVirtualFor\", \"\", 3, \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplateCacheSize\"]],\n  template: function TableBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TableBody_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, TableBody_ng_container_1_Template, 2, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(2, TableBody_ng_container_2_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(3, TableBody_ng_container_3_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(4, TableBody_ng_container_4_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(5, TableBody_ng_container_5_Template, 2, 5, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && !ctx.dt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && ctx.dt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.expandedRowTemplate && !(ctx.frozen && ctx.dt.frozenExpandedRowTemplate));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.frozenExpandedRowTemplate && ctx.frozen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.isEmpty() && !ctx.dt.loading);\n    }\n  },\n  directives: [i4.NgIf, i4.NgForOf, i4.NgTemplateOutlet, i3.CdkVirtualForOf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableBody, [{\n    type: Component,\n    args: [{\n      selector: '[pTableBody]',\n      template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    columns: [{\n      type: Input,\n      args: [\"pTableBody\"]\n    }],\n    template: [{\n      type: Input,\n      args: [\"pTableBodyTemplate\"]\n    }],\n    value: [{\n      type: Input\n    }],\n    frozen: [{\n      type: Input\n    }],\n    frozenRows: [{\n      type: Input\n    }]\n  });\n})();\n\nclass RowGroupHeader {\n  constructor(dt) {\n    this.dt = dt;\n  }\n\n  get getFrozenRowGroupHeaderStickyPosition() {\n    return this.dt.rowGroupHeaderStyleObject ? this.dt.rowGroupHeaderStyleObject.top : '';\n  }\n\n}\n\nRowGroupHeader.ɵfac = function RowGroupHeader_Factory(t) {\n  return new (t || RowGroupHeader)(i0.ɵɵdirectiveInject(Table));\n};\n\nRowGroupHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RowGroupHeader,\n  selectors: [[\"\", \"pRowGroupHeader\", \"\"]],\n  hostAttrs: [1, \"p-rowgroup-header\", \"p-element\"],\n  hostVars: 2,\n  hostBindings: function RowGroupHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"top\", ctx.getFrozenRowGroupHeaderStickyPosition);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowGroupHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[pRowGroupHeader]',\n      host: {\n        'class': 'p-rowgroup-header p-element',\n        '[style.top]': \"getFrozenRowGroupHeaderStickyPosition\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, null);\n})();\n\nclass FrozenColumn {\n  constructor(el) {\n    this.el = el;\n    this.alignFrozen = \"left\";\n    this._frozen = true;\n  }\n\n  get frozen() {\n    return this._frozen;\n  }\n\n  set frozen(val) {\n    this._frozen = val;\n    this.updateStickyPosition();\n  }\n\n  ngAfterViewInit() {\n    this.updateStickyPosition();\n  }\n\n  updateStickyPosition() {\n    if (this._frozen) {\n      if (this.alignFrozen === 'right') {\n        let right = 0;\n        let next = this.el.nativeElement.nextElementSibling;\n\n        if (next) {\n          right = DomHandler.getOuterWidth(next) + (parseFloat(next.style.right) || 0);\n        }\n\n        this.el.nativeElement.style.right = right + 'px';\n      } else {\n        let left = 0;\n        let prev = this.el.nativeElement.previousElementSibling;\n\n        if (prev) {\n          left = DomHandler.getOuterWidth(prev) + (parseFloat(prev.style.left) || 0);\n        }\n\n        this.el.nativeElement.style.left = left + 'px';\n      }\n\n      let filterRow = this.el.nativeElement.parentElement.nextElementSibling;\n\n      if (filterRow) {\n        let index = DomHandler.index(this.el.nativeElement);\n\n        if (filterRow.children && filterRow.children[index]) {\n          filterRow.children[index].style.left = this.el.nativeElement.style.left;\n          filterRow.children[index].style.right = this.el.nativeElement.style.right;\n        }\n      }\n    }\n  }\n\n}\n\nFrozenColumn.ɵfac = function FrozenColumn_Factory(t) {\n  return new (t || FrozenColumn)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nFrozenColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FrozenColumn,\n  selectors: [[\"\", \"pFrozenColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function FrozenColumn_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-frozen-column\", ctx.frozen);\n    }\n  },\n  inputs: {\n    frozen: \"frozen\",\n    alignFrozen: \"alignFrozen\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FrozenColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pFrozenColumn]',\n      host: {\n        'class': 'p-element',\n        '[class.p-frozen-column]': 'frozen'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    frozen: [{\n      type: Input\n    }],\n    alignFrozen: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SortableColumn {\n  constructor(dt) {\n    this.dt = dt;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n        this.updateSortState();\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.updateSortState();\n    }\n  }\n\n  updateSortState() {\n    this.sorted = this.dt.isSorted(this.field);\n    this.sortOrder = this.sorted ? this.dt.sortOrder === 1 ? 'ascending' : 'descending' : 'none';\n  }\n\n  onClick(event) {\n    if (this.isEnabled() && !this.isFilterElement(event.target)) {\n      this.updateSortState();\n      this.dt.sort({\n        originalEvent: event,\n        field: this.field\n      });\n      DomHandler.clearSelection();\n    }\n  }\n\n  onEnterKey(event) {\n    this.onClick(event);\n  }\n\n  isEnabled() {\n    return this.pSortableColumnDisabled !== true;\n  }\n\n  isFilterElement(element) {\n    return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSortableColumn.ɵfac = function SortableColumn_Factory(t) {\n  return new (t || SortableColumn)(i0.ɵɵdirectiveInject(Table));\n};\n\nSortableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SortableColumn,\n  selectors: [[\"\", \"pSortableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 7,\n  hostBindings: function SortableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SortableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function SortableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKey($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\")(\"aria-sort\", ctx.sortOrder);\n      i0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-highlight\", ctx.sorted);\n    }\n  },\n  inputs: {\n    field: [\"pSortableColumn\", \"field\"],\n    pSortableColumnDisabled: \"pSortableColumnDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pSortableColumn]',\n      host: {\n        'class': 'p-element',\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'sortOrder'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    field: [{\n      type: Input,\n      args: [\"pSortableColumn\"]\n    }],\n    pSortableColumnDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }]\n  });\n})();\n\nclass SortIcon {\n  constructor(dt, cd) {\n    this.dt = dt;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n      this.updateSortState();\n    });\n  }\n\n  ngOnInit() {\n    this.updateSortState();\n  }\n\n  onClick(event) {\n    event.preventDefault();\n  }\n\n  updateSortState() {\n    if (this.dt.sortMode === 'single') {\n      this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n    } else if (this.dt.sortMode === 'multiple') {\n      let sortMeta = this.dt.getSortMeta(this.field);\n      this.sortOrder = sortMeta ? sortMeta.order : 0;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  getMultiSortMetaIndex() {\n    let multiSortMeta = this.dt._multiSortMeta;\n    let index = -1;\n\n    if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n      for (let i = 0; i < multiSortMeta.length; i++) {\n        let meta = multiSortMeta[i];\n\n        if (meta.field === this.field || meta.field === this.field) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  getBadgeValue() {\n    let index = this.getMultiSortMetaIndex();\n    return this.dt.groupRowsBy && index > -1 ? index : index + 1;\n  }\n\n  isMultiSorted() {\n    return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSortIcon.ɵfac = function SortIcon_Factory(t) {\n  return new (t || SortIcon)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nSortIcon.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SortIcon,\n  selectors: [[\"p-sortIcon\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    field: \"field\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"p-sortable-column-icon\", \"pi\", \"pi-fw\", 3, \"ngClass\"], [\"class\", \"p-sortable-column-badge\", 4, \"ngIf\"], [1, \"p-sortable-column-badge\"]],\n  template: function SortIcon_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"i\", 0);\n      i0.ɵɵtemplate(1, SortIcon_span_1_Template, 2, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c16, ctx.sortOrder === 1, ctx.sortOrder === -1, ctx.sortOrder === 0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiSorted());\n    }\n  },\n  directives: [i4.NgClass, i4.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortIcon, [{\n    type: Component,\n    args: [{\n      selector: 'p-sortIcon',\n      template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getBadgeValue()}}</span>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    field: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SelectableRow {\n  constructor(dt, tableService) {\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.dt.isSelected(this.data);\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.dt.isSelected(this.data);\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }\n\n  onTouchEnd(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowTouchEnd(event);\n    }\n  }\n\n  onArrowDownKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    const row = event.currentTarget;\n    const nextRow = this.findNextSelectableRow(row);\n\n    if (nextRow) {\n      nextRow.focus();\n    }\n\n    event.preventDefault();\n  }\n\n  onArrowUpKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    const row = event.currentTarget;\n    const prevRow = this.findPrevSelectableRow(row);\n\n    if (prevRow) {\n      prevRow.focus();\n    }\n\n    event.preventDefault();\n  }\n\n  onEnterKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    this.dt.handleRowClick({\n      originalEvent: event,\n      rowData: this.data,\n      rowIndex: this.index\n    });\n  }\n\n  onPageDownKeyDown() {\n    if (this.dt.virtualScroll) {\n      this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n    }\n  }\n\n  onSpaceKeydown() {\n    if (this.dt.virtualScroll && !this.dt.editingCell) {\n      this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n    }\n  }\n\n  findNextSelectableRow(row) {\n    let nextRow = row.nextElementSibling;\n\n    if (nextRow) {\n      if (DomHandler.hasClass(nextRow, 'p-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);\n    } else {\n      return null;\n    }\n  }\n\n  findPrevSelectableRow(row) {\n    let prevRow = row.previousElementSibling;\n\n    if (prevRow) {\n      if (DomHandler.hasClass(prevRow, 'p-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);\n    } else {\n      return null;\n    }\n  }\n\n  isEnabled() {\n    return this.pSelectableRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSelectableRow.ɵfac = function SelectableRow_Factory(t) {\n  return new (t || SelectableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService));\n};\n\nSelectableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectableRow,\n  selectors: [[\"\", \"pSelectableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 5,\n  hostBindings: function SelectableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SelectableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"touchend\", function SelectableRow_touchend_HostBindingHandler($event) {\n        return ctx.onTouchEnd($event);\n      })(\"keydown.arrowdown\", function SelectableRow_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDownKeyDown($event);\n      })(\"keydown.arrowup\", function SelectableRow_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUpKeyDown($event);\n      })(\"keydown.enter\", function SelectableRow_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.shift.enter\", function SelectableRow_keydown_shift_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.meta.enter\", function SelectableRow_keydown_meta_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.pagedown\", function SelectableRow_keydown_pagedown_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.pageup\", function SelectableRow_keydown_pageup_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.home\", function SelectableRow_keydown_home_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.end\", function SelectableRow_keydown_end_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.space\", function SelectableRow_keydown_space_HostBindingHandler() {\n        return ctx.onSpaceKeydown();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRow\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRow]',\n      host: {\n        'class': 'p-element',\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pSelectableRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onTouchEnd: [{\n      type: HostListener,\n      args: ['touchend', ['$event']]\n    }],\n    onArrowDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUpKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.enter', ['$event']]\n    }],\n    onPageDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.pagedown']\n    }, {\n      type: HostListener,\n      args: ['keydown.pageup']\n    }, {\n      type: HostListener,\n      args: ['keydown.home']\n    }, {\n      type: HostListener,\n      args: ['keydown.end']\n    }],\n    onSpaceKeydown: [{\n      type: HostListener,\n      args: ['keydown.space']\n    }]\n  });\n})();\n\nclass SelectableRowDblClick {\n  constructor(dt, tableService) {\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.dt.isSelected(this.data);\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.dt.isSelected(this.data);\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }\n\n  isEnabled() {\n    return this.pSelectableRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSelectableRowDblClick.ɵfac = function SelectableRowDblClick_Factory(t) {\n  return new (t || SelectableRowDblClick)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService));\n};\n\nSelectableRowDblClick.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectableRowDblClick,\n  selectors: [[\"\", \"pSelectableRowDblClick\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 4,\n  hostBindings: function SelectableRowDblClick_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dblclick\", function SelectableRowDblClick_dblclick_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRowDblClick\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectableRowDblClick, [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRowDblClick]',\n      host: {\n        'class': 'p-element',\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pSelectableRowDblClick\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }]\n  });\n})();\n\nclass ContextMenuRow {\n  constructor(dt, tableService, el) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.el = el;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.contextMenuSource$.subscribe(data => {\n        this.selected = this.dt.equals(this.data, data);\n      });\n    }\n  }\n\n  onContextMenu(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowRightClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n      this.el.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n\n  isEnabled() {\n    return this.pContextMenuRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nContextMenuRow.ɵfac = function ContextMenuRow_Factory(t) {\n  return new (t || ContextMenuRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nContextMenuRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContextMenuRow,\n  selectors: [[\"\", \"pContextMenuRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 3,\n  hostBindings: function ContextMenuRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"contextmenu\", function ContextMenuRow_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextMenu($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-highlight-contextmenu\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pContextMenuRow\", \"data\"],\n    index: [\"pContextMenuRowIndex\", \"index\"],\n    pContextMenuRowDisabled: \"pContextMenuRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContextMenuRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pContextMenuRow]',\n      host: {\n        'class': 'p-element',\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pContextMenuRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pContextMenuRowIndex\"]\n    }],\n    pContextMenuRowDisabled: [{\n      type: Input\n    }],\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  });\n})();\n\nclass RowToggler {\n  constructor(dt) {\n    this.dt = dt;\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.toggleRow(this.data, event);\n      event.preventDefault();\n    }\n  }\n\n  isEnabled() {\n    return this.pRowTogglerDisabled !== true;\n  }\n\n}\n\nRowToggler.ɵfac = function RowToggler_Factory(t) {\n  return new (t || RowToggler)(i0.ɵɵdirectiveInject(Table));\n};\n\nRowToggler.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RowToggler,\n  selectors: [[\"\", \"pRowToggler\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function RowToggler_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function RowToggler_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pRowToggler\", \"data\"],\n    pRowTogglerDisabled: \"pRowTogglerDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowToggler, [{\n    type: Directive,\n    args: [{\n      selector: '[pRowToggler]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: ['pRowToggler']\n    }],\n    pRowTogglerDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass ResizableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n      this.resizer = document.createElement('span');\n      this.resizer.className = 'p-column-resizer';\n      this.el.nativeElement.appendChild(this.resizer);\n      this.zone.runOutsideAngular(() => {\n        this.resizerMouseDownListener = this.onMouseDown.bind(this);\n        this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n      });\n    }\n  }\n\n  bindDocumentEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n      document.addEventListener('mousemove', this.documentMouseMoveListener);\n      this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n      document.addEventListener('mouseup', this.documentMouseUpListener);\n    });\n  }\n\n  unbindDocumentEvents() {\n    if (this.documentMouseMoveListener) {\n      document.removeEventListener('mousemove', this.documentMouseMoveListener);\n      this.documentMouseMoveListener = null;\n    }\n\n    if (this.documentMouseUpListener) {\n      document.removeEventListener('mouseup', this.documentMouseUpListener);\n      this.documentMouseUpListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (event.which === 1) {\n      this.dt.onColumnResizeBegin(event);\n      this.bindDocumentEvents();\n    }\n  }\n\n  onDocumentMouseMove(event) {\n    this.dt.onColumnResize(event);\n  }\n\n  onDocumentMouseUp(event) {\n    this.dt.onColumnResizeEnd();\n    this.unbindDocumentEvents();\n  }\n\n  isEnabled() {\n    return this.pResizableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.resizerMouseDownListener) {\n      this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n    }\n\n    this.unbindDocumentEvents();\n  }\n\n}\n\nResizableColumn.ɵfac = function ResizableColumn_Factory(t) {\n  return new (t || ResizableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nResizableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizableColumn,\n  selectors: [[\"\", \"pResizableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    pResizableColumnDisabled: \"pResizableColumnDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pResizableColumn]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    pResizableColumnDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ReorderableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.mouseDownListener = this.onMouseDown.bind(this);\n      this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n      this.dragStartListener = this.onDragStart.bind(this);\n      this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n      this.dragOverListener = this.onDragEnter.bind(this);\n      this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      this.dragEnterListener = this.onDragEnter.bind(this);\n      this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n      this.dragLeaveListener = this.onDragLeave.bind(this);\n      this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n    });\n  }\n\n  unbindEvents() {\n    if (this.mouseDownListener) {\n      document.removeEventListener('mousedown', this.mouseDownListener);\n      this.mouseDownListener = null;\n    }\n\n    if (this.dragOverListener) {\n      document.removeEventListener('dragover', this.dragOverListener);\n      this.dragOverListener = null;\n    }\n\n    if (this.dragEnterListener) {\n      document.removeEventListener('dragenter', this.dragEnterListener);\n      this.dragEnterListener = null;\n    }\n\n    if (this.dragEnterListener) {\n      document.removeEventListener('dragenter', this.dragEnterListener);\n      this.dragEnterListener = null;\n    }\n\n    if (this.dragLeaveListener) {\n      document.removeEventListener('dragleave', this.dragLeaveListener);\n      this.dragLeaveListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n  }\n\n  onDragStart(event) {\n    this.dt.onColumnDragStart(event, this.el.nativeElement);\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n  }\n\n  onDragEnter(event) {\n    this.dt.onColumnDragEnter(event, this.el.nativeElement);\n  }\n\n  onDragLeave(event) {\n    this.dt.onColumnDragLeave(event);\n  }\n\n  onDrop(event) {\n    if (this.isEnabled()) {\n      this.dt.onColumnDrop(event, this.el.nativeElement);\n    }\n  }\n\n  isEnabled() {\n    return this.pReorderableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n  }\n\n}\n\nReorderableColumn.ɵfac = function ReorderableColumn_Factory(t) {\n  return new (t || ReorderableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nReorderableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReorderableColumn,\n  selectors: [[\"\", \"pReorderableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function ReorderableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function ReorderableColumn_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    pReorderableColumnDisabled: \"pReorderableColumnDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReorderableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableColumn]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    pReorderableColumnDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\n\nclass EditableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.selfClick = true;\n\n      if (this.dt.editingCell) {\n        if (this.dt.editingCell !== this.el.nativeElement) {\n          if (!this.dt.isEditingCellValid()) {\n            return;\n          }\n\n          this.closeEditingCell(true, event);\n          this.openCell();\n        }\n      } else {\n        this.openCell();\n      }\n    }\n  }\n\n  openCell() {\n    this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n    DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n    this.dt.onEditInit.emit({\n      field: this.field,\n      data: this.data,\n      index: this.rowIndex\n    });\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n        let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n\n        if (focusableElement) {\n          focusableElement.focus();\n        }\n      }, 50);\n    });\n\n    this.overlayEventListener = e => {\n      if (this.el && this.el.nativeElement.contains(e.target)) {\n        this.dt.selfClick = true;\n      }\n    };\n\n    this.dt.overlaySubscription = this.dt.overlayService.clickObservable.subscribe(this.overlayEventListener);\n  }\n\n  closeEditingCell(completed, event) {\n    if (completed) this.dt.onEditComplete.emit({\n      field: this.dt.editingCellField,\n      data: this.dt.editingCellData,\n      originalEvent: event,\n      index: this.dt.editingCellRowIndex\n    });else this.dt.onEditCancel.emit({\n      field: this.dt.editingCellField,\n      data: this.dt.editingCellData,\n      originalEvent: event,\n      index: this.dt.editingCellRowIndex\n    });\n    DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n    this.dt.editingCell = null;\n    this.dt.editingCellData = null;\n    this.dt.editingCellField = null;\n    this.dt.unbindDocumentEditListener();\n\n    if (this.dt.overlaySubscription) {\n      this.dt.overlaySubscription.unsubscribe();\n    }\n  }\n\n  onEnterKeyDown(event) {\n    if (this.isEnabled()) {\n      if (this.dt.isEditingCellValid()) {\n        this.closeEditingCell(true, event);\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onEscapeKeyDown(event) {\n    if (this.isEnabled()) {\n      if (this.dt.isEditingCellValid()) {\n        this.closeEditingCell(false, event);\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onShiftKeyDown(event) {\n    if (this.isEnabled()) {\n      if (event.shiftKey) this.moveToPreviousCell(event);else {\n        this.moveToNextCell(event);\n      }\n    }\n  }\n\n  onArrowDown(event) {\n    if (this.isEnabled()) {\n      let currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        let cellIndex = DomHandler.index(currentCell);\n        let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  onArrowUp(event) {\n    if (this.isEnabled()) {\n      let currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        let cellIndex = DomHandler.index(currentCell);\n        let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  onArrowLeft(event) {\n    if (this.isEnabled()) {\n      this.moveToPreviousCell(event);\n    }\n  }\n\n  onArrowRight(event) {\n    if (this.isEnabled()) {\n      this.moveToNextCell(event);\n    }\n  }\n\n  findCell(element) {\n    if (element) {\n      let cell = element;\n\n      while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n        cell = cell.parentElement;\n      }\n\n      return cell;\n    } else {\n      return null;\n    }\n  }\n\n  moveToPreviousCell(event) {\n    let currentCell = this.findCell(event.target);\n\n    if (currentCell) {\n      let targetCell = this.findPreviousEditableColumn(currentCell);\n\n      if (targetCell) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        DomHandler.invokeElementMethod(event.target, 'blur');\n        DomHandler.invokeElementMethod(targetCell, 'click');\n        event.preventDefault();\n      }\n    }\n  }\n\n  moveToNextCell(event) {\n    let currentCell = this.findCell(event.target);\n\n    if (currentCell) {\n      let targetCell = this.findNextEditableColumn(currentCell);\n\n      if (targetCell) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        DomHandler.invokeElementMethod(event.target, 'blur');\n        DomHandler.invokeElementMethod(targetCell, 'click');\n        event.preventDefault();\n      }\n    }\n  }\n\n  findPreviousEditableColumn(cell) {\n    let prevCell = cell.previousElementSibling;\n\n    if (!prevCell) {\n      let previousRow = cell.parentElement.previousElementSibling;\n\n      if (previousRow) {\n        prevCell = previousRow.lastElementChild;\n      }\n    }\n\n    if (prevCell) {\n      if (DomHandler.hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n    } else {\n      return null;\n    }\n  }\n\n  findNextEditableColumn(cell) {\n    let nextCell = cell.nextElementSibling;\n\n    if (!nextCell) {\n      let nextRow = cell.parentElement.nextElementSibling;\n\n      if (nextRow) {\n        nextCell = nextRow.firstElementChild;\n      }\n    }\n\n    if (nextCell) {\n      if (DomHandler.hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n    } else {\n      return null;\n    }\n  }\n\n  findNextEditableColumnByIndex(cell, index) {\n    let nextRow = cell.parentElement.nextElementSibling;\n\n    if (nextRow) {\n      let nextCell = nextRow.children[index];\n\n      if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n        return nextCell;\n      }\n\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  findPrevEditableColumnByIndex(cell, index) {\n    let prevRow = cell.parentElement.previousElementSibling;\n\n    if (prevRow) {\n      let prevCell = prevRow.children[index];\n\n      if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n        return prevCell;\n      }\n\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  isEnabled() {\n    return this.pEditableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.dt.overlaySubscription) {\n      this.dt.overlaySubscription.unsubscribe();\n    }\n  }\n\n}\n\nEditableColumn.ɵfac = function EditableColumn_Factory(t) {\n  return new (t || EditableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nEditableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditableColumn,\n  selectors: [[\"\", \"pEditableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function EditableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function EditableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.escape\", function EditableColumn_keydown_escape_HostBindingHandler($event) {\n        return ctx.onEscapeKeyDown($event);\n      })(\"keydown.tab\", function EditableColumn_keydown_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.shift.tab\", function EditableColumn_keydown_shift_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.meta.tab\", function EditableColumn_keydown_meta_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.arrowdown\", function EditableColumn_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDown($event);\n      })(\"keydown.arrowup\", function EditableColumn_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUp($event);\n      })(\"keydown.arrowleft\", function EditableColumn_keydown_arrowleft_HostBindingHandler($event) {\n        return ctx.onArrowLeft($event);\n      })(\"keydown.arrowright\", function EditableColumn_keydown_arrowright_HostBindingHandler($event) {\n        return ctx.onArrowRight($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pEditableColumn\", \"data\"],\n    field: [\"pEditableColumnField\", \"field\"],\n    rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"],\n    pEditableColumnDisabled: \"pEditableColumnDisabled\",\n    pFocusCellSelector: \"pFocusCellSelector\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableColumn]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pEditableColumn\"]\n    }],\n    field: [{\n      type: Input,\n      args: [\"pEditableColumnField\"]\n    }],\n    rowIndex: [{\n      type: Input,\n      args: [\"pEditableColumnRowIndex\"]\n    }],\n    pEditableColumnDisabled: [{\n      type: Input\n    }],\n    pFocusCellSelector: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    onEscapeKeyDown: [{\n      type: HostListener,\n      args: ['keydown.escape', ['$event']]\n    }],\n    onShiftKeyDown: [{\n      type: HostListener,\n      args: ['keydown.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.tab', ['$event']]\n    }],\n    onArrowDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUp: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onArrowLeft: [{\n      type: HostListener,\n      args: ['keydown.arrowleft', ['$event']]\n    }],\n    onArrowRight: [{\n      type: HostListener,\n      args: ['keydown.arrowright', ['$event']]\n    }]\n  });\n})();\n\nclass EditableRow {\n  constructor(el) {\n    this.el = el;\n  }\n\n  isEnabled() {\n    return this.pEditableRowDisabled !== true;\n  }\n\n}\n\nEditableRow.ɵfac = function EditableRow_Factory(t) {\n  return new (t || EditableRow)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditableRow,\n  selectors: [[\"\", \"pEditableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    data: [\"pEditableRow\", \"data\"],\n    pEditableRowDisabled: \"pEditableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableRow]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pEditableRow\"]\n    }],\n    pEditableRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass InitEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.initRowEdit(this.editableRow.data);\n    event.preventDefault();\n  }\n\n}\n\nInitEditableRow.ɵfac = function InitEditableRow_Factory(t) {\n  return new (t || InitEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n};\n\nInitEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: InitEditableRow,\n  selectors: [[\"\", \"pInitEditableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function InitEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function InitEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pInitEditableRow]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass SaveEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n    event.preventDefault();\n  }\n\n}\n\nSaveEditableRow.ɵfac = function SaveEditableRow_Factory(t) {\n  return new (t || SaveEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n};\n\nSaveEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SaveEditableRow,\n  selectors: [[\"\", \"pSaveEditableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function SaveEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SaveEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SaveEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pSaveEditableRow]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass CancelEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.cancelRowEdit(this.editableRow.data);\n    event.preventDefault();\n  }\n\n}\n\nCancelEditableRow.ɵfac = function CancelEditableRow_Factory(t) {\n  return new (t || CancelEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n};\n\nCancelEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CancelEditableRow,\n  selectors: [[\"\", \"pCancelEditableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function CancelEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CancelEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CancelEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pCancelEditableRow]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass CellEditor {\n  constructor(dt, editableColumn, editableRow) {\n    this.dt = dt;\n    this.editableColumn = editableColumn;\n    this.editableRow = editableRow;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n\n        case 'output':\n          this.outputTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  get editing() {\n    return this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement || this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data);\n  }\n\n}\n\nCellEditor.ɵfac = function CellEditor_Factory(t) {\n  return new (t || CellEditor)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableColumn, 8), i0.ɵɵdirectiveInject(EditableRow, 8));\n};\n\nCellEditor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CellEditor,\n  selectors: [[\"p-cellEditor\"]],\n  contentQueries: function CellEditor_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function CellEditor_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CellEditor_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CellEditor_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n    }\n  },\n  directives: [i4.NgIf, i4.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellEditor, [{\n    type: Component,\n    args: [{\n      selector: 'p-cellEditor',\n      template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableColumn,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: EditableRow,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass TableRadioButton {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.dt.isSelected(this.value);\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.dt.isSelected(this.value);\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      this.dt.toggleRowWithRadio({\n        originalEvent: event,\n        rowIndex: this.index\n      }, this.value);\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableRadioButton.ɵfac = function TableRadioButton_Factory(t) {\n  return new (t || TableRadioButton)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableRadioButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableRadioButton,\n  selectors: [[\"p-tableRadioButton\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 15,\n  consts: [[1, \"p-radiobutton\", \"p-component\", 3, \"ngClass\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"radio\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"radio\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-radiobutton-icon\"]],\n  template: function TableRadioButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableRadioButton_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function TableRadioButton_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableRadioButton_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵelement(5, \"div\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c17, ctx.focused, ctx.disabled));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(11, _c18, ctx.checked, ctx.focused, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n    }\n  },\n  directives: [i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableRadioButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableRadioButton',\n      template: `\n        <div class=\"p-radiobutton p-component\" [ngClass]=\"{'p-radiobutton-focused':focused, 'p-radiobutton-disabled': disabled}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-focus':focused, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TableCheckbox {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.dt.isSelected(this.value);\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.dt.isSelected(this.value);\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      this.dt.toggleRowWithCheckbox({\n        originalEvent: event,\n        rowIndex: this.index\n      }, this.value);\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableCheckbox.ɵfac = function TableCheckbox_Factory(t) {\n  return new (t || TableCheckbox)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableCheckbox,\n  selectors: [[\"p-tableCheckbox\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    required: \"required\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 19,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"ngClass\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function TableCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵelement(5, \"span\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c19, ctx.focused, ctx.disabled));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"required\", ctx.required)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(13, _c20, ctx.checked, ctx.focused, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c21, ctx.checked));\n    }\n  },\n  directives: [i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{'p-checkbox-focused':focused, 'p-checkbox-disabled': disabled}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-focus':focused, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TableHeaderCheckbox {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n    this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.updateCheckedState();\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      if (this.dt.value && this.dt.value.length > 0) {\n        this.dt.toggleRowsWithCheckbox(event, !this.checked);\n      }\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n  }\n\n  isDisabled() {\n    return this.disabled || !this.dt.value || !this.dt.value.length;\n  }\n\n  ngOnDestroy() {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n\n  updateCheckedState() {\n    this.cd.markForCheck();\n\n    if (this.dt._selectAll !== null) {\n      return this.dt._selectAll;\n    } else {\n      const data = this.dt.selectionPageOnly ? this.dt.dataToRender : this.dt.filteredValue || this.dt.value || [];\n      const val = this.dt.frozenValue ? [...this.dt.frozenValue, ...data] : data;\n      const selectableVal = this.dt.rowSelectable ? val.filter((data, index) => this.dt.rowSelectable({\n        data,\n        index\n      })) : val;\n      return ObjectUtils.isNotEmpty(selectableVal) && ObjectUtils.isNotEmpty(this.dt.selection) && selectableVal.every(v => this.dt.selection.some(s => this.dt.equals(v, s)));\n    }\n  }\n\n}\n\nTableHeaderCheckbox.ɵfac = function TableHeaderCheckbox_Factory(t) {\n  return new (t || TableHeaderCheckbox)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableHeaderCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableHeaderCheckbox,\n  selectors: [[\"p-tableHeaderCheckbox\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    disabled: \"disabled\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 7,\n  vars: 18,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"ngClass\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"cb\", \"\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableHeaderCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableHeaderCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"focus\", function TableHeaderCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableHeaderCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4, 5);\n      i0.ɵɵelement(6, \"span\", 6);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c19, ctx.focused, ctx.isDisabled()));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.isDisabled());\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(12, _c22, ctx.checked, ctx.focused, ctx.isDisabled()));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c21, ctx.checked));\n    }\n  },\n  directives: [i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableHeaderCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableHeaderCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{'p-checkbox-focused':focused, 'p-checkbox-disabled': isDisabled()}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-focus':focused, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ReorderableRowHandle {\n  constructor(el) {\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n  }\n\n}\n\nReorderableRowHandle.ɵfac = function ReorderableRowHandle_Factory(t) {\n  return new (t || ReorderableRowHandle)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nReorderableRowHandle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReorderableRowHandle,\n  selectors: [[\"\", \"pReorderableRowHandle\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    index: [\"pReorderableRowHandle\", \"index\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReorderableRowHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRowHandle]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRowHandle\"]\n    }]\n  });\n})();\n\nclass ReorderableRow {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.el.nativeElement.droppable = true;\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.mouseDownListener = this.onMouseDown.bind(this);\n      this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n      this.dragStartListener = this.onDragStart.bind(this);\n      this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n      this.dragEndListener = this.onDragEnd.bind(this);\n      this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n      this.dragOverListener = this.onDragOver.bind(this);\n      this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      this.dragLeaveListener = this.onDragLeave.bind(this);\n      this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n    });\n  }\n\n  unbindEvents() {\n    if (this.mouseDownListener) {\n      document.removeEventListener('mousedown', this.mouseDownListener);\n      this.mouseDownListener = null;\n    }\n\n    if (this.dragStartListener) {\n      document.removeEventListener('dragstart', this.dragStartListener);\n      this.dragStartListener = null;\n    }\n\n    if (this.dragEndListener) {\n      document.removeEventListener('dragend', this.dragEndListener);\n      this.dragEndListener = null;\n    }\n\n    if (this.dragOverListener) {\n      document.removeEventListener('dragover', this.dragOverListener);\n      this.dragOverListener = null;\n    }\n\n    if (this.dragLeaveListener) {\n      document.removeEventListener('dragleave', this.dragLeaveListener);\n      this.dragLeaveListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle')) this.el.nativeElement.draggable = true;else this.el.nativeElement.draggable = false;\n  }\n\n  onDragStart(event) {\n    this.dt.onRowDragStart(event, this.index);\n  }\n\n  onDragEnd(event) {\n    this.dt.onRowDragEnd(event);\n    this.el.nativeElement.draggable = false;\n  }\n\n  onDragOver(event) {\n    this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n    event.preventDefault();\n  }\n\n  onDragLeave(event) {\n    this.dt.onRowDragLeave(event, this.el.nativeElement);\n  }\n\n  isEnabled() {\n    return this.pReorderableRowDisabled !== true;\n  }\n\n  onDrop(event) {\n    if (this.isEnabled() && this.dt.rowDragging) {\n      this.dt.onRowDrop(event, this.el.nativeElement);\n    }\n\n    event.preventDefault();\n  }\n\n}\n\nReorderableRow.ɵfac = function ReorderableRow_Factory(t) {\n  return new (t || ReorderableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nReorderableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReorderableRow,\n  selectors: [[\"\", \"pReorderableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function ReorderableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function ReorderableRow_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    index: [\"pReorderableRow\", \"index\"],\n    pReorderableRowDisabled: \"pReorderableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReorderableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRow]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRow\"]\n    }],\n    pReorderableRowDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\n\nclass ColumnFilterFormElement {\n  constructor(dt) {\n    this.dt = dt;\n    this.useGrouping = true;\n  }\n\n  ngOnInit() {\n    this.filterCallback = value => {\n      this.filterConstraint.value = value;\n\n      this.dt._filter();\n    };\n  }\n\n  onModelChange(value) {\n    this.filterConstraint.value = value;\n\n    if (this.type === 'boolean' || value === '') {\n      this.dt._filter();\n    }\n  }\n\n  onTextInputEnterKeyDown(event) {\n    this.dt._filter();\n\n    event.preventDefault();\n  }\n\n  onNumericInputKeyDown(event) {\n    if (event.key === 'Enter') {\n      this.dt._filter();\n\n      event.preventDefault();\n    }\n  }\n\n}\n\nColumnFilterFormElement.ɵfac = function ColumnFilterFormElement_Factory(t) {\n  return new (t || ColumnFilterFormElement)(i0.ɵɵdirectiveInject(Table));\n};\n\nColumnFilterFormElement.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnFilterFormElement,\n  selectors: [[\"p-columnFilterFormElement\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    field: \"field\",\n    type: \"type\",\n    filterConstraint: \"filterConstraint\",\n    filterTemplate: \"filterTemplate\",\n    placeholder: \"placeholder\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"builtInElement\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"placeholder\", \"ngModel\", \"ngModelChange\"]],\n  template: function ColumnFilterFormElement_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColumnFilterFormElement_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_Template, 5, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.filterTemplate)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i5.InputNumber, i6.TriStateCheckbox, i7.Calendar, i4.NgIf, i4.NgTemplateOutlet, i4.NgSwitch, i4.NgSwitchCase, i8.InputText, i9.NgControlStatus, i9.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterFormElement, [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilterFormElement',\n      template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [placeholder]=\"placeholder\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    filterConstraint: [{\n      type: Input\n    }],\n    filterTemplate: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ColumnFilter {\n  constructor(el, dt, renderer, config, overlayService) {\n    this.el = el;\n    this.dt = dt;\n    this.renderer = renderer;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.type = 'text';\n    this.display = 'row';\n    this.showMenu = true;\n    this.operator = FilterOperator.AND;\n    this.showOperator = true;\n    this.showClearButton = true;\n    this.showApplyButton = true;\n    this.showMatchModes = true;\n    this.showAddButton = true;\n    this.hideOnClear = false;\n    this.maxConstraints = 2;\n    this.useGrouping = true;\n  }\n\n  ngOnInit() {\n    if (!this.dt.filters[this.field]) {\n      this.initFieldFilterConstraint();\n    }\n\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\n      this.generateMatchModeOptions();\n      this.generateOperatorOptions();\n    });\n    this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n      this.initFieldFilterConstraint();\n    });\n    this.generateMatchModeOptions();\n    this.generateOperatorOptions();\n  }\n\n  generateMatchModeOptions() {\n    var _a;\n\n    this.matchModes = this.matchModeOptions || ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(key => {\n      return {\n        label: this.config.getTranslation(key),\n        value: key\n      };\n    }));\n  }\n\n  generateOperatorOptions() {\n    this.operatorOptions = [{\n      label: this.config.getTranslation(TranslationKeys.MATCH_ALL),\n      value: FilterOperator.AND\n    }, {\n      label: this.config.getTranslation(TranslationKeys.MATCH_ANY),\n      value: FilterOperator.OR\n    }];\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.filterTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  initFieldFilterConstraint() {\n    let defaultMatchMode = this.getDefaultMatchMode();\n    this.dt.filters[this.field] = this.display == 'row' ? {\n      value: null,\n      matchMode: defaultMatchMode\n    } : [{\n      value: null,\n      matchMode: defaultMatchMode,\n      operator: this.operator\n    }];\n  }\n\n  onMenuMatchModeChange(value, filterMeta) {\n    filterMeta.matchMode = value;\n\n    if (!this.showApplyButton) {\n      this.dt._filter();\n    }\n  }\n\n  onRowMatchModeChange(matchMode) {\n    this.dt.filters[this.field].matchMode = matchMode;\n\n    this.dt._filter();\n\n    this.hide();\n  }\n\n  onRowMatchModeKeyDown(event) {\n    let item = event.target;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        var nextItem = this.findNextItem(item);\n\n        if (nextItem) {\n          item.removeAttribute('tabindex');\n          nextItem.tabIndex = '0';\n          nextItem.focus();\n        }\n\n        event.preventDefault();\n        break;\n\n      case 'ArrowUp':\n        var prevItem = this.findPrevItem(item);\n\n        if (prevItem) {\n          item.removeAttribute('tabindex');\n          prevItem.tabIndex = '0';\n          prevItem.focus();\n        }\n\n        event.preventDefault();\n        break;\n    }\n  }\n\n  onRowClearItemClick() {\n    this.clearFilter();\n    this.hide();\n  }\n\n  isRowMatchModeSelected(matchMode) {\n    return this.dt.filters[this.field].matchMode === matchMode;\n  }\n\n  addConstraint() {\n    this.dt.filters[this.field].push({\n      value: null,\n      matchMode: this.getDefaultMatchMode(),\n      operator: this.getDefaultOperator()\n    });\n\n    this.dt._filter();\n  }\n\n  removeConstraint(filterMeta) {\n    this.dt.filters[this.field] = this.dt.filters[this.field].filter(meta => meta !== filterMeta);\n\n    this.dt._filter();\n  }\n\n  onOperatorChange(value) {\n    this.dt.filters[this.field].forEach(filterMeta => {\n      filterMeta.operator = value;\n      this.operator = value;\n    });\n\n    if (!this.showApplyButton) {\n      this.dt._filter();\n    }\n  }\n\n  toggleMenu() {\n    this.overlayVisible = !this.overlayVisible;\n  }\n\n  onToggleButtonKeyDown(event) {\n    switch (event.key) {\n      case 'Escape':\n      case 'Tab':\n        this.overlayVisible = false;\n        break;\n\n      case 'ArrowDown':\n        if (this.overlayVisible) {\n          let focusable = DomHandler.getFocusableElements(this.overlay);\n\n          if (focusable) {\n            focusable[0].focus();\n          }\n\n          event.preventDefault();\n        } else if (event.altKey) {\n          this.overlayVisible = true;\n          event.preventDefault();\n        }\n\n        break;\n    }\n  }\n\n  onEscape() {\n    this.overlayVisible = false;\n    this.icon.nativeElement.focus();\n  }\n\n  findNextItem(item) {\n    let nextItem = item.nextElementSibling;\n    if (nextItem) return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;else return item.parentElement.firstElementChild;\n  }\n\n  findPrevItem(item) {\n    let prevItem = item.previousElementSibling;\n    if (prevItem) return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;else return item.parentElement.lastElementChild;\n  }\n\n  onContentClick() {\n    this.selfClick = true;\n  }\n\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        document.body.appendChild(this.overlay);\n        ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n        DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n\n        this.overlayEventListener = e => {\n          if (this.overlay && this.overlay.contains(e.target)) {\n            this.selfClick = true;\n          }\n        };\n\n        this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener);\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n\n        if (this.overlaySubscription) {\n          this.overlaySubscription.unsubscribe();\n        }\n\n        break;\n    }\n  }\n\n  onOverlayAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        ZIndexUtils.clear(event.element);\n        break;\n    }\n  }\n\n  getDefaultMatchMode() {\n    if (this.matchMode) {\n      return this.matchMode;\n    } else {\n      if (this.type === 'text') return FilterMatchMode.STARTS_WITH;else if (this.type === 'numeric') return FilterMatchMode.EQUALS;else if (this.type === 'date') return FilterMatchMode.DATE_IS;else return FilterMatchMode.CONTAINS;\n    }\n  }\n\n  getDefaultOperator() {\n    return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n  }\n\n  hasRowFilter() {\n    return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n  }\n\n  get fieldConstraints() {\n    return this.dt.filters ? this.dt.filters[this.field] : null;\n  }\n\n  get showRemoveIcon() {\n    return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n  }\n\n  get showMenuButton() {\n    return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n  }\n\n  get isShowOperator() {\n    return this.showOperator && this.type !== 'boolean';\n  }\n\n  get isShowAddConstraint() {\n    return this.showAddButton && this.type !== 'boolean' && this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints;\n  }\n\n  get applyButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.APPLY);\n  }\n\n  get clearButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.CLEAR);\n  }\n\n  get addRuleButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.ADD_RULE);\n  }\n\n  get removeRuleButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n  }\n\n  get noFilterLabel() {\n    return this.config.getTranslation(TranslationKeys.NO_FILTER);\n  }\n\n  hasFilter() {\n    let fieldFilter = this.dt.filters[this.field];\n\n    if (fieldFilter) {\n      if (Array.isArray(fieldFilter)) return !this.dt.isFilterBlank(fieldFilter[0].value);else return !this.dt.isFilterBlank(fieldFilter.value);\n    }\n\n    return false;\n  }\n\n  isOutsideClicked(event) {\n    return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target) || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target) || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button') || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n        if (this.overlayVisible && !this.selfClick && this.isOutsideClicked(event)) {\n          this.hide();\n        }\n\n        this.selfClick = false;\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n      this.selfClick = false;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = () => this.hide();\n\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  hide() {\n    this.overlayVisible = false;\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n  }\n\n  clearFilter() {\n    this.initFieldFilterConstraint();\n\n    this.dt._filter();\n\n    if (this.hideOnClear) this.hide();\n  }\n\n  applyFilter() {\n    this.dt._filter();\n\n    this.hide();\n  }\n\n  ngOnDestroy() {\n    if (this.overlay) {\n      this.el.nativeElement.appendChild(this.overlay);\n      ZIndexUtils.clear(this.overlay);\n      this.onOverlayHide();\n    }\n\n    if (this.translationSubscription) {\n      this.translationSubscription.unsubscribe();\n    }\n\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n\n    if (this.overlaySubscription) {\n      this.overlaySubscription.unsubscribe();\n    }\n  }\n\n}\n\nColumnFilter.ɵfac = function ColumnFilter_Factory(t) {\n  return new (t || ColumnFilter)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nColumnFilter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnFilter,\n  selectors: [[\"p-columnFilter\"]],\n  contentQueries: function ColumnFilter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function ColumnFilter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c24, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.icon = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    field: \"field\",\n    type: \"type\",\n    display: \"display\",\n    showMenu: \"showMenu\",\n    matchMode: \"matchMode\",\n    operator: \"operator\",\n    showOperator: \"showOperator\",\n    showClearButton: \"showClearButton\",\n    showApplyButton: \"showApplyButton\",\n    showMatchModes: \"showMatchModes\",\n    showAddButton: \"showAddButton\",\n    hideOnClear: \"hideOnClear\",\n    placeholder: \"placeholder\",\n    matchModeOptions: \"matchModeOptions\",\n    maxConstraints: \"maxConstraints\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\"\n  },\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"p-column-filter\", 3, \"ngClass\"], [\"class\", \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-menu-button p-link\", \"aria-haspopup\", \"true\", 3, \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-clear-button p-link\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\", \"keydown.escape\", 4, \"ngIf\"], [1, \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"aria-haspopup\", \"true\", 1, \"p-column-filter-menu-button\", \"p-link\", 3, \"ngClass\", \"click\", \"keydown\"], [\"icon\", \"\"], [1, \"pi\", \"pi-filter-icon\", \"pi-filter\"], [\"type\", \"button\", 1, \"p-column-filter-clear-button\", \"p-link\", 3, \"ngClass\", \"click\"], [1, \"pi\", \"pi-filter-slash\"], [3, \"ngClass\", \"click\", \"keydown.escape\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-column-filter-row-items\", 4, \"ngIf\", \"ngIfElse\"], [\"menu\", \"\"], [1, \"p-column-filter-row-items\"], [\"class\", \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-column-filter-separator\"], [1, \"p-column-filter-row-item\", 3, \"click\", \"keydown\", \"keydown.enter\"], [1, \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\"], [\"class\", \"p-column-filter-operator\", 4, \"ngIf\"], [1, \"p-column-filter-constraints\"], [\"class\", \"p-column-filter-constraint\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-column-filter-add-rule\", 4, \"ngIf\"], [1, \"p-column-filter-buttonbar\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-outlined p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [1, \"p-column-filter-operator\"], [\"styleClass\", \"p-column-filter-operator-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [1, \"p-column-filter-constraint\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"class\", \"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"pRipple\", \"\", 1, \"p-column-filter-remove-button\", \"p-button-text\", \"p-button-danger\", \"p-button-sm\", 3, \"label\", \"click\"], [1, \"p-column-filter-add-rule\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-plus\", \"pRipple\", \"\", 1, \"p-column-filter-add-button\", \"p-button-text\", \"p-button-sm\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-outlined\", \"p-button-sm\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-sm\", 3, \"label\", \"click\"]],\n  template: function ColumnFilter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ColumnFilter_p_columnFilterFormElement_1_Template, 1, 14, \"p-columnFilterFormElement\", 1);\n      i0.ɵɵtemplate(2, ColumnFilter_button_2_Template, 3, 5, \"button\", 2);\n      i0.ɵɵtemplate(3, ColumnFilter_button_3_Template, 3, 3, \"button\", 3);\n      i0.ɵɵtemplate(4, ColumnFilter_div_4_Template, 6, 14, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c29, ctx.display === \"row\", ctx.display === \"menu\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.display === \"row\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenuButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showClearButton && ctx.display === \"row\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenu && ctx.overlayVisible);\n    }\n  },\n  directives: [ColumnFilterFormElement, i10.Dropdown, i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i4.NgForOf, i9.NgControlStatus, i9.NgModel, i11.ButtonDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n      opacity: 0\n    }))])])]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilter, [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilter',\n      template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showClearButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined p-button-sm\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" class=\"p-button-sm\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: Table\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    showMenu: [{\n      type: Input\n    }],\n    matchMode: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    showOperator: [{\n      type: Input\n    }],\n    showClearButton: [{\n      type: Input\n    }],\n    showApplyButton: [{\n      type: Input\n    }],\n    showMatchModes: [{\n      type: Input\n    }],\n    showAddButton: [{\n      type: Input\n    }],\n    hideOnClear: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    matchModeOptions: [{\n      type: Input\n    }],\n    maxConstraints: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    icon: [{\n      type: ViewChild,\n      args: ['icon']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass TableModule {}\n\nTableModule.ɵfac = function TableModule_Factory(t) {\n  return new (t || TableModule)();\n};\n\nTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TableModule\n});\nTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule, ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n      exports: [Table, SharedModule, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n      declarations: [Table, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, FrozenColumn, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowGroupHeader, RowToggler, SaveEditableRow, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService };","map":{"version":3,"sources":["D:/Angular/deep/EMS/node_modules/primeng/fesm2015/primeng-table.mjs"],"names":["i0","Injectable","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","Directive","HostListener","Optional","NgModule","i4","CommonModule","i9","FormsModule","i1","FilterOperator","FilterMatchMode","PrimeTemplate","TranslationKeys","SharedModule","i2","PaginatorModule","i8","InputTextModule","i11","ButtonModule","SelectButtonModule","i6","TriStateCheckboxModule","i7","CalendarModule","i5","InputNumberModule","i10","DropdownModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","ZIndexUtils","Subject","i3","CdkVirtualScrollViewport","ScrollingModule","trigger","transition","style","animate","TableService","constructor","sortSource","selectionSource","contextMenuSource","valueSource","totalRecordsSource","columnsSource","resetSource","sortSource$","asObservable","selectionSource$","contextMenuSource$","valueSource$","totalRecordsSource$","columnsSource$","resetSource$","onSort","sortMeta","next","onSelectionChange","onResetChange","onContextMenu","data","onValueChange","value","onTotalRecordsChange","onColumnsChange","columns","ɵfac","ɵprov","type","Table","el","zone","tableService","cd","filterService","overlayService","pageLinks","alwaysShowPaginator","paginatorPosition","paginatorDropdownScrollHeight","currentPageReportTemplate","showFirstLastIcon","showPageLinks","defaultSortOrder","sortMode","resetPageOnSort","selectAllChange","selectionChange","contextMenuSelectionChange","contextMenuSelectionMode","rowTrackBy","index","item","lazy","lazyLoadOnInit","compareSelectionBy","csvSeparator","exportFilename","filters","filterDelay","expandedRowKeys","editingRowKeys","rowExpandMode","scrollDirection","virtualScrollDelay","virtualRowHeight","columnResizeMode","loadingIcon","showLoader","showInitialSortBadge","stateStorage","editMode","groupRowsByOrder","responsiveLayout","breakpoint","onRowSelect","onRowUnselect","onPage","onFilter","onLazyLoad","onRowExpand","onRowCollapse","onContextMenuSelect","onColResize","onColReorder","onRowReorder","onEditInit","onEditComplete","onEditCancel","onHeaderCheckboxToggle","sortFunction","firstChange","rowsChange","onStateSave","onStateRestore","_value","_totalRecords","_first","selectionKeys","_sortOrder","_selectAll","columnResizing","rowGroupHeaderStyleObject","id","virtualScrollInitialized","ngOnInit","virtualScroll","emit","createLazyLoadMetadata","restoringFilter","scrollable","createResponsiveStyle","initialized","ngAfterContentInit","templates","forEach","getType","captionTemplate","template","headerTemplate","headerGroupedTemplate","bodyTemplate","loadingBodyTemplate","footerTemplate","footerGroupedTemplate","summaryTemplate","colGroupTemplate","expandedRowTemplate","groupHeaderTemplate","rowspanTemplate","groupFooterTemplate","frozenRowsTemplate","frozenHeaderTemplate","frozenBodyTemplate","frozenFooterTemplate","frozenColGroupTemplate","frozenExpandedRowTemplate","emptyMessageTemplate","paginatorLeftTemplate","paginatorRightTemplate","paginatorDropdownItemTemplate","ngAfterViewInit","isStateful","resizableColumns","restoreColumnWidths","virtualScrollSubscription","virtualScrollBody","renderedRangeStream","subscribe","range","top","start","tableHeaderViewChild","nativeElement","ngOnChanges","simpleChange","stateRestored","restoreState","currentValue","totalRecords","length","sortField","groupRowsBy","sortSingle","multiSortMeta","sortMultiple","hasFilter","_filter","_columns","reorderableColumns","columnOrderStateRestored","restoreColumnOrder","_sortField","sortOrder","_multiSortMeta","selection","_selection","preventSelectionSetterPropagation","updateSelectionKeys","selectAll","saveState","val","cols","first","rows","_rows","dataToRender","filteredValue","paginator","slice","dataKey","Array","isArray","String","resolveFieldData","onPageChange","event","anchorRowIndex","resetScrollTop","sort","originalEvent","field","metaKey","ctrlKey","getSortMeta","order","push","getGroupRowsMeta","restoringSort","customSort","mode","data1","data2","value1","value2","result","localeCompare","multisortField","multisortmeta","i","isSorted","sorted","handleRowClick","target","targetNode","nodeName","parentNode","parentElement","hasClass","selectionMode","rowData","rowIndex","isMultipleSelectionMode","shiftKey","clearSelection","rangeRowIndex","clearSelectionRange","selectRange","selected","isSelected","isRowSelectable","metaSelection","rowTouched","metaKeySelection","dataKeyValue","isSingleSelectionMode","selectionIndex","findIndexInSelection","filter","handleRowTouchEnd","handleRowRightClick","contextMenu","contextMenuSelection","show","rangeStart","rangeEnd","rangeRowsData","rangeRowData","undefined","equals","rowSelectable","toggleRowWithRadio","toggleRowWithCheckbox","toggleRowsWithCheckbox","check","checked","selectionPageOnly","s","some","d","frozenValue","matchMode","filterTimeout","clearTimeout","isFilterBlank","setTimeout","filterGlobal","trim","globalFilterFieldsArray","globalFilterFields","Error","localMatch","globalMatch","localFiltered","prop","hasOwnProperty","filterField","filterMeta","meta","executeLocalFilter","operator","OR","AND","j","globalFilterField","filterLocale","matches","markForCheck","filterValue","filterMatchMode","STARTS_WITH","dataFieldValue","filterConstraint","empty","globalFilter","clear","reset","getExportHeader","column","exportHeader","header","exportCSV","options","csv","selectionOnly","exportable","record","cellData","exportFunction","replace","blob","Blob","link","document","createElement","display","body","appendChild","download","setAttribute","URL","createObjectURL","click","window","open","encodeURI","removeChild","scrollToVirtualIndex","scrollTo","scrollToIndex","onScrollIndexChange","virtualScrollTimeout","page","Math","floor","virtualScrollOffset","virtualScrollChunkSize","virtualPage","wrapperViewChild","scrollLeft","left","scrollTop","updateEditingCell","cell","editingCell","editingCellData","editingCellField","editingCellRowIndex","bindDocumentEditListener","isEditingCellValid","find","documentEditListener","selfClick","removeClass","unbindDocumentEditListener","overlaySubscription","unsubscribe","addEventListener","removeEventListener","initRowEdit","saveRowEdit","rowElement","cancelRowEdit","toggleRow","preventDefault","isRowExpanded","isRowEditing","onColumnResizeBegin","containerLeft","getOffset","containerViewChild","resizeColumnElement","lastResizerHelperX","pageX","onColumnResize","addClass","resizeHelperViewChild","height","offsetHeight","onColumnResizeEnd","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","nextColumn","nextElementSibling","nextColumnWidth","resizeTableCells","tableWidth","tableViewChild","width","element","colIndex","widths","tableHead","findSingle","headers","getOuterWidth","destroyStyleElement","createStyleElement","innerHTML","colWidth","styleElement","onColumnDragStart","columnElement","reorderIconWidth","getHiddenElementOuterWidth","reorderIndicatorUpViewChild","reorderIconHeight","getHiddenElementOuterHeight","reorderIndicatorDownViewChild","draggedColumn","dataTransfer","setData","onColumnDragEnter","dropHeader","containerOffset","dropHeaderOffset","dragIndex","indexWithinGroup","dropIndex","targetLeft","targetTop","columnCenter","ceil","dropPosition","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","allowDrop","reorderArray","runOutsideAngular","draggable","onRowDragStart","rowDragging","draggedRowIndex","onRowDragOver","rowY","getWindowScrollTop","pageY","rowMidY","getOuterHeight","prevRowElement","previousElementSibling","droppedRowIndex","onRowDragLeave","onRowDragEnd","onRowDrop","isEmpty","getBlockableElement","children","getStorage","localStorage","sessionStorage","stateKey","storage","state","saveColumnWidths","saveColumnOrder","Object","keys","setItem","JSON","stringify","clearState","removeItem","stateString","getItem","dateFormat","reviver","key","test","Date","parse","columnWidthsState","columnWidths","tableWidthState","Promise","resolve","then","join","split","isNotEmpty","columnOrder","map","reorderedColumns","col","findColumnByKey","head","responsiveStyleElement","destroyResponsiveStyle","ngOnDestroy","ElementRef","NgZone","ChangeDetectorRef","FilterService","OverlayService","ɵcmp","Paginator","TableBody","NgStyle","NgClass","NgIf","NgTemplateOutlet","CdkFixedSizeVirtualScroll","args","selector","providers","changeDetection","Default","encapsulation","None","host","styles","frozenColumns","styleClass","tableStyle","tableStyleClass","rowsPerPageOptions","paginatorDropdownAppendTo","showCurrentPageReport","showJumpToPageDropdown","showJumpToPageInput","rowGroupMode","scrollHeight","frozenWidth","responsive","loading","rowHover","autoLayout","minBufferPx","maxBufferPx","dt","subscription","detectChanges","frozenRows","updateFrozenRowStickyPosition","updateFrozenRowGroupHeaderStickyPosition","shouldRenderRowGroupHeader","currentRowFieldData","prevRowData","previousRowFieldData","shouldRenderRowGroupFooter","nextRowData","nextRowFieldData","shouldRenderRowspan","calculateRowGroupSize","groupRowSpan","tableHeaderHeight","NgForOf","CdkVirtualForOf","frozen","RowGroupHeader","getFrozenRowGroupHeaderStickyPosition","ɵdir","FrozenColumn","alignFrozen","_frozen","updateStickyPosition","right","parseFloat","prev","filterRow","SortableColumn","isEnabled","updateSortState","onClick","isFilterElement","onEnterKey","pSortableColumnDisabled","SortIcon","getMultiSortMetaIndex","getBadgeValue","isMultiSorted","OnPush","SelectableRow","onTouchEnd","onArrowDownKeyDown","row","currentTarget","nextRow","findNextSelectableRow","focus","onArrowUpKeyDown","prevRow","findPrevSelectableRow","onEnterKeyDown","onPageDownKeyDown","elementRef","onSpaceKeydown","pSelectableRowDisabled","SelectableRowDblClick","ContextMenuRow","pContextMenuRowDisabled","RowToggler","pRowTogglerDisabled","ResizableColumn","resizer","className","resizerMouseDownListener","onMouseDown","bind","bindDocumentEvents","documentMouseMoveListener","onDocumentMouseMove","documentMouseUpListener","onDocumentMouseUp","unbindDocumentEvents","which","pResizableColumnDisabled","ReorderableColumn","bindEvents","mouseDownListener","dragStartListener","onDragStart","dragOverListener","onDragEnter","dragEnterListener","dragLeaveListener","onDragLeave","unbindEvents","onDragOver","onDrop","pReorderableColumnDisabled","EditableColumn","closeEditingCell","openCell","focusCellSelector","pFocusCellSelector","focusableElement","overlayEventListener","e","contains","clickObservable","completed","onEscapeKeyDown","onShiftKeyDown","moveToPreviousCell","moveToNextCell","onArrowDown","currentCell","findCell","cellIndex","targetCell","findNextEditableColumnByIndex","invokeElementMethod","onArrowUp","findPrevEditableColumnByIndex","onArrowLeft","onArrowRight","findPreviousEditableColumn","findNextEditableColumn","prevCell","previousRow","lastElementChild","nextCell","firstElementChild","pEditableColumnDisabled","EditableRow","pEditableRowDisabled","InitEditableRow","editableRow","SaveEditableRow","CancelEditableRow","CellEditor","editableColumn","inputTemplate","outputTemplate","editing","decorators","TableRadioButton","disabled","onFocus","focused","onBlur","inputId","name","ariaLabel","TableCheckbox","required","TableHeaderCheckbox","valueChangeSubscription","updateCheckedState","selectionChangeSubscription","isDisabled","selectableVal","every","v","ReorderableRowHandle","ReorderableRow","droppable","dragEndListener","onDragEnd","pReorderableRowDisabled","ColumnFilterFormElement","useGrouping","filterCallback","onModelChange","onTextInputEnterKeyDown","onNumericInputKeyDown","InputNumber","TriStateCheckbox","Calendar","NgSwitch","NgSwitchCase","InputText","NgControlStatus","NgModel","filterTemplate","placeholder","minFractionDigits","maxFractionDigits","prefix","suffix","locale","localeMatcher","currency","currencyDisplay","ColumnFilter","renderer","config","showMenu","showOperator","showClearButton","showApplyButton","showMatchModes","showAddButton","hideOnClear","maxConstraints","initFieldFilterConstraint","translationSubscription","translationObserver","generateMatchModeOptions","generateOperatorOptions","resetSubscription","_a","matchModes","matchModeOptions","filterMatchModeOptions","label","getTranslation","operatorOptions","MATCH_ALL","MATCH_ANY","defaultMatchMode","getDefaultMatchMode","onMenuMatchModeChange","onRowMatchModeChange","hide","onRowMatchModeKeyDown","nextItem","findNextItem","removeAttribute","tabIndex","prevItem","findPrevItem","onRowClearItemClick","clearFilter","isRowMatchModeSelected","addConstraint","getDefaultOperator","removeConstraint","onOperatorChange","toggleMenu","overlayVisible","onToggleButtonKeyDown","focusable","getFocusableElements","overlay","altKey","onEscape","icon","onContentClick","onOverlayAnimationStart","toState","set","zIndex","absolutePosition","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","EQUALS","DATE_IS","CONTAINS","hasRowFilter","fieldConstraints","showRemoveIcon","showMenuButton","isShowOperator","isShowAddConstraint","applyButtonLabel","APPLY","clearButtonLabel","CLEAR","addRuleButtonLabel","ADD_RULE","removeRuleButtonLabel","REMOVE_RULE","noFilterLabel","NO_FILTER","fieldFilter","isOutsideClicked","isSameNode","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentResizeListener","unbindDocumentResizeListener","scrollHandler","unbindScrollListener","applyFilter","Renderer2","PrimeNGConfig","Dropdown","ButtonDirective","opacity","transform","animations","TableModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\nclass TableService {\n    constructor() {\n        this.sortSource = new Subject();\n        this.selectionSource = new Subject();\n        this.contextMenuSource = new Subject();\n        this.valueSource = new Subject();\n        this.totalRecordsSource = new Subject();\n        this.columnsSource = new Subject();\n        this.resetSource = new Subject();\n        this.sortSource$ = this.sortSource.asObservable();\n        this.selectionSource$ = this.selectionSource.asObservable();\n        this.contextMenuSource$ = this.contextMenuSource.asObservable();\n        this.valueSource$ = this.valueSource.asObservable();\n        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n        this.columnsSource$ = this.columnsSource.asObservable();\n        this.resetSource$ = this.resetSource.asObservable();\n    }\n    onSort(sortMeta) {\n        this.sortSource.next(sortMeta);\n    }\n    onSelectionChange() {\n        this.selectionSource.next(null);\n    }\n    onResetChange() {\n        this.resetSource.next(null);\n    }\n    onContextMenu(data) {\n        this.contextMenuSource.next(data);\n    }\n    onValueChange(value) {\n        this.valueSource.next(value);\n    }\n    onTotalRecordsChange(value) {\n        this.totalRecordsSource.next(value);\n    }\n    onColumnsChange(columns) {\n        this.columnsSource.next(columns);\n    }\n}\nTableService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTableService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableService, decorators: [{\n            type: Injectable\n        }] });\nclass Table {\n    constructor(el, zone, tableService, cd, filterService, overlayService) {\n        this.el = el;\n        this.zone = zone;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.overlayService = overlayService;\n        this.pageLinks = 5;\n        this.alwaysShowPaginator = true;\n        this.paginatorPosition = 'bottom';\n        this.paginatorDropdownScrollHeight = '200px';\n        this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n        this.showFirstLastIcon = true;\n        this.showPageLinks = true;\n        this.defaultSortOrder = 1;\n        this.sortMode = 'single';\n        this.resetPageOnSort = true;\n        this.selectAllChange = new EventEmitter();\n        this.selectionChange = new EventEmitter();\n        this.contextMenuSelectionChange = new EventEmitter();\n        this.contextMenuSelectionMode = \"separate\";\n        this.rowTrackBy = (index, item) => item;\n        this.lazy = false;\n        this.lazyLoadOnInit = true;\n        this.compareSelectionBy = 'deepEquals';\n        this.csvSeparator = ',';\n        this.exportFilename = 'download';\n        this.filters = {};\n        this.filterDelay = 300;\n        this.expandedRowKeys = {};\n        this.editingRowKeys = {};\n        this.rowExpandMode = 'multiple';\n        this.scrollDirection = \"vertical\";\n        this.virtualScrollDelay = 250;\n        this.virtualRowHeight = 28;\n        this.columnResizeMode = 'fit';\n        this.loadingIcon = 'pi pi-spinner';\n        this.showLoader = true;\n        this.showInitialSortBadge = true;\n        this.stateStorage = 'session';\n        this.editMode = 'cell';\n        this.groupRowsByOrder = 1;\n        this.responsiveLayout = 'stack';\n        this.breakpoint = '960px';\n        this.onRowSelect = new EventEmitter();\n        this.onRowUnselect = new EventEmitter();\n        this.onPage = new EventEmitter();\n        this.onSort = new EventEmitter();\n        this.onFilter = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onRowExpand = new EventEmitter();\n        this.onRowCollapse = new EventEmitter();\n        this.onContextMenuSelect = new EventEmitter();\n        this.onColResize = new EventEmitter();\n        this.onColReorder = new EventEmitter();\n        this.onRowReorder = new EventEmitter();\n        this.onEditInit = new EventEmitter();\n        this.onEditComplete = new EventEmitter();\n        this.onEditCancel = new EventEmitter();\n        this.onHeaderCheckboxToggle = new EventEmitter();\n        this.sortFunction = new EventEmitter();\n        this.firstChange = new EventEmitter();\n        this.rowsChange = new EventEmitter();\n        this.onStateSave = new EventEmitter();\n        this.onStateRestore = new EventEmitter();\n        this._value = [];\n        this._totalRecords = 0;\n        this._first = 0;\n        this.selectionKeys = {};\n        this._sortOrder = 1;\n        this._selectAll = null;\n        this.columnResizing = false;\n        this.rowGroupHeaderStyleObject = {};\n        this.id = UniqueComponentId();\n        this.virtualScrollInitialized = false;\n    }\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n            if (!this.virtualScroll) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            if (this.restoringFilter) {\n                this.restoringFilter = false;\n            }\n        }\n        if (this.responsiveLayout === 'stack' && !this.scrollable) {\n            this.createResponsiveStyle();\n        }\n        this.initialized = true;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'headergrouped':\n                    this.headerGroupedTemplate = item.template;\n                    break;\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n                case 'loadingbody':\n                    this.loadingBodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'footergrouped':\n                    this.footerGroupedTemplate = item.template;\n                    break;\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                    break;\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                    break;\n                case 'rowexpansion':\n                    this.expandedRowTemplate = item.template;\n                    break;\n                case 'groupheader':\n                    this.groupHeaderTemplate = item.template;\n                    break;\n                case 'rowspan':\n                    this.rowspanTemplate = item.template;\n                    break;\n                case 'groupfooter':\n                    this.groupFooterTemplate = item.template;\n                    break;\n                case 'frozenrows':\n                    this.frozenRowsTemplate = item.template;\n                    break;\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                    break;\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                    break;\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                    break;\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                    break;\n                case 'frozenrowexpansion':\n                    this.frozenExpandedRowTemplate = item.template;\n                    break;\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                    break;\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                    break;\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                    break;\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.isStateful() && this.resizableColumns) {\n            this.restoreColumnWidths();\n        }\n        if (this.scrollable && this.virtualScroll) {\n            this.virtualScrollSubscription = this.virtualScrollBody.renderedRangeStream.subscribe(range => {\n                let top = range.start * this.virtualRowHeight * -1;\n                this.tableHeaderViewChild.nativeElement.style.top = top + 'px';\n            });\n        }\n    }\n    ngOnChanges(simpleChange) {\n        if (simpleChange.value) {\n            if (this.isStateful() && !this.stateRestored) {\n                this.restoreState();\n            }\n            this._value = simpleChange.value.currentValue;\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n                if (this.sortMode == 'single' && (this.sortField || this.groupRowsBy))\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && (this.multiSortMeta || this.groupRowsBy))\n                    this.sortMultiple();\n                else if (this.hasFilter()) //sort already filters\n                    this._filter();\n            }\n            this.tableService.onValueChange(simpleChange.value.currentValue);\n        }\n        if (simpleChange.columns) {\n            this._columns = simpleChange.columns.currentValue;\n            this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n                this.restoreColumnOrder();\n            }\n        }\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.groupRowsBy) {\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.groupRowsByOrder) {\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple' && (this.initialized || (!this.lazy && !this.virtualScroll))) {\n                this.sortMultiple();\n            }\n        }\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n        if (simpleChange.selectAll) {\n            this._selectAll = simpleChange.selectAll.currentValue;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n                if (this.isStateful()) {\n                    this.saveState();\n                }\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n    }\n    get columns() {\n        return this._columns;\n    }\n    set columns(cols) {\n        this._columns = cols;\n    }\n    get first() {\n        return this._first;\n    }\n    set first(val) {\n        this._first = val;\n    }\n    get rows() {\n        return this._rows;\n    }\n    set rows(val) {\n        this._rows = val;\n    }\n    get totalRecords() {\n        return this._totalRecords;\n    }\n    set totalRecords(val) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n    get sortField() {\n        return this._sortField;\n    }\n    set sortField(val) {\n        this._sortField = val;\n    }\n    get sortOrder() {\n        return this._sortOrder;\n    }\n    set sortOrder(val) {\n        this._sortOrder = val;\n    }\n    get multiSortMeta() {\n        return this._multiSortMeta;\n    }\n    set multiSortMeta(val) {\n        this._multiSortMeta = val;\n    }\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n    }\n    get selectAll() {\n        return this._selection;\n    }\n    set selectAll(val) {\n        this._selection = val;\n    }\n    get dataToRender() {\n        let data = this.filteredValue || this.value;\n        return data ? ((this.paginator && !this.lazy) ? (data.slice(this.first, this.first + this.rows)) : data) : [];\n    }\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for (let data of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n            }\n        }\n    }\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    sort(event) {\n        let originalEvent = event.originalEvent;\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n                if (this.scrollable) {\n                    this.resetScrollTop();\n                }\n            }\n            this.sortSingle();\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                        if (this.scrollable) {\n                            this.resetScrollTop();\n                        }\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                    }\n                }\n                this._multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n            this.sortMultiple();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n    }\n    sortSingle() {\n        let field = this.sortField || this.groupRowsBy;\n        let order = this.sortField ? this.sortOrder : this.groupRowsByOrder;\n        if (this.groupRowsBy && this.sortField && this.groupRowsBy !== this.sortField) {\n            this._multiSortMeta = [this.getGroupRowsMeta(), { field: this.sortField, order: this.sortOrder }];\n            this.sortMultiple();\n            return;\n        }\n        if (field && order) {\n            if (this.restoringSort) {\n                this.restoringSort = false;\n            }\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        field: field,\n                        order: order\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        let value1 = ObjectUtils.resolveFieldData(data1, field);\n                        let value2 = ObjectUtils.resolveFieldData(data2, field);\n                        let result = null;\n                        if (value1 == null && value2 != null)\n                            result = -1;\n                        else if (value1 != null && value2 == null)\n                            result = 1;\n                        else if (value1 == null && value2 == null)\n                            result = 0;\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\n                            result = value1.localeCompare(value2);\n                        else\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n                        return (order * result);\n                    });\n                    this._value = [...this.value];\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            let sortMeta = {\n                field: field,\n                order: order\n            };\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n        }\n    }\n    sortMultiple() {\n        if (this.groupRowsBy) {\n            if (!this._multiSortMeta)\n                this._multiSortMeta = [this.getGroupRowsMeta()];\n            else if (this.multiSortMeta[0].field !== this.groupRowsBy)\n                this._multiSortMeta = [this.getGroupRowsMeta(), ...this._multiSortMeta];\n        }\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        return this.multisortField(data1, data2, this.multiSortMeta, 0);\n                    });\n                    this._value = [...this.value];\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n    multisortField(data1, data2, multiSortMeta, index) {\n        let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        let result = null;\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        else if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\n        }\n        return (multiSortMeta[index].order * result);\n    }\n    getSortMeta(field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n        return null;\n    }\n    isSorted(field) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for (let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n    handleRowClick(event) {\n        let target = event.originalEvent.target;\n        let targetNode = target.nodeName;\n        let parentNode = target.parentElement && target.parentElement.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n            parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n            (DomHandler.hasClass(event.originalEvent.target, 'p-clickable'))) {\n            return;\n        }\n        if (this.selectionMode) {\n            let rowData = event.rowData;\n            let rowIndex = event.rowIndex;\n            this.preventSelectionSetterPropagation = true;\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n                DomHandler.clearSelection();\n                if (this.rangeRowIndex != null) {\n                    this.clearSelectionRange(event.originalEvent);\n                }\n                this.rangeRowIndex = rowIndex;\n                this.selectRange(event.originalEvent, rowIndex);\n            }\n            else {\n                let selected = this.isSelected(rowData);\n                if (!selected && !this.isRowSelectable(rowData, rowIndex)) {\n                    return;\n                }\n                let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                this.anchorRowIndex = rowIndex;\n                this.rangeRowIndex = rowIndex;\n                if (metaSelection) {\n                    let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = rowData;\n                            this.selectionChange.emit(rowData);\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            if (metaKey) {\n                                this._selection = this.selection || [];\n                            }\n                            else {\n                                this._selection = [];\n                                this.selectionKeys = {};\n                            }\n                            this._selection = [...this.selection, rowData];\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: rowIndex });\n                    }\n                }\n                else {\n                    if (this.selectionMode === 'single') {\n                        if (selected) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: rowIndex });\n                        }\n                        else {\n                            this._selection = rowData;\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                    else if (this.selectionMode === 'multiple') {\n                        if (selected) {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: rowIndex });\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        else {\n                            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                }\n            }\n            this.tableService.onSelectionChange();\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.rowTouched = false;\n    }\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const rowData = event.rowData;\n            const rowIndex = event.rowIndex;\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = rowData;\n                this.contextMenuSelectionChange.emit(rowData);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, data: rowData, index: event.rowIndex });\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(rowData);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(rowData);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                if (!selected) {\n                    if (!this.isRowSelectable(rowData, rowIndex)) {\n                        return;\n                    }\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = rowData;\n                        this.selectionChange.emit(rowData);\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n                this.tableService.onSelectionChange();\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({ originalEvent: event, data: rowData, index: event.rowIndex });\n            }\n        }\n    }\n    selectRange(event, rowIndex) {\n        let rangeStart, rangeEnd;\n        if (this.anchorRowIndex > rowIndex) {\n            rangeStart = rowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else if (this.anchorRowIndex < rowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = rowIndex;\n        }\n        else {\n            rangeStart = rowIndex;\n            rangeEnd = rowIndex;\n        }\n        if (this.lazy && this.paginator) {\n            rangeStart -= this.first;\n            rangeEnd -= this.first;\n        }\n        let rangeRowsData = [];\n        for (let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n            if (!this.isSelected(rangeRowData)) {\n                if (!this.isRowSelectable(rangeRowData, rowIndex)) {\n                    continue;\n                }\n                rangeRowsData.push(rangeRowData);\n                this._selection = [...this.selection, rangeRowData];\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n        }\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({ originalEvent: event, data: rangeRowsData, type: 'row' });\n    }\n    clearSelectionRange(event) {\n        let rangeStart, rangeEnd;\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        for (let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.value[i];\n            let selectionIndex = this.findIndexInSelection(rangeRowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n            this.onRowUnselect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\n        }\n    }\n    isSelected(rowData) {\n        if (rowData && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(rowData) > -1;\n                else\n                    return this.equals(rowData, this.selection);\n            }\n        }\n        return false;\n    }\n    findIndexInSelection(rowData) {\n        let index = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(rowData, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    isRowSelectable(data, index) {\n        if (this.rowSelectable && !this.rowSelectable({ data, index })) {\n            return false;\n        }\n        return true;\n    }\n    toggleRowWithRadio(event, rowData) {\n        this.preventSelectionSetterPropagation = true;\n        if (this.selection != rowData) {\n            if (!this.isRowSelectable(rowData, event.rowIndex)) {\n                return;\n            }\n            this._selection = rowData;\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n            if (this.dataKey) {\n                this.selectionKeys = {};\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n            }\n        }\n        else {\n            this._selection = null;\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    toggleRowWithCheckbox(event, rowData) {\n        this.selection = this.selection || [];\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n        if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        else {\n            if (!this.isRowSelectable(rowData, event.rowIndex)) {\n                return;\n            }\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    toggleRowsWithCheckbox(event, check) {\n        if (this._selectAll !== null) {\n            this.selectAllChange.emit({ originalEvent: event, checked: check });\n        }\n        else {\n            const data = this.selectionPageOnly ? this.dataToRender : (this.filteredValue || this.value || []);\n            let selection = this.selectionPageOnly && this._selection ? this._selection.filter(s => !data.some(d => this.equals(s, d))) : [];\n            if (check) {\n                selection = this.frozenValue ? [...selection, ...this.frozenValue, ...data] : [...selection, ...data];\n                selection = this.rowSelectable ? selection.filter((data, index) => this.rowSelectable({ data, index })) : selection;\n            }\n            this._selection = selection;\n            this.preventSelectionSetterPropagation = true;\n            this.updateSelectionKeys();\n            this.selectionChange.emit(this._selection);\n            this.tableService.onSelectionChange();\n            this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n    }\n    equals(data1, data2) {\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n    }\n    /* Legacy Filtering for custom elements */\n    filter(value, field, matchMode) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        }\n        else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n        this.anchorRowIndex = null;\n    }\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n    isFilterBlank(filter) {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n    _filter() {\n        if (!this.restoringFilter) {\n            this.first = 0;\n            this.firstChange.emit(this.first);\n        }\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n            if (!this.hasFilter()) {\n                this.filteredValue = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\n                }\n                this.filteredValue = [];\n                for (let i = 0; i < this.value.length; i++) {\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let localFiltered = false;\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            localFiltered = true;\n                            let filterField = prop;\n                            let filterMeta = this.filters[filterField];\n                            if (Array.isArray(filterMeta)) {\n                                for (let meta of filterMeta) {\n                                    localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n                                    if ((meta.operator === FilterOperator.OR && localMatch) || (meta.operator === FilterOperator.AND && !localMatch)) {\n                                        break;\n                                    }\n                                }\n                            }\n                            else {\n                                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                            }\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                            globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n                            if (globalMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    let matches;\n                    if (this.filters['global']) {\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\n                    }\n                    else {\n                        matches = localFiltered && localMatch;\n                    }\n                    if (matches) {\n                        this.filteredValue.push(this.value[i]);\n                    }\n                }\n                if (this.filteredValue.length === this.value.length) {\n                    this.filteredValue = null;\n                }\n                if (this.paginator) {\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: this.filteredValue || this.value\n        });\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful() && !this.restoringFilter) {\n            this.saveState();\n        }\n        if (this.restoringFilter) {\n            this.restoringFilter = false;\n        }\n        this.cd.markForCheck();\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    executeLocalFilter(field, rowData, filterMeta) {\n        let filterValue = filterMeta.value;\n        let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n        let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n        let filterConstraint = this.filterService.filters[filterMatchMode];\n        return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n    }\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n        return !empty;\n    }\n    createLazyLoadMetadata() {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    }\n    clear() {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n        if (this.filters['global']) {\n            this.filters['global'].value = null;\n        }\n        this.filteredValue = null;\n        this.tableService.onResetChange();\n        this.first = 0;\n        this.firstChange.emit(this.first);\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    }\n    reset() {\n        this.clear();\n    }\n    getExportHeader(column) {\n        return column[this.exportHeader] || column.header || column.field;\n    }\n    exportCSV(options) {\n        let data;\n        let csv = '';\n        let columns = this.columns;\n        if (options && options.selectionOnly) {\n            data = this.selection || [];\n        }\n        else {\n            data = this.filteredValue || this.value;\n            if (this.frozenValue) {\n                data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n            }\n        }\n        //headers\n        for (let i = 0; i < columns.length; i++) {\n            let column = columns[i];\n            if (column.exportable !== false && column.field) {\n                csv += '\"' + this.getExportHeader(column) + '\"';\n                if (i < (columns.length - 1)) {\n                    csv += this.csvSeparator;\n                }\n            }\n        }\n        //body\n        data.forEach((record, i) => {\n            csv += '\\n';\n            for (let i = 0; i < columns.length; i++) {\n                let column = columns[i];\n                if (column.exportable !== false && column.field) {\n                    let cellData = ObjectUtils.resolveFieldData(record, column.field);\n                    if (cellData != null) {\n                        if (this.exportFunction) {\n                            cellData = this.exportFunction({\n                                data: cellData,\n                                field: column.field\n                            });\n                        }\n                        else\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\n                    }\n                    else\n                        cellData = '';\n                    csv += '\"' + cellData + '\"';\n                    if (i < (columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n        });\n        let blob = new Blob([csv], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        let link = document.createElement(\"a\");\n        link.style.display = 'none';\n        document.body.appendChild(link);\n        if (link.download !== undefined) {\n            link.setAttribute('href', URL.createObjectURL(blob));\n            link.setAttribute('download', this.exportFilename + '.csv');\n            link.click();\n        }\n        else {\n            csv = 'data:text/csv;charset=utf-8,' + csv;\n            window.open(encodeURI(csv));\n        }\n        document.body.removeChild(link);\n    }\n    resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({ top: 0 });\n    }\n    scrollToVirtualIndex(index) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollToIndex(index);\n        }\n    }\n    onScrollIndexChange(index) {\n        if (this.lazy) {\n            if (this.virtualScrollTimeout) {\n                clearTimeout(this.virtualScrollTimeout);\n            }\n            this.virtualScrollTimeout = setTimeout(() => {\n                let page = Math.floor(index / this.rows);\n                let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.rows;\n                let virtualScrollChunkSize = page === 0 ? this.rows * 2 : this.rows * 3;\n                if (page !== this.virtualPage) {\n                    this.virtualPage = page;\n                    if (this.lazyLoadOnInit || this.virtualScrollInitialized) {\n                        this.onLazyLoad.emit({\n                            first: virtualScrollOffset,\n                            rows: virtualScrollChunkSize,\n                            sortField: this.sortField,\n                            sortOrder: this.sortOrder,\n                            filters: this.filters,\n                            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n                            multiSortMeta: this.multiSortMeta\n                        });\n                    }\n                    else {\n                        this.virtualScrollInitialized = true;\n                    }\n                }\n            }, this.virtualScrollDelay);\n        }\n    }\n    scrollTo(options) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollTo(options);\n        }\n        else if (this.wrapperViewChild && this.wrapperViewChild.nativeElement) {\n            if (this.wrapperViewChild.nativeElement.scrollTo) {\n                this.wrapperViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.wrapperViewChild.nativeElement.scrollLeft = options.left;\n                this.wrapperViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n    updateEditingCell(cell, data, field, index) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.editingCellRowIndex = index;\n        this.bindDocumentEditListener();\n    }\n    isEditingCellValid() {\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    }\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = (event) => {\n                if (this.editingCell && !this.selfClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData, originalEvent: event, index: this.editingCellRowIndex });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.editingCellRowIndex = null;\n                    this.unbindDocumentEditListener();\n                    this.cd.markForCheck();\n                    if (this.overlaySubscription) {\n                        this.overlaySubscription.unsubscribe();\n                    }\n                }\n                this.selfClick = false;\n            };\n            document.addEventListener('click', this.documentEditListener);\n        }\n    }\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    }\n    initRowEdit(rowData) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n    }\n    saveRowEdit(rowData, rowElement) {\n        if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n            let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n            delete this.editingRowKeys[dataKeyValue];\n        }\n    }\n    cancelRowEdit(rowData) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n    }\n    toggleRow(rowData, event) {\n        if (!this.dataKey) {\n            throw new Error('dataKey must be defined to use row expansion');\n        }\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n            delete this.expandedRowKeys[dataKeyValue];\n            this.onRowCollapse.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        else {\n            if (this.rowExpandMode === 'single') {\n                this.expandedRowKeys = {};\n            }\n            this.expandedRowKeys[dataKeyValue] = true;\n            this.onRowExpand.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    isRowExpanded(rowData) {\n        return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n    isRowEditing(rowData) {\n        return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.resizeColumnElement = event.target.parentElement;\n        this.columnResizing = true;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        this.onColumnResize(event);\n        event.preventDefault();\n    }\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n    onColumnResizeEnd() {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = this.resizeColumnElement.offsetWidth;\n        let newColumnWidth = columnWidth + delta;\n        let minWidth = this.resizeColumnElement.style.minWidth || 15;\n        if (newColumnWidth >= minWidth) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = this.resizeColumnElement.nextElementSibling;\n                let nextColumnWidth = nextColumn.offsetWidth - delta;\n                if (newColumnWidth > 15 && nextColumnWidth > 15) {\n                    this.resizeTableCells(newColumnWidth, nextColumnWidth);\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                let tableWidth = this.tableViewChild.nativeElement.offsetWidth + delta;\n                this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n                this.tableViewChild.nativeElement.style.minWidth = tableWidth + 'px';\n                this.resizeTableCells(newColumnWidth, null);\n            }\n            this.onColResize.emit({\n                element: this.resizeColumnElement,\n                delta: delta\n            });\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    }\n    resizeTableCells(newColumnWidth, nextColumnWidth) {\n        let colIndex = DomHandler.index(this.resizeColumnElement);\n        let widths = [];\n        const tableHead = DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-thead');\n        let headers = DomHandler.find(tableHead, 'tr > th');\n        headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n        this.destroyStyleElement();\n        this.createStyleElement();\n        let innerHTML = '';\n        widths.forEach((width, index) => {\n            let colWidth = index === colIndex ? newColumnWidth : (nextColumnWidth && index === colIndex + 1) ? nextColumnWidth : width;\n            let style = this.scrollable ? `flex: 1 1 ${colWidth}px !important` : `width: ${colWidth}px !important`;\n            innerHTML += `\n                #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}),\n                #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}),\n                #${this.id} .p-datatable-tfoot > tr > td:nth-child(${index + 1}) {\n                    ${style}\n                }\n            `;\n        });\n        this.styleElement.innerHTML = innerHTML;\n    }\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n            if (this.draggedColumn != dropHeader) {\n                let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n                let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n                if ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dropIndex - dragIndex === -1 && this.dropPosition === 1)) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n                }\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n            let allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n                if (this.isStateful()) {\n                    this.zone.runOutsideAngular(() => {\n                        setTimeout(() => {\n                            this.saveState();\n                        });\n                    });\n                }\n            }\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n    onRowDragStart(event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onRowDragOver(event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n            let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n            let pageY = event.pageY;\n            let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n            let prevRowElement = rowElement.previousElementSibling;\n            if (pageY < rowMidY) {\n                DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n                this.droppedRowIndex = index;\n                if (prevRowElement)\n                    DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n            }\n            else {\n                if (prevRowElement)\n                    DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n                this.droppedRowIndex = index + 1;\n                DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n            }\n        }\n    }\n    onRowDragLeave(event, rowElement) {\n        let prevRowElement = rowElement.previousElementSibling;\n        if (prevRowElement) {\n            DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n        }\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n    }\n    onRowDragEnd(event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n    }\n    onRowDrop(event, rowElement) {\n        if (this.droppedRowIndex != null) {\n            let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n            ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n            this.onRowReorder.emit({\n                dragIndex: this.draggedRowIndex,\n                dropIndex: dropIndex\n            });\n        }\n        //cleanup\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n    }\n    isEmpty() {\n        let data = this.filteredValue || this.value;\n        return data == null || data.length == 0;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    getStorage() {\n        switch (this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n            case 'session':\n                return window.sessionStorage;\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    saveState() {\n        const storage = this.getStorage();\n        let state = {};\n        if (this.paginator) {\n            state.first = this.first;\n            state.rows = this.rows;\n        }\n        if (this.sortField) {\n            state.sortField = this.sortField;\n            state.sortOrder = this.sortOrder;\n        }\n        if (this.multiSortMeta) {\n            state.multiSortMeta = this.multiSortMeta;\n        }\n        if (this.hasFilter()) {\n            state.filters = this.filters;\n        }\n        if (this.resizableColumns) {\n            this.saveColumnWidths(state);\n        }\n        if (this.reorderableColumns) {\n            this.saveColumnOrder(state);\n        }\n        if (this.selection) {\n            state.selection = this.selection;\n        }\n        if (Object.keys(this.expandedRowKeys).length) {\n            state.expandedRowKeys = this.expandedRowKeys;\n        }\n        storage.setItem(this.stateKey, JSON.stringify(state));\n        this.onStateSave.emit(state);\n    }\n    clearState() {\n        const storage = this.getStorage();\n        if (this.stateKey) {\n            storage.removeItem(this.stateKey);\n        }\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n        const reviver = function (key, value) {\n            if (typeof value === \"string\" && dateFormat.test(value)) {\n                return new Date(value);\n            }\n            return value;\n        };\n        if (stateString) {\n            let state = JSON.parse(stateString, reviver);\n            if (this.paginator) {\n                if (this.first !== undefined) {\n                    this.first = state.first;\n                    this.firstChange.emit(this.first);\n                }\n                if (this.rows !== undefined) {\n                    this.rows = state.rows;\n                    this.rowsChange.emit(this.rows);\n                }\n            }\n            if (state.sortField) {\n                this.restoringSort = true;\n                this._sortField = state.sortField;\n                this._sortOrder = state.sortOrder;\n            }\n            if (state.multiSortMeta) {\n                this.restoringSort = true;\n                this._multiSortMeta = state.multiSortMeta;\n            }\n            if (state.filters) {\n                this.restoringFilter = true;\n                this.filters = state.filters;\n            }\n            if (this.resizableColumns) {\n                this.columnWidthsState = state.columnWidths;\n                this.tableWidthState = state.tableWidth;\n            }\n            if (state.expandedRowKeys) {\n                this.expandedRowKeys = state.expandedRowKeys;\n            }\n            if (state.selection) {\n                Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n            }\n            this.stateRestored = true;\n            this.onStateRestore.emit(state);\n        }\n    }\n    saveColumnWidths(state) {\n        let widths = [];\n        let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n        headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n        state.columnWidths = widths.join(',');\n        if (this.columnResizeMode === 'expand') {\n            state.tableWidth = DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n        }\n    }\n    restoreColumnWidths() {\n        if (this.columnWidthsState) {\n            let widths = this.columnWidthsState.split(',');\n            if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n                this.tableViewChild.nativeElement.style.minWidth = this.tableWidthState;\n                this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n            }\n            if (ObjectUtils.isNotEmpty(widths)) {\n                this.createStyleElement();\n                let innerHTML = '';\n                widths.forEach((width, index) => {\n                    let style = this.scrollable ? `flex: 1 1 ${width}px !important` : `width: ${width}px !important`;\n                    innerHTML += `\n                        #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}),\n                        #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}),\n                        #${this.id} .p-datatable-tfoot > tr > td:nth-child(${index + 1}) {\n                            ${style}\n                        }\n                    `;\n                });\n                this.styleElement.innerHTML = innerHTML;\n            }\n        }\n    }\n    saveColumnOrder(state) {\n        if (this.columns) {\n            let columnOrder = [];\n            this.columns.map(column => {\n                columnOrder.push(column.field || column.key);\n            });\n            state.columnOrder = columnOrder;\n        }\n    }\n    restoreColumnOrder() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            let state = JSON.parse(stateString);\n            let columnOrder = state.columnOrder;\n            if (columnOrder) {\n                let reorderedColumns = [];\n                columnOrder.map(key => {\n                    let col = this.findColumnByKey(key);\n                    if (col) {\n                        reorderedColumns.push(col);\n                    }\n                });\n                this.columnOrderStateRestored = true;\n                this.columns = reorderedColumns;\n            }\n        }\n    }\n    findColumnByKey(key) {\n        if (this.columns) {\n            for (let col of this.columns) {\n                if (col.key === key || col.field === key)\n                    return col;\n                else\n                    continue;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    createStyleElement() {\n        this.styleElement = document.createElement('style');\n        this.styleElement.type = 'text/css';\n        document.head.appendChild(this.styleElement);\n    }\n    getGroupRowsMeta() {\n        return { field: this.groupRowsBy, order: this.groupRowsByOrder };\n    }\n    createResponsiveStyle() {\n        if (!this.responsiveStyleElement) {\n            this.responsiveStyleElement = document.createElement('style');\n            this.responsiveStyleElement.type = 'text/css';\n            document.head.appendChild(this.responsiveStyleElement);\n            let innerHTML = `\n@media screen and (max-width: ${this.breakpoint}) {\n    #${this.id} .p-datatable-thead > tr > th,\n    #${this.id} .p-datatable-tfoot > tr > td {\n        display: none !important;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td {\n        display: flex;\n        width: 100% !important;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td:not(:last-child) {\n        border: 0 none;\n    }\n\n    #${this.id}.p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {\n        border-top: 0;\n        border-right: 0;\n        border-left: 0;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td > .p-column-title {\n        display: block;\n    }\n}\n`;\n            this.responsiveStyleElement.innerHTML = innerHTML;\n        }\n    }\n    destroyResponsiveStyle() {\n        if (this.responsiveStyleElement) {\n            document.head.removeChild(this.responsiveStyleElement);\n            this.responsiveStyleElement = null;\n        }\n    }\n    destroyStyleElement() {\n        if (this.styleElement) {\n            document.head.removeChild(this.styleElement);\n            this.styleElement = null;\n        }\n    }\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n        this.virtualScrollInitialized = null;\n        if (this.virtualScrollSubscription) {\n            this.virtualScrollSubscription.unsubscribe();\n        }\n        this.destroyStyleElement();\n        this.destroyResponsiveStyle();\n    }\n}\nTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: Table, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: TableService }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: Table, selector: \"p-table\", inputs: { frozenColumns: \"frozenColumns\", frozenValue: \"frozenValue\", style: \"style\", styleClass: \"styleClass\", tableStyle: \"tableStyle\", tableStyleClass: \"tableStyleClass\", paginator: \"paginator\", pageLinks: \"pageLinks\", rowsPerPageOptions: \"rowsPerPageOptions\", alwaysShowPaginator: \"alwaysShowPaginator\", paginatorPosition: \"paginatorPosition\", paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\", paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\", currentPageReportTemplate: \"currentPageReportTemplate\", showCurrentPageReport: \"showCurrentPageReport\", showJumpToPageDropdown: \"showJumpToPageDropdown\", showJumpToPageInput: \"showJumpToPageInput\", showFirstLastIcon: \"showFirstLastIcon\", showPageLinks: \"showPageLinks\", defaultSortOrder: \"defaultSortOrder\", sortMode: \"sortMode\", resetPageOnSort: \"resetPageOnSort\", selectionMode: \"selectionMode\", selectionPageOnly: \"selectionPageOnly\", contextMenuSelection: \"contextMenuSelection\", contextMenuSelectionMode: \"contextMenuSelectionMode\", dataKey: \"dataKey\", metaKeySelection: \"metaKeySelection\", rowSelectable: \"rowSelectable\", rowTrackBy: \"rowTrackBy\", lazy: \"lazy\", lazyLoadOnInit: \"lazyLoadOnInit\", compareSelectionBy: \"compareSelectionBy\", csvSeparator: \"csvSeparator\", exportFilename: \"exportFilename\", filters: \"filters\", globalFilterFields: \"globalFilterFields\", filterDelay: \"filterDelay\", filterLocale: \"filterLocale\", expandedRowKeys: \"expandedRowKeys\", editingRowKeys: \"editingRowKeys\", rowExpandMode: \"rowExpandMode\", scrollable: \"scrollable\", scrollDirection: \"scrollDirection\", rowGroupMode: \"rowGroupMode\", scrollHeight: \"scrollHeight\", virtualScroll: \"virtualScroll\", virtualScrollDelay: \"virtualScrollDelay\", virtualRowHeight: \"virtualRowHeight\", frozenWidth: \"frozenWidth\", responsive: \"responsive\", contextMenu: \"contextMenu\", resizableColumns: \"resizableColumns\", columnResizeMode: \"columnResizeMode\", reorderableColumns: \"reorderableColumns\", loading: \"loading\", loadingIcon: \"loadingIcon\", showLoader: \"showLoader\", rowHover: \"rowHover\", customSort: \"customSort\", showInitialSortBadge: \"showInitialSortBadge\", autoLayout: \"autoLayout\", exportFunction: \"exportFunction\", exportHeader: \"exportHeader\", stateKey: \"stateKey\", stateStorage: \"stateStorage\", editMode: \"editMode\", groupRowsBy: \"groupRowsBy\", groupRowsByOrder: \"groupRowsByOrder\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\", responsiveLayout: \"responsiveLayout\", breakpoint: \"breakpoint\", value: \"value\", columns: \"columns\", first: \"first\", rows: \"rows\", totalRecords: \"totalRecords\", sortField: \"sortField\", sortOrder: \"sortOrder\", multiSortMeta: \"multiSortMeta\", selection: \"selection\", selectAll: \"selectAll\" }, outputs: { selectAllChange: \"selectAllChange\", selectionChange: \"selectionChange\", contextMenuSelectionChange: \"contextMenuSelectionChange\", onRowSelect: \"onRowSelect\", onRowUnselect: \"onRowUnselect\", onPage: \"onPage\", onSort: \"onSort\", onFilter: \"onFilter\", onLazyLoad: \"onLazyLoad\", onRowExpand: \"onRowExpand\", onRowCollapse: \"onRowCollapse\", onContextMenuSelect: \"onContextMenuSelect\", onColResize: \"onColResize\", onColReorder: \"onColReorder\", onRowReorder: \"onRowReorder\", onEditInit: \"onEditInit\", onEditComplete: \"onEditComplete\", onEditCancel: \"onEditCancel\", onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\", sortFunction: \"sortFunction\", firstChange: \"firstChange\", rowsChange: \"rowsChange\", onStateSave: \"onStateSave\", onStateRestore: \"onStateRestore\" }, host: { classAttribute: \"p-element\" }, providers: [TableService], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"resizeHelperViewChild\", first: true, predicate: [\"resizeHelper\"], descendants: true }, { propertyName: \"reorderIndicatorUpViewChild\", first: true, predicate: [\"reorderIndicatorUp\"], descendants: true }, { propertyName: \"reorderIndicatorDownViewChild\", first: true, predicate: [\"reorderIndicatorDown\"], descendants: true }, { propertyName: \"wrapperViewChild\", first: true, predicate: [\"wrapper\"], descendants: true }, { propertyName: \"tableViewChild\", first: true, predicate: [\"table\"], descendants: true }, { propertyName: \"tableHeaderViewChild\", first: true, predicate: [\"tableHeader\"], descendants: true }, { propertyName: \"virtualScrollBody\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `, isInline: true, styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;min-width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-icon,.p-datatable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper>table,.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-thead,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot{display:block}.p-datatable-scrollable .p-datatable-thead>tr,.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-thead>tr>th,.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-thead,.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-virtual-scrollable-body>.cdk-virtual-scroll-content-wrapper>.p-datatable-table>.p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th .p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable{display:flex;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-thead>tr>th,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-tbody>tr>td{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column:not(.p-frozen-column){background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-editor-cancel,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-up,.p-datatable-reorder-indicator-down{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-menu-button,.p-column-filter-clear-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\\n\"], components: [{ type: i0.forwardRef(function () { return i2.Paginator; }), selector: \"p-paginator\", inputs: [\"pageLinkSize\", \"style\", \"styleClass\", \"alwaysShow\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showCurrentPageReport\", \"showFirstLastIcon\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"dropdownItemTemplate\", \"first\"], outputs: [\"onPageChange\"] }, { type: i0.forwardRef(function () { return TableBody; }), selector: \"[pTableBody]\", inputs: [\"pTableBody\", \"pTableBodyTemplate\", \"value\", \"frozen\", \"frozenRows\"] }, { type: i0.forwardRef(function () { return i3.CdkVirtualScrollViewport; }), selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\", \"appendOnly\"], outputs: [\"scrolledIndexChange\"] }], directives: [{ type: i0.forwardRef(function () { return i4.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i0.forwardRef(function () { return i4.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i4.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i0.forwardRef(function () { return i3.CdkFixedSizeVirtualScroll; }), selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: Table, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-table', template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\" [attr.id]=\"id+'-table'\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showJumpToPageInput]=\"showJumpToPageInput\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `, providers: [TableService], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, host: {\n                        'class': 'p-element'\n                    }, styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;min-width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-icon,.p-datatable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper>table,.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-thead,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot{display:block}.p-datatable-scrollable .p-datatable-thead>tr,.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-thead>tr>th,.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-thead,.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-virtual-scrollable-body>.cdk-virtual-scroll-content-wrapper>.p-datatable-table>.p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable>.p-datatable-wrapper>.p-datatable-table>.p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th .p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable{display:flex;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th,.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-thead>tr>th,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-tbody>tr>td{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column:not(.p-frozen-column){background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-editor-cancel,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-up,.p-datatable-reorder-indicator-down{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-menu-button,.p-column-filter-clear-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: TableService }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }, { type: i1.OverlayService }]; }, propDecorators: { frozenColumns: [{\n                type: Input\n            }], frozenValue: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tableStyle: [{\n                type: Input\n            }], tableStyleClass: [{\n                type: Input\n            }], paginator: [{\n                type: Input\n            }], pageLinks: [{\n                type: Input\n            }], rowsPerPageOptions: [{\n                type: Input\n            }], alwaysShowPaginator: [{\n                type: Input\n            }], paginatorPosition: [{\n                type: Input\n            }], paginatorDropdownAppendTo: [{\n                type: Input\n            }], paginatorDropdownScrollHeight: [{\n                type: Input\n            }], currentPageReportTemplate: [{\n                type: Input\n            }], showCurrentPageReport: [{\n                type: Input\n            }], showJumpToPageDropdown: [{\n                type: Input\n            }], showJumpToPageInput: [{\n                type: Input\n            }], showFirstLastIcon: [{\n                type: Input\n            }], showPageLinks: [{\n                type: Input\n            }], defaultSortOrder: [{\n                type: Input\n            }], sortMode: [{\n                type: Input\n            }], resetPageOnSort: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], selectionPageOnly: [{\n                type: Input\n            }], selectAllChange: [{\n                type: Output\n            }], selectionChange: [{\n                type: Output\n            }], contextMenuSelection: [{\n                type: Input\n            }], contextMenuSelectionChange: [{\n                type: Output\n            }], contextMenuSelectionMode: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], rowSelectable: [{\n                type: Input\n            }], rowTrackBy: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], lazyLoadOnInit: [{\n                type: Input\n            }], compareSelectionBy: [{\n                type: Input\n            }], csvSeparator: [{\n                type: Input\n            }], exportFilename: [{\n                type: Input\n            }], filters: [{\n                type: Input\n            }], globalFilterFields: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], expandedRowKeys: [{\n                type: Input\n            }], editingRowKeys: [{\n                type: Input\n            }], rowExpandMode: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], scrollDirection: [{\n                type: Input\n            }], rowGroupMode: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollDelay: [{\n                type: Input\n            }], virtualRowHeight: [{\n                type: Input\n            }], frozenWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], contextMenu: [{\n                type: Input\n            }], resizableColumns: [{\n                type: Input\n            }], columnResizeMode: [{\n                type: Input\n            }], reorderableColumns: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], showLoader: [{\n                type: Input\n            }], rowHover: [{\n                type: Input\n            }], customSort: [{\n                type: Input\n            }], showInitialSortBadge: [{\n                type: Input\n            }], autoLayout: [{\n                type: Input\n            }], exportFunction: [{\n                type: Input\n            }], exportHeader: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], editMode: [{\n                type: Input\n            }], groupRowsBy: [{\n                type: Input\n            }], groupRowsByOrder: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }], responsiveLayout: [{\n                type: Input\n            }], breakpoint: [{\n                type: Input\n            }], onRowSelect: [{\n                type: Output\n            }], onRowUnselect: [{\n                type: Output\n            }], onPage: [{\n                type: Output\n            }], onSort: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], onRowExpand: [{\n                type: Output\n            }], onRowCollapse: [{\n                type: Output\n            }], onContextMenuSelect: [{\n                type: Output\n            }], onColResize: [{\n                type: Output\n            }], onColReorder: [{\n                type: Output\n            }], onRowReorder: [{\n                type: Output\n            }], onEditInit: [{\n                type: Output\n            }], onEditComplete: [{\n                type: Output\n            }], onEditCancel: [{\n                type: Output\n            }], onHeaderCheckboxToggle: [{\n                type: Output\n            }], sortFunction: [{\n                type: Output\n            }], firstChange: [{\n                type: Output\n            }], rowsChange: [{\n                type: Output\n            }], onStateSave: [{\n                type: Output\n            }], onStateRestore: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], resizeHelperViewChild: [{\n                type: ViewChild,\n                args: ['resizeHelper']\n            }], reorderIndicatorUpViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorUp']\n            }], reorderIndicatorDownViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorDown']\n            }], wrapperViewChild: [{\n                type: ViewChild,\n                args: ['wrapper']\n            }], tableViewChild: [{\n                type: ViewChild,\n                args: ['table']\n            }], tableHeaderViewChild: [{\n                type: ViewChild,\n                args: ['tableHeader']\n            }], virtualScrollBody: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], value: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], totalRecords: [{\n                type: Input\n            }], sortField: [{\n                type: Input\n            }], sortOrder: [{\n                type: Input\n            }], multiSortMeta: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], selectAll: [{\n                type: Input\n            }] } });\nclass TableBody {\n    constructor(dt, tableService, cd, el) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.el = el;\n        this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n            if (this.dt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        if (this.frozenRows) {\n            this.updateFrozenRowStickyPosition();\n        }\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n            this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.frozenRows) {\n            this.updateFrozenRowStickyPosition();\n        }\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n            this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n    }\n    shouldRenderRowGroupHeader(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let prevRowData = value[i - 1];\n        if (prevRowData) {\n            let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== previousRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n    shouldRenderRowGroupFooter(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let nextRowData = value[i + 1];\n        if (nextRowData) {\n            let nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== nextRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n    shouldRenderRowspan(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let prevRowData = value[i - 1];\n        if (prevRowData) {\n            let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== previousRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n    calculateRowGroupSize(value, rowData, index) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let nextRowFieldData = currentRowFieldData;\n        let groupRowSpan = 0;\n        while (currentRowFieldData === nextRowFieldData) {\n            groupRowSpan++;\n            let nextRowData = value[++index];\n            if (nextRowData) {\n                nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n            }\n            else {\n                break;\n            }\n        }\n        return groupRowSpan === 1 ? null : groupRowSpan;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    updateFrozenRowStickyPosition() {\n        this.el.nativeElement.style.top = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling) + 'px';\n    }\n    updateFrozenRowGroupHeaderStickyPosition() {\n        if (this.el.nativeElement.previousElementSibling) {\n            let tableHeaderHeight = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling);\n            this.dt.rowGroupHeaderStyleObject.top = tableHeaderHeight + 'px';\n        }\n    }\n}\nTableBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableBody, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTableBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: TableBody, selector: \"[pTableBody]\", inputs: { columns: [\"pTableBody\", \"columns\"], template: [\"pTableBodyTemplate\", \"template\"], value: \"value\", frozen: \"frozen\", frozenRows: \"frozenRows\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableBody, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pTableBody]',\n                    template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { columns: [{\n                type: Input,\n                args: [\"pTableBody\"]\n            }], template: [{\n                type: Input,\n                args: [\"pTableBodyTemplate\"]\n            }], value: [{\n                type: Input\n            }], frozen: [{\n                type: Input\n            }], frozenRows: [{\n                type: Input\n            }] } });\nclass RowGroupHeader {\n    constructor(dt) {\n        this.dt = dt;\n    }\n    get getFrozenRowGroupHeaderStickyPosition() {\n        return this.dt.rowGroupHeaderStyleObject ? this.dt.rowGroupHeaderStyleObject.top : '';\n    }\n}\nRowGroupHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: RowGroupHeader, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nRowGroupHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: RowGroupHeader, selector: \"[pRowGroupHeader]\", host: { properties: { \"style.top\": \"getFrozenRowGroupHeaderStickyPosition\" }, classAttribute: \"p-rowgroup-header p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: RowGroupHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pRowGroupHeader]',\n                    host: {\n                        'class': 'p-rowgroup-header p-element',\n                        '[style.top]': \"getFrozenRowGroupHeaderStickyPosition\"\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; } });\nclass FrozenColumn {\n    constructor(el) {\n        this.el = el;\n        this.alignFrozen = \"left\";\n        this._frozen = true;\n    }\n    get frozen() {\n        return this._frozen;\n    }\n    set frozen(val) {\n        this._frozen = val;\n        this.updateStickyPosition();\n    }\n    ngAfterViewInit() {\n        this.updateStickyPosition();\n    }\n    updateStickyPosition() {\n        if (this._frozen) {\n            if (this.alignFrozen === 'right') {\n                let right = 0;\n                let next = this.el.nativeElement.nextElementSibling;\n                if (next) {\n                    right = DomHandler.getOuterWidth(next) + (parseFloat(next.style.right) || 0);\n                }\n                this.el.nativeElement.style.right = right + 'px';\n            }\n            else {\n                let left = 0;\n                let prev = this.el.nativeElement.previousElementSibling;\n                if (prev) {\n                    left = DomHandler.getOuterWidth(prev) + (parseFloat(prev.style.left) || 0);\n                }\n                this.el.nativeElement.style.left = left + 'px';\n            }\n            let filterRow = this.el.nativeElement.parentElement.nextElementSibling;\n            if (filterRow) {\n                let index = DomHandler.index(this.el.nativeElement);\n                if (filterRow.children && filterRow.children[index]) {\n                    filterRow.children[index].style.left = this.el.nativeElement.style.left;\n                    filterRow.children[index].style.right = this.el.nativeElement.style.right;\n                }\n            }\n        }\n    }\n}\nFrozenColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: FrozenColumn, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFrozenColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: FrozenColumn, selector: \"[pFrozenColumn]\", inputs: { frozen: \"frozen\", alignFrozen: \"alignFrozen\" }, host: { properties: { \"class.p-frozen-column\": \"frozen\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: FrozenColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pFrozenColumn]',\n                    host: {\n                        'class': 'p-element',\n                        '[class.p-frozen-column]': 'frozen'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { frozen: [{\n                type: Input\n            }], alignFrozen: [{\n                type: Input\n            }] } });\nclass SortableColumn {\n    constructor(dt) {\n        this.dt = dt;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n                this.updateSortState();\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n    updateSortState() {\n        this.sorted = this.dt.isSorted(this.field);\n        this.sortOrder = this.sorted ? (this.dt.sortOrder === 1 ? 'ascending' : 'descending') : 'none';\n    }\n    onClick(event) {\n        if (this.isEnabled() && !this.isFilterElement(event.target)) {\n            this.updateSortState();\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n            DomHandler.clearSelection();\n        }\n    }\n    onEnterKey(event) {\n        this.onClick(event);\n    }\n    isEnabled() {\n        return this.pSortableColumnDisabled !== true;\n    }\n    isFilterElement(element) {\n        return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSortableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SortableColumn, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nSortableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: SortableColumn, selector: \"[pSortableColumn]\", inputs: { field: [\"pSortableColumn\", \"field\"], pSortableColumnDisabled: \"pSortableColumnDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKey($event)\" }, properties: { \"class.p-sortable-column\": \"isEnabled()\", \"class.p-highlight\": \"sorted\", \"attr.tabindex\": \"isEnabled() ? \\\"0\\\" : null\", \"attr.role\": \"\\\"columnheader\\\"\", \"attr.aria-sort\": \"sortOrder\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SortableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSortableColumn]',\n                    host: {\n                        'class': 'p-element',\n                        '[class.p-sortable-column]': 'isEnabled()',\n                        '[class.p-highlight]': 'sorted',\n                        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n                        '[attr.role]': '\"columnheader\"',\n                        '[attr.aria-sort]': 'sortOrder'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { field: [{\n                type: Input,\n                args: [\"pSortableColumn\"]\n            }], pSortableColumnDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKey: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }] } });\nclass SortIcon {\n    constructor(dt, cd) {\n        this.dt = dt;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n    ngOnInit() {\n        this.updateSortState();\n    }\n    onClick(event) {\n        event.preventDefault();\n    }\n    updateSortState() {\n        if (this.dt.sortMode === 'single') {\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        }\n        else if (this.dt.sortMode === 'multiple') {\n            let sortMeta = this.dt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n        this.cd.markForCheck();\n    }\n    getMultiSortMetaIndex() {\n        let multiSortMeta = this.dt._multiSortMeta;\n        let index = -1;\n        if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n            for (let i = 0; i < multiSortMeta.length; i++) {\n                let meta = multiSortMeta[i];\n                if (meta.field === this.field || meta.field === this.field) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    getBadgeValue() {\n        let index = this.getMultiSortMetaIndex();\n        return this.dt.groupRowsBy && index > -1 ? index : index + 1;\n    }\n    isMultiSorted() {\n        return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSortIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SortIcon, deps: [{ token: Table }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSortIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: SortIcon, selector: \"p-sortIcon\", inputs: { field: \"field\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getBadgeValue()}}</span>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SortIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-sortIcon',\n                    template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getBadgeValue()}}</span>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { field: [{\n                type: Input\n            }] } });\nclass SelectableRow {\n    constructor(dt, tableService) {\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n    onTouchEnd(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowTouchEnd(event);\n        }\n    }\n    onArrowDownKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        const row = event.currentTarget;\n        const nextRow = this.findNextSelectableRow(row);\n        if (nextRow) {\n            nextRow.focus();\n        }\n        event.preventDefault();\n    }\n    onArrowUpKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        const row = event.currentTarget;\n        const prevRow = this.findPrevSelectableRow(row);\n        if (prevRow) {\n            prevRow.focus();\n        }\n        event.preventDefault();\n    }\n    onEnterKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n        });\n    }\n    onPageDownKeyDown() {\n        if (this.dt.virtualScroll) {\n            this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n    }\n    onSpaceKeydown() {\n        if (this.dt.virtualScroll && !this.dt.editingCell) {\n            this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n    }\n    findNextSelectableRow(row) {\n        let nextRow = row.nextElementSibling;\n        if (nextRow) {\n            if (DomHandler.hasClass(nextRow, 'p-selectable-row'))\n                return nextRow;\n            else\n                return this.findNextSelectableRow(nextRow);\n        }\n        else {\n            return null;\n        }\n    }\n    findPrevSelectableRow(row) {\n        let prevRow = row.previousElementSibling;\n        if (prevRow) {\n            if (DomHandler.hasClass(prevRow, 'p-selectable-row'))\n                return prevRow;\n            else\n                return this.findPrevSelectableRow(prevRow);\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSelectableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SelectableRow, deps: [{ token: Table }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: SelectableRow, selector: \"[pSelectableRow]\", inputs: { data: [\"pSelectableRow\", \"data\"], index: [\"pSelectableRowIndex\", \"index\"], pSelectableRowDisabled: \"pSelectableRowDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"touchend\": \"onTouchEnd($event)\", \"keydown.arrowdown\": \"onArrowDownKeyDown($event)\", \"keydown.arrowup\": \"onArrowUpKeyDown($event)\", \"keydown.enter\": \"onEnterKeyDown($event)\", \"keydown.shift.enter\": \"onEnterKeyDown($event)\", \"keydown.meta.enter\": \"onEnterKeyDown($event)\", \"keydown.pagedown\": \"onPageDownKeyDown()\", \"keydown.pageup\": \"onPageDownKeyDown()\", \"keydown.home\": \"onPageDownKeyDown()\", \"keydown.end\": \"onPageDownKeyDown()\", \"keydown.space\": \"onSpaceKeydown()\" }, properties: { \"class.p-selectable-row\": \"isEnabled()\", \"class.p-highlight\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SelectableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSelectableRow]',\n                    host: {\n                        'class': 'p-element',\n                        '[class.p-selectable-row]': 'isEnabled()',\n                        '[class.p-highlight]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pSelectableRow\"]\n            }], index: [{\n                type: Input,\n                args: [\"pSelectableRowIndex\"]\n            }], pSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onTouchEnd: [{\n                type: HostListener,\n                args: ['touchend', ['$event']]\n            }], onArrowDownKeyDown: [{\n                type: HostListener,\n                args: ['keydown.arrowdown', ['$event']]\n            }], onArrowUpKeyDown: [{\n                type: HostListener,\n                args: ['keydown.arrowup', ['$event']]\n            }], onEnterKeyDown: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.enter', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.meta.enter', ['$event']]\n            }], onPageDownKeyDown: [{\n                type: HostListener,\n                args: ['keydown.pagedown']\n            }, {\n                type: HostListener,\n                args: ['keydown.pageup']\n            }, {\n                type: HostListener,\n                args: ['keydown.home']\n            }, {\n                type: HostListener,\n                args: ['keydown.end']\n            }], onSpaceKeydown: [{\n                type: HostListener,\n                args: ['keydown.space']\n            }] } });\nclass SelectableRowDblClick {\n    constructor(dt, tableService) {\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSelectableRowDblClick.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SelectableRowDblClick, deps: [{ token: Table }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableRowDblClick.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: SelectableRowDblClick, selector: \"[pSelectableRowDblClick]\", inputs: { data: [\"pSelectableRowDblClick\", \"data\"], index: [\"pSelectableRowIndex\", \"index\"], pSelectableRowDisabled: \"pSelectableRowDisabled\" }, host: { listeners: { \"dblclick\": \"onClick($event)\" }, properties: { \"class.p-selectable-row\": \"isEnabled()\", \"class.p-highlight\": \"selected\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SelectableRowDblClick, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSelectableRowDblClick]',\n                    host: {\n                        'class': 'p-element',\n                        '[class.p-selectable-row]': 'isEnabled()',\n                        '[class.p-highlight]': 'selected'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pSelectableRowDblClick\"]\n            }], index: [{\n                type: Input,\n                args: [\"pSelectableRowIndex\"]\n            }], pSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }] } });\nclass ContextMenuRow {\n    constructor(dt, tableService, el) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.el = el;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe((data) => {\n                this.selected = this.dt.equals(this.data, data);\n            });\n        }\n    }\n    onContextMenu(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowRightClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.pContextMenuRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nContextMenuRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ContextMenuRow, deps: [{ token: Table }, { token: TableService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nContextMenuRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ContextMenuRow, selector: \"[pContextMenuRow]\", inputs: { data: [\"pContextMenuRow\", \"data\"], index: [\"pContextMenuRowIndex\", \"index\"], pContextMenuRowDisabled: \"pContextMenuRowDisabled\" }, host: { listeners: { \"contextmenu\": \"onContextMenu($event)\" }, properties: { \"class.p-highlight-contextmenu\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ContextMenuRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pContextMenuRow]',\n                    host: {\n                        'class': 'p-element',\n                        '[class.p-highlight-contextmenu]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pContextMenuRow\"]\n            }], index: [{\n                type: Input,\n                args: [\"pContextMenuRowIndex\"]\n            }], pContextMenuRowDisabled: [{\n                type: Input\n            }], onContextMenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\nclass RowToggler {\n    constructor(dt) {\n        this.dt = dt;\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.toggleRow(this.data, event);\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.pRowTogglerDisabled !== true;\n    }\n}\nRowToggler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: RowToggler, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nRowToggler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: RowToggler, selector: \"[pRowToggler]\", inputs: { data: [\"pRowToggler\", \"data\"], pRowTogglerDisabled: \"pRowTogglerDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: RowToggler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pRowToggler]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { data: [{\n                type: Input,\n                args: ['pRowToggler']\n            }], pRowTogglerDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass ResizableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'p-column-resizer';\n            this.el.nativeElement.appendChild(this.resizer);\n            this.zone.runOutsideAngular(() => {\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n            });\n        }\n    }\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n            document.addEventListener('mouseup', this.documentMouseUpListener);\n        });\n    }\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (event.which === 1) {\n            this.dt.onColumnResizeBegin(event);\n            this.bindDocumentEvents();\n        }\n    }\n    onDocumentMouseMove(event) {\n        this.dt.onColumnResize(event);\n    }\n    onDocumentMouseUp(event) {\n        this.dt.onColumnResizeEnd();\n        this.unbindDocumentEvents();\n    }\n    isEnabled() {\n        return this.pResizableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n        this.unbindDocumentEvents();\n    }\n}\nResizableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ResizableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nResizableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ResizableColumn, selector: \"[pResizableColumn]\", inputs: { pResizableColumnDisabled: \"pResizableColumnDisabled\" }, host: { classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ResizableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pResizableColumn]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { pResizableColumnDisabled: [{\n                type: Input\n            }] } });\nclass ReorderableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n            this.dragOverListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            this.dragEnterListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n    onDragStart(event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n    }\n    onDragOver(event) {\n        event.preventDefault();\n    }\n    onDragEnter(event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n    onDragLeave(event) {\n        this.dt.onColumnDragLeave(event);\n    }\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n    isEnabled() {\n        return this.pReorderableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n}\nReorderableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ReorderableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ReorderableColumn, selector: \"[pReorderableColumn]\", inputs: { pReorderableColumnDisabled: \"pReorderableColumnDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ReorderableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableColumn]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { pReorderableColumnDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass EditableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.selfClick = true;\n            if (this.dt.editingCell) {\n                if (this.dt.editingCell !== this.el.nativeElement) {\n                    if (!this.dt.isEditingCellValid()) {\n                        return;\n                    }\n                    this.closeEditingCell(true, event);\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n    openCell() {\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.dt.onEditInit.emit({ field: this.field, data: this.data, index: this.rowIndex });\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n                let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n                if (focusableElement) {\n                    focusableElement.focus();\n                }\n            }, 50);\n        });\n        this.overlayEventListener = (e) => {\n            if (this.el && this.el.nativeElement.contains(e.target)) {\n                this.dt.selfClick = true;\n            }\n        };\n        this.dt.overlaySubscription = this.dt.overlayService.clickObservable.subscribe(this.overlayEventListener);\n    }\n    closeEditingCell(completed, event) {\n        if (completed)\n            this.dt.onEditComplete.emit({ field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex });\n        else\n            this.dt.onEditCancel.emit({ field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex });\n        DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n        if (this.dt.overlaySubscription) {\n            this.dt.overlaySubscription.unsubscribe();\n        }\n    }\n    onEnterKeyDown(event) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n            }\n            event.preventDefault();\n        }\n    }\n    onEscapeKeyDown(event) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(false, event);\n            }\n            event.preventDefault();\n        }\n    }\n    onShiftKeyDown(event) {\n        if (this.isEnabled()) {\n            if (event.shiftKey)\n                this.moveToPreviousCell(event);\n            else {\n                this.moveToNextCell(event);\n            }\n        }\n    }\n    onArrowDown(event) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n                event.preventDefault();\n            }\n        }\n    }\n    onArrowUp(event) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n                event.preventDefault();\n            }\n        }\n    }\n    onArrowLeft(event) {\n        if (this.isEnabled()) {\n            this.moveToPreviousCell(event);\n        }\n    }\n    onArrowRight(event) {\n        if (this.isEnabled()) {\n            this.moveToNextCell(event);\n        }\n    }\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n    moveToPreviousCell(event) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findPreviousEditableColumn(currentCell);\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n    moveToNextCell(event) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findNextEditableColumn(currentCell);\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n    findPreviousEditableColumn(cell) {\n        let prevCell = cell.previousElementSibling;\n        if (!prevCell) {\n            let previousRow = cell.parentElement.previousElementSibling;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumn(cell) {\n        let nextCell = cell.nextElementSibling;\n        if (!nextCell) {\n            let nextRow = cell.parentElement.nextElementSibling;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumnByIndex(cell, index) {\n        let nextRow = cell.parentElement.nextElementSibling;\n        if (nextRow) {\n            let nextCell = nextRow.children[index];\n            if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n                return nextCell;\n            }\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n    findPrevEditableColumnByIndex(cell, index) {\n        let prevRow = cell.parentElement.previousElementSibling;\n        if (prevRow) {\n            let prevCell = prevRow.children[index];\n            if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n                return prevCell;\n            }\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.pEditableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.dt.overlaySubscription) {\n            this.dt.overlaySubscription.unsubscribe();\n        }\n    }\n}\nEditableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: EditableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nEditableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: EditableColumn, selector: \"[pEditableColumn]\", inputs: { data: [\"pEditableColumn\", \"data\"], field: [\"pEditableColumnField\", \"field\"], rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"], pEditableColumnDisabled: \"pEditableColumnDisabled\", pFocusCellSelector: \"pFocusCellSelector\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKeyDown($event)\", \"keydown.escape\": \"onEscapeKeyDown($event)\", \"keydown.tab\": \"onShiftKeyDown($event)\", \"keydown.shift.tab\": \"onShiftKeyDown($event)\", \"keydown.meta.tab\": \"onShiftKeyDown($event)\", \"keydown.arrowdown\": \"onArrowDown($event)\", \"keydown.arrowup\": \"onArrowUp($event)\", \"keydown.arrowleft\": \"onArrowLeft($event)\", \"keydown.arrowright\": \"onArrowRight($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: EditableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pEditableColumn]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pEditableColumn\"]\n            }], field: [{\n                type: Input,\n                args: [\"pEditableColumnField\"]\n            }], rowIndex: [{\n                type: Input,\n                args: [\"pEditableColumnRowIndex\"]\n            }], pEditableColumnDisabled: [{\n                type: Input\n            }], pFocusCellSelector: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKeyDown: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }], onEscapeKeyDown: [{\n                type: HostListener,\n                args: ['keydown.escape', ['$event']]\n            }], onShiftKeyDown: [{\n                type: HostListener,\n                args: ['keydown.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.meta.tab', ['$event']]\n            }], onArrowDown: [{\n                type: HostListener,\n                args: ['keydown.arrowdown', ['$event']]\n            }], onArrowUp: [{\n                type: HostListener,\n                args: ['keydown.arrowup', ['$event']]\n            }], onArrowLeft: [{\n                type: HostListener,\n                args: ['keydown.arrowleft', ['$event']]\n            }], onArrowRight: [{\n                type: HostListener,\n                args: ['keydown.arrowright', ['$event']]\n            }] } });\nclass EditableRow {\n    constructor(el) {\n        this.el = el;\n    }\n    isEnabled() {\n        return this.pEditableRowDisabled !== true;\n    }\n}\nEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: EditableRow, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: EditableRow, selector: \"[pEditableRow]\", inputs: { data: [\"pEditableRow\", \"data\"], pEditableRowDisabled: \"pEditableRowDisabled\" }, host: { classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: EditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pEditableRow]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pEditableRow\"]\n            }], pEditableRowDisabled: [{\n                type: Input\n            }] } });\nclass InitEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\nInitEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: InitEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nInitEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: InitEditableRow, selector: \"[pInitEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: InitEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pInitEditableRow]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass SaveEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n    }\n}\nSaveEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SaveEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nSaveEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: SaveEditableRow, selector: \"[pSaveEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: SaveEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSaveEditableRow]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass CancelEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\nCancelEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: CancelEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nCancelEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: CancelEditableRow, selector: \"[pCancelEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: CancelEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pCancelEditableRow]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass CellEditor {\n    constructor(dt, editableColumn, editableRow) {\n        this.dt = dt;\n        this.editableColumn = editableColumn;\n        this.editableRow = editableRow;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get editing() {\n        return (this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement) ||\n            (this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data));\n    }\n}\nCellEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: CellEditor, deps: [{ token: Table }, { token: EditableColumn, optional: true }, { token: EditableRow, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCellEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: CellEditor, selector: \"p-cellEditor\", host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: CellEditor, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-cellEditor',\n                    template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Table }, { type: EditableColumn, decorators: [{\n                        type: Optional\n                    }] }, { type: EditableRow, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TableRadioButton {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithRadio({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableRadioButton, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: TableRadioButton, selector: \"p-tableRadioButton\", inputs: { disabled: \"disabled\", value: \"value\", index: \"index\", inputId: \"inputId\", name: \"name\", ariaLabel: \"ariaLabel\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div class=\"p-radiobutton p-component\" [ngClass]=\"{'p-radiobutton-focused':focused, 'p-radiobutton-disabled': disabled}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-focus':focused, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableRadioButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableRadioButton',\n                    template: `\n        <div class=\"p-radiobutton p-component\" [ngClass]=\"{'p-radiobutton-focused':focused, 'p-radiobutton-disabled': disabled}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-focus':focused, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }] } });\nclass TableCheckbox {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithCheckbox({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableCheckbox, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: TableCheckbox, selector: \"p-tableCheckbox\", inputs: { disabled: \"disabled\", value: \"value\", index: \"index\", inputId: \"inputId\", name: \"name\", required: \"required\", ariaLabel: \"ariaLabel\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{'p-checkbox-focused':focused, 'p-checkbox-disabled': disabled}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-focus':focused, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{'p-checkbox-focused':focused, 'p-checkbox-disabled': disabled}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-focus':focused, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }] } });\nclass TableHeaderCheckbox {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            if (this.dt.value && this.dt.value.length > 0) {\n                this.dt.toggleRowsWithCheckbox(event, !this.checked);\n            }\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n    }\n    isDisabled() {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n    }\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n    updateCheckedState() {\n        this.cd.markForCheck();\n        if (this.dt._selectAll !== null) {\n            return this.dt._selectAll;\n        }\n        else {\n            const data = this.dt.selectionPageOnly ? this.dt.dataToRender : (this.dt.filteredValue || this.dt.value || []);\n            const val = this.dt.frozenValue ? [...this.dt.frozenValue, ...data] : data;\n            const selectableVal = this.dt.rowSelectable ? val.filter((data, index) => this.dt.rowSelectable({ data, index })) : val;\n            return ObjectUtils.isNotEmpty(selectableVal) && ObjectUtils.isNotEmpty(this.dt.selection) && selectableVal.every(v => this.dt.selection.some(s => this.dt.equals(v, s)));\n        }\n    }\n}\nTableHeaderCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableHeaderCheckbox, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableHeaderCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: TableHeaderCheckbox, selector: \"p-tableHeaderCheckbox\", inputs: { disabled: \"disabled\", inputId: \"inputId\", name: \"name\", ariaLabel: \"ariaLabel\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{'p-checkbox-focused':focused, 'p-checkbox-disabled': isDisabled()}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-focus':focused, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableHeaderCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableHeaderCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{'p-checkbox-focused':focused, 'p-checkbox-disabled': isDisabled()}\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-focus':focused, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }] } });\nclass ReorderableRowHandle {\n    constructor(el) {\n        this.el = el;\n    }\n    ngAfterViewInit() {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n    }\n}\nReorderableRowHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ReorderableRowHandle, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableRowHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ReorderableRowHandle, selector: \"[pReorderableRowHandle]\", inputs: { index: [\"pReorderableRowHandle\", \"index\"] }, host: { classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ReorderableRowHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableRowHandle]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { index: [{\n                type: Input,\n                args: [\"pReorderableRowHandle\"]\n            }] } });\nclass ReorderableRow {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.el.nativeElement.droppable = true;\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n            this.dragEndListener = this.onDragEnd.bind(this);\n            this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n            this.dragOverListener = this.onDragOver.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragStartListener) {\n            document.removeEventListener('dragstart', this.dragStartListener);\n            this.dragStartListener = null;\n        }\n        if (this.dragEndListener) {\n            document.removeEventListener('dragend', this.dragEndListener);\n            this.dragEndListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n            this.el.nativeElement.draggable = true;\n        else\n            this.el.nativeElement.draggable = false;\n    }\n    onDragStart(event) {\n        this.dt.onRowDragStart(event, this.index);\n    }\n    onDragEnd(event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n    }\n    onDragOver(event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n    }\n    onDragLeave(event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n    }\n    isEnabled() {\n        return this.pReorderableRowDisabled !== true;\n    }\n    onDrop(event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n            this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n        event.preventDefault();\n    }\n}\nReorderableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ReorderableRow, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ReorderableRow, selector: \"[pReorderableRow]\", inputs: { index: [\"pReorderableRow\", \"index\"], pReorderableRowDisabled: \"pReorderableRowDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ReorderableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableRow]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { index: [{\n                type: Input,\n                args: [\"pReorderableRow\"]\n            }], pReorderableRowDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass ColumnFilterFormElement {\n    constructor(dt) {\n        this.dt = dt;\n        this.useGrouping = true;\n    }\n    ngOnInit() {\n        this.filterCallback = value => {\n            this.filterConstraint.value = value;\n            this.dt._filter();\n        };\n    }\n    onModelChange(value) {\n        this.filterConstraint.value = value;\n        if (this.type === 'boolean' || value === '') {\n            this.dt._filter();\n        }\n    }\n    onTextInputEnterKeyDown(event) {\n        this.dt._filter();\n        event.preventDefault();\n    }\n    onNumericInputKeyDown(event) {\n        if (event.key === 'Enter') {\n            this.dt._filter();\n            event.preventDefault();\n        }\n    }\n}\nColumnFilterFormElement.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ColumnFilterFormElement, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Component });\nColumnFilterFormElement.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ColumnFilterFormElement, selector: \"p-columnFilterFormElement\", inputs: { field: \"field\", type: \"type\", filterConstraint: \"filterConstraint\", filterTemplate: \"filterTemplate\", placeholder: \"placeholder\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", locale: \"locale\", localeMatcher: \"localeMatcher\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [placeholder]=\"placeholder\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `, isInline: true, components: [{ type: i5.InputNumber, selector: \"p-inputNumber\", inputs: [\"showButtons\", \"format\", \"buttonLayout\", \"inputId\", \"styleClass\", \"style\", \"placeholder\", \"size\", \"maxlength\", \"tabindex\", \"title\", \"ariaLabel\", \"ariaRequired\", \"name\", \"required\", \"autocomplete\", \"min\", \"max\", \"incrementButtonClass\", \"decrementButtonClass\", \"incrementButtonIcon\", \"decrementButtonIcon\", \"readonly\", \"step\", \"allowEmpty\", \"locale\", \"localeMatcher\", \"mode\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"inputStyle\", \"inputStyleClass\", \"disabled\"], outputs: [\"onInput\", \"onFocus\", \"onBlur\", \"onKeyDown\"] }, { type: i6.TriStateCheckbox, selector: \"p-triStateCheckbox\", inputs: [\"disabled\", \"name\", \"ariaLabelledBy\", \"tabindex\", \"inputId\", \"style\", \"styleClass\", \"label\", \"readonly\", \"checkboxTrueIcon\", \"checkboxFalseIcon\"], outputs: [\"onChange\"] }, { type: i7.Calendar, selector: \"p-calendar\", inputs: [\"style\", \"styleClass\", \"inputStyle\", \"inputId\", \"name\", \"inputStyleClass\", \"placeholder\", \"ariaLabelledBy\", \"iconAriaLabel\", \"disabled\", \"dateFormat\", \"multipleSeparator\", \"rangeSeparator\", \"inline\", \"showOtherMonths\", \"selectOtherMonths\", \"showIcon\", \"icon\", \"appendTo\", \"readonlyInput\", \"shortYearCutoff\", \"monthNavigator\", \"yearNavigator\", \"hourFormat\", \"timeOnly\", \"stepHour\", \"stepMinute\", \"stepSecond\", \"showSeconds\", \"required\", \"showOnFocus\", \"showWeek\", \"dataType\", \"selectionMode\", \"maxDateCount\", \"showButtonBar\", \"todayButtonStyleClass\", \"clearButtonStyleClass\", \"autoZIndex\", \"baseZIndex\", \"panelStyleClass\", \"panelStyle\", \"keepInvalid\", \"hideOnDateTimeSelect\", \"touchUI\", \"timeSeparator\", \"focusTrap\", \"showTransitionOptions\", \"hideTransitionOptions\", \"tabindex\", \"view\", \"defaultDate\", \"minDate\", \"maxDate\", \"disabledDates\", \"disabledDays\", \"yearRange\", \"showTime\", \"responsiveOptions\", \"numberOfMonths\", \"firstDayOfWeek\", \"locale\"], outputs: [\"onFocus\", \"onBlur\", \"onClose\", \"onSelect\", \"onInput\", \"onTodayClick\", \"onClearClick\", \"onMonthChange\", \"onYearChange\", \"onClickOutside\", \"onShow\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i4.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.InputText, selector: \"[pInputText]\" }, { type: i9.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i9.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ColumnFilterFormElement, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-columnFilterFormElement',\n                    template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [placeholder]=\"placeholder\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { field: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], filterConstraint: [{\n                type: Input\n            }], filterTemplate: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }] } });\nclass ColumnFilter {\n    constructor(el, dt, renderer, config, overlayService) {\n        this.el = el;\n        this.dt = dt;\n        this.renderer = renderer;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.type = 'text';\n        this.display = 'row';\n        this.showMenu = true;\n        this.operator = FilterOperator.AND;\n        this.showOperator = true;\n        this.showClearButton = true;\n        this.showApplyButton = true;\n        this.showMatchModes = true;\n        this.showAddButton = true;\n        this.hideOnClear = false;\n        this.maxConstraints = 2;\n        this.useGrouping = true;\n    }\n    ngOnInit() {\n        if (!this.dt.filters[this.field]) {\n            this.initFieldFilterConstraint();\n        }\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.generateMatchModeOptions();\n            this.generateOperatorOptions();\n        });\n        this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n            this.initFieldFilterConstraint();\n        });\n        this.generateMatchModeOptions();\n        this.generateOperatorOptions();\n    }\n    generateMatchModeOptions() {\n        var _a;\n        this.matchModes = this.matchModeOptions ||\n            ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(key => {\n                return { label: this.config.getTranslation(key), value: key };\n            }));\n    }\n    generateOperatorOptions() {\n        this.operatorOptions = [\n            { label: this.config.getTranslation(TranslationKeys.MATCH_ALL), value: FilterOperator.AND },\n            { label: this.config.getTranslation(TranslationKeys.MATCH_ANY), value: FilterOperator.OR }\n        ];\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                default:\n                    this.filterTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    initFieldFilterConstraint() {\n        let defaultMatchMode = this.getDefaultMatchMode();\n        this.dt.filters[this.field] = this.display == 'row' ? { value: null, matchMode: defaultMatchMode } : [{ value: null, matchMode: defaultMatchMode, operator: this.operator }];\n    }\n    onMenuMatchModeChange(value, filterMeta) {\n        filterMeta.matchMode = value;\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n    onRowMatchModeChange(matchMode) {\n        this.dt.filters[this.field].matchMode = matchMode;\n        this.dt._filter();\n        this.hide();\n    }\n    onRowMatchModeKeyDown(event) {\n        let item = event.target;\n        switch (event.key) {\n            case 'ArrowDown':\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    item.removeAttribute('tabindex');\n                    nextItem.tabIndex = '0';\n                    nextItem.focus();\n                }\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    item.removeAttribute('tabindex');\n                    prevItem.tabIndex = '0';\n                    prevItem.focus();\n                }\n                event.preventDefault();\n                break;\n        }\n    }\n    onRowClearItemClick() {\n        this.clearFilter();\n        this.hide();\n    }\n    isRowMatchModeSelected(matchMode) {\n        return this.dt.filters[this.field].matchMode === matchMode;\n    }\n    addConstraint() {\n        this.dt.filters[this.field].push({ value: null, matchMode: this.getDefaultMatchMode(), operator: this.getDefaultOperator() });\n        this.dt._filter();\n    }\n    removeConstraint(filterMeta) {\n        this.dt.filters[this.field] = this.dt.filters[this.field].filter(meta => meta !== filterMeta);\n        this.dt._filter();\n    }\n    onOperatorChange(value) {\n        this.dt.filters[this.field].forEach(filterMeta => {\n            filterMeta.operator = value;\n            this.operator = value;\n        });\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n    toggleMenu() {\n        this.overlayVisible = !this.overlayVisible;\n    }\n    onToggleButtonKeyDown(event) {\n        switch (event.key) {\n            case 'Escape':\n            case 'Tab':\n                this.overlayVisible = false;\n                break;\n            case 'ArrowDown':\n                if (this.overlayVisible) {\n                    let focusable = DomHandler.getFocusableElements(this.overlay);\n                    if (focusable) {\n                        focusable[0].focus();\n                    }\n                    event.preventDefault();\n                }\n                else if (event.altKey) {\n                    this.overlayVisible = true;\n                    event.preventDefault();\n                }\n                break;\n        }\n    }\n    onEscape() {\n        this.overlayVisible = false;\n        this.icon.nativeElement.focus();\n    }\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return item.parentElement.firstElementChild;\n    }\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return item.parentElement.lastElementChild;\n    }\n    onContentClick() {\n        this.selfClick = true;\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                document.body.appendChild(this.overlay);\n                ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n                DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.overlayEventListener = (e) => {\n                    if (this.overlay && this.overlay.contains(e.target)) {\n                        this.selfClick = true;\n                    }\n                };\n                this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                if (this.overlaySubscription) {\n                    this.overlaySubscription.unsubscribe();\n                }\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                ZIndexUtils.clear(event.element);\n                break;\n        }\n    }\n    getDefaultMatchMode() {\n        if (this.matchMode) {\n            return this.matchMode;\n        }\n        else {\n            if (this.type === 'text')\n                return FilterMatchMode.STARTS_WITH;\n            else if (this.type === 'numeric')\n                return FilterMatchMode.EQUALS;\n            else if (this.type === 'date')\n                return FilterMatchMode.DATE_IS;\n            else\n                return FilterMatchMode.CONTAINS;\n        }\n    }\n    getDefaultOperator() {\n        return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n    }\n    hasRowFilter() {\n        return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n    }\n    get fieldConstraints() {\n        return this.dt.filters ? this.dt.filters[this.field] : null;\n    }\n    get showRemoveIcon() {\n        return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n    }\n    get showMenuButton() {\n        return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n    }\n    get isShowOperator() {\n        return this.showOperator && this.type !== 'boolean';\n    }\n    get isShowAddConstraint() {\n        return this.showAddButton && this.type !== 'boolean' && (this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints);\n    }\n    get applyButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.APPLY);\n    }\n    get clearButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.CLEAR);\n    }\n    get addRuleButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.ADD_RULE);\n    }\n    get removeRuleButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n    }\n    get noFilterLabel() {\n        return this.config.getTranslation(TranslationKeys.NO_FILTER);\n    }\n    hasFilter() {\n        let fieldFilter = this.dt.filters[this.field];\n        if (fieldFilter) {\n            if (Array.isArray(fieldFilter))\n                return !this.dt.isFilterBlank(fieldFilter[0].value);\n            else\n                return !this.dt.isFilterBlank(fieldFilter.value);\n        }\n        return false;\n    }\n    isOutsideClicked(event) {\n        return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target)\n            || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target)\n            || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button')\n            || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n                if (this.overlayVisible && !this.selfClick && this.isOutsideClicked(event)) {\n                    this.hide();\n                }\n                this.selfClick = false;\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n            this.selfClick = false;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = () => this.hide();\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    hide() {\n        this.overlayVisible = false;\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n    }\n    clearFilter() {\n        this.initFieldFilterConstraint();\n        this.dt._filter();\n        if (this.hideOnClear)\n            this.hide();\n    }\n    applyFilter() {\n        this.dt._filter();\n        this.hide();\n    }\n    ngOnDestroy() {\n        if (this.overlay) {\n            this.el.nativeElement.appendChild(this.overlay);\n            ZIndexUtils.clear(this.overlay);\n            this.onOverlayHide();\n        }\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n        if (this.overlaySubscription) {\n            this.overlaySubscription.unsubscribe();\n        }\n    }\n}\nColumnFilter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ColumnFilter, deps: [{ token: i0.ElementRef }, { token: Table }, { token: i0.Renderer2 }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nColumnFilter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: ColumnFilter, selector: \"p-columnFilter\", inputs: { field: \"field\", type: \"type\", display: \"display\", showMenu: \"showMenu\", matchMode: \"matchMode\", operator: \"operator\", showOperator: \"showOperator\", showClearButton: \"showClearButton\", showApplyButton: \"showApplyButton\", showMatchModes: \"showMatchModes\", showAddButton: \"showAddButton\", hideOnClear: \"hideOnClear\", placeholder: \"placeholder\", matchModeOptions: \"matchModeOptions\", maxConstraints: \"maxConstraints\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", locale: \"locale\", localeMatcher: \"localeMatcher\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"icon\", first: true, predicate: [\"icon\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showClearButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined p-button-sm\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" class=\"p-button-sm\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, components: [{ type: ColumnFilterFormElement, selector: \"p-columnFilterFormElement\", inputs: [\"field\", \"type\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"] }, { type: i10.Dropdown, selector: \"p-dropdown\", inputs: [\"scrollHeight\", \"filter\", \"name\", \"style\", \"panelStyle\", \"styleClass\", \"panelStyleClass\", \"readonly\", \"required\", \"editable\", \"appendTo\", \"tabindex\", \"placeholder\", \"filterPlaceholder\", \"filterLocale\", \"inputId\", \"selectId\", \"dataKey\", \"filterBy\", \"autofocus\", \"resetFilterOnHide\", \"dropdownIcon\", \"optionLabel\", \"optionValue\", \"optionDisabled\", \"optionGroupLabel\", \"optionGroupChildren\", \"autoDisplayFirst\", \"group\", \"showClear\", \"emptyFilterMessage\", \"emptyMessage\", \"virtualScroll\", \"itemSize\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"ariaFilterLabel\", \"ariaLabel\", \"ariaLabelledBy\", \"filterMatchMode\", \"maxlength\", \"tooltip\", \"tooltipPosition\", \"tooltipPositionStyle\", \"tooltipStyleClass\", \"autofocusFilter\", \"disabled\", \"options\", \"filterValue\"], outputs: [\"onChange\", \"onFilter\", \"onFocus\", \"onBlur\", \"onClick\", \"onShow\", \"onHide\", \"onClear\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i9.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i9.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i11.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n            ]),\n            transition(':leave', [\n                animate('.1s linear', style({ opacity: 0 }))\n            ])\n        ])\n    ], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: ColumnFilter, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-columnFilter',\n                    template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showClearButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined p-button-sm\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" class=\"p-button-sm\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n                            ]),\n                            transition(':leave', [\n                                animate('.1s linear', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: Table }, { type: i0.Renderer2 }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }]; }, propDecorators: { field: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], showMenu: [{\n                type: Input\n            }], matchMode: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], showOperator: [{\n                type: Input\n            }], showClearButton: [{\n                type: Input\n            }], showApplyButton: [{\n                type: Input\n            }], showMatchModes: [{\n                type: Input\n            }], showAddButton: [{\n                type: Input\n            }], hideOnClear: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], matchModeOptions: [{\n                type: Input\n            }], maxConstraints: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }], icon: [{\n                type: ViewChild,\n                args: ['icon']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TableModule {\n}\nTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableModule, declarations: [Table, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement], imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], exports: [Table, SharedModule, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter] });\nTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableModule, imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule,\n        ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: TableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n                    exports: [Table, SharedModule, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon,\n                        TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n                    declarations: [Table, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, SortIcon,\n                        TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, FrozenColumn, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowGroupHeader, RowToggler, SaveEditableRow, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService };\n"]},"metadata":{},"sourceType":"module"}